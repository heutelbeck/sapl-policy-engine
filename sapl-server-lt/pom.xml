<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2017-2024 Dominic Heutelbeck (dominic@heutelbeck.com)

    SPDX-License-Identifier: Apache-2.0

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>io.sapl</groupId>
		<artifactId>sapl-policy-engine</artifactId>
		<version>3.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>sapl-server-lt</artifactId>

	<packaging>jar</packaging>

	<name>SAPL Server LT</name>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.sapl</groupId>
				<artifactId>sapl-bom</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-rsocket</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-messaging</artifactId>
		</dependency>
		<dependency>
			<groupId>io.sapl</groupId>
			<artifactId>sapl-spring-pdp-embedded</artifactId>
		</dependency>
		<dependency>
			<groupId>io.sapl</groupId>
			<artifactId>sapl-webflux-endpoint</artifactId>
		</dependency>
		<dependency>
			<groupId>io.sapl</groupId>
			<artifactId>sapl-jwt</artifactId>
		</dependency>
		<dependency>
			<groupId>io.sapl</groupId>
			<artifactId>sapl-mqtt-pip</artifactId>
		</dependency>
		<dependency>
			<groupId>io.sapl</groupId>
			<artifactId>sapl-mqtt-functions</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.passay</groupId>
			<artifactId>passay</artifactId>
			<version>1.6.4</version>
		</dependency>
		<dependency>
			<!-- required for Argon2 -->
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcpkix-jdk15on</artifactId>
			<version>1.70</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>io.sapl</groupId>
			<artifactId>sapl-rsocket-endpoint</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-oauth2-resource-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-oauth2-jose</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<!-- create fat JAR, required as boot starter is not parent -->
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<image>
						<name>
							${docker-registry-url}/${project.artifactId}:${project.version}</name>
					</image>
					<layout>ZIP</layout>
					<layers>
						<enabled>true</enabled>
					</layers>
					<excludes>
						<exclude>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-configuration-processor</artifactId>
						</exclude>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<!-- write version to manifest to show up in banner when
						running JAR -->
						<manifestEntries>
							<Implementation-Version>${project.version}</Implementation-Version>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>publish</id>
			<build>
				<plugins>
					<!-- Sign project artifacts with default jarsigner (https://docs.oracle.com/javase/8/docs/technotes/tools/windows/jarsigner.html) -->
					<!-- Requires a valid certificate in a keystore. -->
					<!-- Add relevant certificate with -Djarsigner.alias="alias", -Djarsigner.storepass="password" -->
					<!-- <plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jarsigner-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<execution>
								<id>sign</id>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
							<execution>
								<id>verify</id>
								<goals>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin> -->
					<!-- Sign module files with keyless sigstore -->
					<!-- <plugin>
						<groupId>dev.sigstore</groupId>
						<artifactId>sigstore-maven-plugin</artifactId>
						<version>0.4.0</version>
						<executions>
							<execution>
								<id>sign</id>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin> -->
					<!-- Sign jarfile with keyless sigstore -->
					<!-- <plugin>
						<groupId>dev.sigstore</groupId>
						<artifactId>sigstore-maven-plugin</artifactId>
						<version>0.4.0</version>
						<executions>
						  <execution>
							<id>sigstore-jarsign</id>
							<goals>
							  <goal>jarsign</goal>
							</goals>
						  </execution>
						</executions>
					  </plugin> -->
					<!-- Creates SBOM based on SPDX -->
					<plugin>
						<groupId>org.spdx</groupId>
						<artifactId>spdx-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>build-spdx</id>
								<phase>package</phase>
								<goals>
									<goal>createSPDX</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- Enables creation and push of docker images for publish -->
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.44.0</version>
						<configuration>
							<images>
								<image>
									<name>${docker-registry-url}/${project.artifactId}</name>
									<build>
										<contextDir>${project.basedir}</contextDir>
										<buildx>
											<attestations>
												<provenance>mode=max</provenance>
												<sbom>true</sbom>
											</attestations>
										</buildx>
										<tags>
											<tag>${project.version}</tag>
										</tags>
										<args>
											<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
										</args>
									</build>
								</image>
							</images>
						</configuration>
						<executions>
							<execution>
								<id>build-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
							<execution>
								<id>push-image</id>
								<phase>deploy</phase>
								<goals>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<image>
								<publish>true</publish>
							</image>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>default</id>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<repository>
								${docker-registry-url}/${project.artifactId}</repository>
							<tag>${project.version}</tag>
							<useMavenSettingsForAuth>true</useMavenSettingsForAuth>
							<buildArgs>
								<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
							</buildArgs>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>