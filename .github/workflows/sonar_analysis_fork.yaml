#
# Copyright Â© 2017-2024 Dominic Heutelbeck (dominic@heutelbeck.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# This workflow allows for analyzing pull requests from forks with SonarCloud. Since
# SonarCloud analysis requires a SonarCloud token in the form of a repository secret
# and workflows triggered by pull requests from a fork do not have access to these
# secrets, this workaround is needed. Information and files needed for a SonarCloud
# analysis are downloaded as an artifact from a previous build workflow.
# This workflow is always triggered by the conclusion of the build workflow but is skipped
# if the previous workflow was not triggered by a fork or failed.
name: SonarCloud Analysis for PRs from Fork
on:
  workflow_run:
    workflows: [Testing and Deployment]
    types:
      - completed

permissions:  # added using https://github.com/step-security/secure-repo
  contents: read

jobs:
  analyze:
    if: ${{ github.event.workflow_run.head_repository.fork && (github.event.workflow_run.conclusion == 'success') }}
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 35

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
      with:
        egress-policy: audit

    - name: Download Artifact
      uses: actions/download-artifact@eaceaf801fd36c7dee90939fad912460b18a1ffe # v4.1.2
      with:
        name: pr_build
        github-token: ${{ secrets.GHUB_ACCESS_TOKEN }}
        run-id: ${{ github.event.workflow_run.id }}

    - name: Set up JDK 17
      uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93 # v4.0.0
      with:
        distribution: 'temurin'
        java-version: 17
        cache: 'maven'

      # The artifact downloaded above contains a file pr_data.text with the number of
      # the pull request that triggered the previous build workflow.
    - name: Get PR Number
      run: echo "PR=$(cat pr_data.txt)" >> $GITHUB_ENV

      # For the SonarCloud analysis to contain rules and issues from SpotBugs, the
      # SpotBugs report path needs to be added as a parameter. Coverage information
      # from JaCoCo is included automatically as long as the report is found at its
      # usual place in target/site/jacoco/jacoco.xml.
      # In order for SonarCloud to restrict its analysis to the pull request that
      # triggered the previous build workflow and for the sonarcloud bot to post the
      # results to the pull request on GitHub, the parameter "sonar.pullrequest.key"
      # with the number of the pull request is needed.
      # To post the analysis result as a check to the pull request on GitHub and to the
      # correct commit, the parameter "sonar.scm.revision" with the sha of the most
      # recent commit of the pull request needs to be added.
    - name: Analyze with SonarCloud
      env:
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
      run: >
        mvn -B sonar:sonar
        -pl '!sapl-bom'
        -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
        -Dsonar.host.url=https://sonarcloud.io
        -Dsonar.organization=heutelbeck
        -Dsonar.projectKey=heutelbeck_sapl-policy-engine
        -Dsonar.java.spotbugs.reportPaths=target/spotbugsXml.xml
        -Dsonar.pullrequest.key=${PR}
        -Dsonar.scm.revision=${{ github.event.workflow_run.head_sha }}

    - name: Clean up Local Repository before Caching
      run: rm -rf /.m2/repository/io/sapl