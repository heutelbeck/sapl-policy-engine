Apache Maven 3.8.7
Maven home: /usr/share/maven
Java version: 17.0.9, vendor: Debian, runtime: /usr/lib/jvm/java-17-openjdk-amd64
Default locale: de_DE, platform encoding: UTF-8
OS name: "linux", version: "6.1.0-16-amd64", arch: "amd64", family: "unix"
[DEBUG] Created new class realm maven.api
[DEBUG] Importing foreign packages into class realm maven.api
[DEBUG]   Imported: javax.annotation.* < plexus.core
[DEBUG]   Imported: javax.annotation.security.* < plexus.core
[DEBUG]   Imported: javax.inject.* < plexus.core
[DEBUG]   Imported: org.apache.maven.* < plexus.core
[DEBUG]   Imported: org.apache.maven.artifact < plexus.core
[DEBUG]   Imported: org.apache.maven.classrealm < plexus.core
[DEBUG]   Imported: org.apache.maven.cli < plexus.core
[DEBUG]   Imported: org.apache.maven.configuration < plexus.core
[DEBUG]   Imported: org.apache.maven.exception < plexus.core
[DEBUG]   Imported: org.apache.maven.execution < plexus.core
[DEBUG]   Imported: org.apache.maven.execution.scope < plexus.core
[DEBUG]   Imported: org.apache.maven.lifecycle < plexus.core
[DEBUG]   Imported: org.apache.maven.model < plexus.core
[DEBUG]   Imported: org.apache.maven.monitor < plexus.core
[DEBUG]   Imported: org.apache.maven.plugin < plexus.core
[DEBUG]   Imported: org.apache.maven.profiles < plexus.core
[DEBUG]   Imported: org.apache.maven.project < plexus.core
[DEBUG]   Imported: org.apache.maven.reporting < plexus.core
[DEBUG]   Imported: org.apache.maven.repository < plexus.core
[DEBUG]   Imported: org.apache.maven.rtinfo < plexus.core
[DEBUG]   Imported: org.apache.maven.settings < plexus.core
[DEBUG]   Imported: org.apache.maven.toolchain < plexus.core
[DEBUG]   Imported: org.apache.maven.usability < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.* < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.authentication < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.authorization < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.events < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.observers < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.proxy < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.repository < plexus.core
[DEBUG]   Imported: org.apache.maven.wagon.resource < plexus.core
[DEBUG]   Imported: org.codehaus.classworlds < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.* < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.classworlds < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.component < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.configuration < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.container < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.context < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.lifecycle < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.logging < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.personality < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.util.xml.Xpp3Dom < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.util.xml.pull.XmlPullParser < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.util.xml.pull.XmlPullParserException < plexus.core
[DEBUG]   Imported: org.codehaus.plexus.util.xml.pull.XmlSerializer < plexus.core
[DEBUG]   Imported: org.eclipse.aether.* < plexus.core
[DEBUG]   Imported: org.eclipse.aether.artifact < plexus.core
[DEBUG]   Imported: org.eclipse.aether.collection < plexus.core
[DEBUG]   Imported: org.eclipse.aether.deployment < plexus.core
[DEBUG]   Imported: org.eclipse.aether.graph < plexus.core
[DEBUG]   Imported: org.eclipse.aether.impl < plexus.core
[DEBUG]   Imported: org.eclipse.aether.installation < plexus.core
[DEBUG]   Imported: org.eclipse.aether.internal.impl < plexus.core
[DEBUG]   Imported: org.eclipse.aether.metadata < plexus.core
[DEBUG]   Imported: org.eclipse.aether.repository < plexus.core
[DEBUG]   Imported: org.eclipse.aether.resolution < plexus.core
[DEBUG]   Imported: org.eclipse.aether.spi < plexus.core
[DEBUG]   Imported: org.eclipse.aether.transfer < plexus.core
[DEBUG]   Imported: org.eclipse.aether.version < plexus.core
[DEBUG]   Imported: org.fusesource.jansi.* < plexus.core
[DEBUG]   Imported: org.slf4j.* < plexus.core
[DEBUG]   Imported: org.slf4j.event.* < plexus.core
[DEBUG]   Imported: org.slf4j.helpers.* < plexus.core
[DEBUG]   Imported: org.slf4j.spi.* < plexus.core
[DEBUG] Populating class realm maven.api
[INFO] Error stacktraces are turned on.
[DEBUG] Message scheme: plain
[DEBUG] Reading global settings from /usr/share/maven/conf/settings.xml
[DEBUG] Reading user settings from /home/oludwig/.m2/settings.xml
[DEBUG] Reading global toolchains from /usr/share/maven/conf/toolchains.xml
[DEBUG] Reading user toolchains from /home/oludwig/.m2/toolchains.xml
[DEBUG] Using local repository at /home/oludwig/.m2/repository
[DEBUG] Using manager EnhancedLocalRepositoryManager with priority 10.0 for /home/oludwig/.m2/repository
[INFO] Scanning for projects...
[DEBUG] Using mirror maven-default-http-blocker (http://0.0.0.0/) for apache.snapshots (http://repository.apache.org/snapshots).
[DEBUG] Could not find metadata org.bouncycastle:bcpg-jdk18on/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.bouncycastle:bcpg-jdk18on/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.runtime/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.osgi:org.osgi.service.prefs/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.osgi:org.osgi.service.prefs/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.contenttype/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.app/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.preferences/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.osgi:org.osgi.service.prefs/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.osgi:org.osgi.service.prefs/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Using mirror maven-default-http-blocker (http://0.0.0.0/) for ow2-snapshot (http://repository.ow2.org/nexus/content/repositories/snapshots).
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.p2.artifact.repository/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.p2.artifact.repository/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.p2.metadata/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.p2.metadata/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.p2.core/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.p2.core/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.tukaani:xz/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.tukaani:xz/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.p2.core/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.p2.core/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.p2.metadata.repository/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.p2.metadata.repository/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.p2.repository/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.p2.repository/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.registry/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.bouncycastle:bcprov-jdk18on/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.bouncycastle:bcprov-jdk18on/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.security/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.security/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.ecf:org.eclipse.ecf/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.ecf:org.eclipse.ecf/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.ecf:org.eclipse.ecf.filetransfer/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.ecf:org.eclipse.ecf.filetransfer/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.ecf:org.eclipse.ecf.provider.filetransfer/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.ecf:org.eclipse.ecf.provider.filetransfer/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.p2.core/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.p2.core/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.p2.repository/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.p2.repository/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Using mirror maven-default-http-blocker (http://0.0.0.0/) for codehaus.org (http://snapshots.repository.codehaus.org).
[DEBUG] Using mirror maven-default-http-blocker (http://0.0.0.0/) for codehaus-snapshots (http://nexus.codehaus.org/snapshots/).
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.common/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.core.jobs/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.p2.metadata/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.p2.metadata/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.ow2.sat4j:org.ow2.sat4j.core/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.ow2.sat4j:org.ow2.sat4j.core/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.ow2.sat4j:org.ow2.sat4j.pb/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.ow2.sat4j:org.ow2.sat4j.pb/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.simpleconfigurator/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.simpleconfigurator/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Could not find metadata org.eclipse.platform:org.eclipse.equinox.p2.engine/maven-metadata.xml in local (/home/oludwig/.m2/repository)
[DEBUG] Skipped remote request for org.eclipse.platform:org.eclipse.equinox.p2.engine/maven-metadata.xml, locally cached metadata up-to-date
[DEBUG] Dependency collection stats {ConflictMarker.analyzeTime=15488708, ConflictMarker.markTime=5901504, ConflictMarker.nodeCount=10232, ConflictIdSorter.graphTime=23127022, ConflictIdSorter.topsortTime=624864, ConflictIdSorter.conflictIdCount=89, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=12789553, ConflictResolver.conflictItemCount=823, DefaultDependencyCollector.collectTime=539823491, DefaultDependencyCollector.transformTime=59193810}
[DEBUG] org.eclipse.tycho:tycho-maven-plugin:jar:3.0.5
[DEBUG]    org.eclipse.tycho:tycho-core:jar:3.0.5:compile
[DEBUG]       org.eclipse.tycho:org.eclipse.tycho.p2.tools.shared:jar:3.0.5:compile
[DEBUG]       org.eclipse.tycho:org.eclipse.tycho.p2.resolver.shared:jar:3.0.5:compile
[DEBUG]       org.codehaus.plexus:plexus-archiver:jar:4.7.1:compile (version managed from default)
[DEBUG]          javax.inject:javax.inject:jar:1:compile
[DEBUG]          org.codehaus.plexus:plexus-utils:jar:3.5.1:compile (version managed from default)
[DEBUG]          org.codehaus.plexus:plexus-io:jar:3.4.1:compile
[DEBUG]          org.apache.commons:commons-compress:jar:1.23.0:compile (version managed from default)
[DEBUG]          org.iq80.snappy:snappy:jar:0.4:compile
[DEBUG]          org.tukaani:xz:jar:1.9:compile
[DEBUG]          com.github.luben:zstd-jni:jar:1.5.5-2:runtime
[DEBUG]       org.codehaus.plexus:plexus-interpolation:jar:1.26:compile
[DEBUG]       org.codehaus.plexus:plexus-cipher:jar:2.0:compile (version managed from default)
[DEBUG]       org.eclipse.tycho:sisu-equinox-launching:jar:3.0.5:compile
[DEBUG]          org.eclipse.tycho:org.eclipse.tycho.embedder.shared:jar:3.0.5:compile
[DEBUG]          org.eclipse.platform:org.eclipse.osgi:jar:3.18.400:compile (version managed from default)
[DEBUG]          org.apache.commons:commons-exec:jar:1.3:compile (version managed from default)
[DEBUG]       org.eclipse.tycho:sisu-equinox-embedder:jar:3.0.5:compile
[DEBUG]       org.eclipse.tycho:sisu-osgi-api:jar:3.0.5:compile
[DEBUG]       org.eclipse.tycho:tycho-metadata-model:jar:3.0.5:compile
[DEBUG]          de.pdark:decentxml:jar:1.4:compile (version managed from default)
[DEBUG]       org.eclipse.tycho:tycho-embedder-api:jar:3.0.5:compile
[DEBUG]       org.eclipse.tycho:org.eclipse.tycho.core.shared:jar:3.0.5:compile
[DEBUG]       org.eclipse.tycho:p2-maven-plugin:jar:3.0.5:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.p2.core:jar:2.9.200:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.p2.publisher:jar:1.8.0:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.p2.director:jar:2.6.0:compile
[DEBUG]             org.ow2.sat4j:org.ow2.sat4j.core:jar:2.3.6:compile
[DEBUG]             org.ow2.sat4j:org.ow2.sat4j.pb:jar:2.3.6:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.p2.engine:jar:2.7.500:compile
[DEBUG]             org.osgi:org.osgi.service.prefs:jar:1.1.2:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.p2.metadata:jar:2.7.0:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.p2.repository:jar:2.7.0:compile
[DEBUG]             org.bouncycastle:bcprov-jdk18on:jar:1.73:compile
[DEBUG]          org.eclipse.platform:org.eclipse.osgi.compatibility.state:jar:1.2.800:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.p2.publisher.eclipse:jar:1.5.0:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.frameworkadmin:jar:2.2.100:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.preferences:jar:3.10.200:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.security:jar:1.3.1000:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.p2.metadata.repository:jar:1.5.0:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.p2.updatesite:jar:1.3.0:compile
[DEBUG]          org.eclipse.tycho:sisu-osgi-connect:jar:3.0.5:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.p2.jarprocessor:jar:1.3.0:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.p2.touchpoint.natives:jar:1.5.0:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.p2.touchpoint.eclipse:jar:2.4.0:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.p2.garbagecollector:jar:1.3.0:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.concurrent:jar:1.2.100:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.simpleconfigurator:jar:1.4.200:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.app:jar:1.6.200:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.frameworkadmin.equinox:jar:1.2.300:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.simpleconfigurator.manipulator:jar:2.2.100:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.p2.transport.ecf:jar:1.3.300:compile
[DEBUG]          org.eclipse.ecf:org.eclipse.ecf.identity:jar:3.10.0:compile
[DEBUG]          org.eclipse.ecf:org.eclipse.ecf.provider.filetransfer:jar:3.3.0:compile
[DEBUG]          org.eclipse.ecf:org.eclipse.ecf.filetransfer:jar:5.1.102:compile
[DEBUG]          org.eclipse.ecf:org.eclipse.ecf:jar:3.11.0:compile
[DEBUG]          org.apache.felix:org.apache.felix.scr:jar:2.2.6:compile
[DEBUG]             org.codehaus.mojo:animal-sniffer-annotations:jar:1.9:compile
[DEBUG]          org.osgi:org.osgi.service.component:jar:1.5.1:compile
[DEBUG]             org.osgi:org.osgi.namespace.extender:jar:1.0.1:compile
[DEBUG]          org.bouncycastle:bcpg-jdk15on:jar:1.70:compile
[DEBUG]          org.bouncycastle:bcprov-jdk15on:jar:1.70:compile
[DEBUG]       org.eclipse.tycho:org.eclipse.tycho.p2.maven.repository:jar:3.0.5:compile
[DEBUG]       org.eclipse.tycho:org.eclipse.tycho.p2.resolver.impl:jar:3.0.5:compile
[DEBUG]       org.eclipse.tycho:org.eclipse.tycho.p2.tools.impl:jar:3.0.5:compile
[DEBUG]       org.eclipse.tycho:org.eclipse.tycho.noopsecurity:jar:3.0.5:compile
[DEBUG]       org.eclipse.platform:org.eclipse.core.runtime:jar:3.27.0:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.common:jar:3.18.0:compile
[DEBUG]          org.eclipse.platform:org.eclipse.core.jobs:jar:3.14.0:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.registry:jar:3.11.200:compile
[DEBUG]          org.eclipse.platform:org.eclipse.core.contenttype:jar:3.9.0:compile
[DEBUG]       org.eclipse.platform:org.eclipse.core.net:jar:1.5.0:compile
[DEBUG]       biz.aQute.bnd:biz.aQute.bndlib:jar:6.4.0:compile (version managed from default) (exclusions managed from default)
[DEBUG]          biz.aQute.bnd:biz.aQute.bnd.util:jar:6.4.0:compile
[DEBUG]       org.osgi:org.osgi.service.repository:jar:1.1.0:compile
[DEBUG]       org.osgi:org.osgi.util.function:jar:1.2.0:compile
[DEBUG]          org.osgi:osgi.annotation:jar:8.0.1:compile
[DEBUG]       org.osgi:org.osgi.util.promise:jar:1.3.0:compile
[DEBUG]       org.slf4j:slf4j-api:jar:2.0.7:compile
[DEBUG]       org.eclipse.platform:org.eclipse.equinox.p2.director.app:jar:1.3.0:compile
[DEBUG]          org.bouncycastle:bcpg-jdk18on:jar:1.73:compile
[DEBUG]       org.eclipse.platform:org.eclipse.equinox.p2.repository.tools:jar:2.3.200:compile
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.p2.artifact.repository:jar:1.4.600:compile
[DEBUG]       commons-io:commons-io:jar:2.13.0:compile
[DEBUG]       commons-codec:commons-codec:jar:1.16.0:compile
[DEBUG]    org.eclipse.tycho:tycho-p2-facade:jar:3.0.5:compile
[DEBUG]       org.codehaus.plexus:plexus-component-annotations:jar:2.1.1:compile (version managed from default)
[DEBUG] Created new class realm extension>org.eclipse.tycho:tycho-maven-plugin:3.0.5
[DEBUG] Importing foreign packages into class realm extension>org.eclipse.tycho:tycho-maven-plugin:3.0.5
[DEBUG]   Imported:  < maven.api
[DEBUG] Populating class realm extension>org.eclipse.tycho:tycho-maven-plugin:3.0.5
[DEBUG]   Included: org.eclipse.tycho:tycho-maven-plugin:jar:3.0.5
[DEBUG]   Included: org.eclipse.tycho:tycho-core:jar:3.0.5
[DEBUG]   Included: org.eclipse.tycho:org.eclipse.tycho.p2.tools.shared:jar:3.0.5
[DEBUG]   Included: org.eclipse.tycho:org.eclipse.tycho.p2.resolver.shared:jar:3.0.5
[DEBUG]   Included: org.codehaus.plexus:plexus-archiver:jar:4.7.1
[DEBUG]   Included: org.codehaus.plexus:plexus-utils:jar:3.5.1
[DEBUG]   Included: org.codehaus.plexus:plexus-io:jar:3.4.1
[DEBUG]   Included: org.apache.commons:commons-compress:jar:1.23.0
[DEBUG]   Included: org.iq80.snappy:snappy:jar:0.4
[DEBUG]   Included: org.tukaani:xz:jar:1.9
[DEBUG]   Included: com.github.luben:zstd-jni:jar:1.5.5-2
[DEBUG]   Included: org.codehaus.plexus:plexus-interpolation:jar:1.26
[DEBUG]   Included: org.codehaus.plexus:plexus-cipher:jar:2.0
[DEBUG]   Included: org.eclipse.tycho:sisu-equinox-launching:jar:3.0.5
[DEBUG]   Included: org.eclipse.tycho:org.eclipse.tycho.embedder.shared:jar:3.0.5
[DEBUG]   Included: org.eclipse.platform:org.eclipse.osgi:jar:3.18.400
[DEBUG]   Included: org.apache.commons:commons-exec:jar:1.3
[DEBUG]   Included: org.eclipse.tycho:sisu-equinox-embedder:jar:3.0.5
[DEBUG]   Included: org.eclipse.tycho:sisu-osgi-api:jar:3.0.5
[DEBUG]   Included: org.eclipse.tycho:tycho-metadata-model:jar:3.0.5
[DEBUG]   Included: de.pdark:decentxml:jar:1.4
[DEBUG]   Included: org.eclipse.tycho:tycho-embedder-api:jar:3.0.5
[DEBUG]   Included: org.eclipse.tycho:org.eclipse.tycho.core.shared:jar:3.0.5
[DEBUG]   Included: org.eclipse.tycho:p2-maven-plugin:jar:3.0.5
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.p2.core:jar:2.9.200
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.p2.publisher:jar:1.8.0
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.p2.director:jar:2.6.0
[DEBUG]   Included: org.ow2.sat4j:org.ow2.sat4j.core:jar:2.3.6
[DEBUG]   Included: org.ow2.sat4j:org.ow2.sat4j.pb:jar:2.3.6
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.p2.engine:jar:2.7.500
[DEBUG]   Included: org.osgi:org.osgi.service.prefs:jar:1.1.2
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.p2.metadata:jar:2.7.0
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.p2.repository:jar:2.7.0
[DEBUG]   Included: org.bouncycastle:bcprov-jdk18on:jar:1.73
[DEBUG]   Included: org.eclipse.platform:org.eclipse.osgi.compatibility.state:jar:1.2.800
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.p2.publisher.eclipse:jar:1.5.0
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.frameworkadmin:jar:2.2.100
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.preferences:jar:3.10.200
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.security:jar:1.3.1000
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.p2.metadata.repository:jar:1.5.0
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.p2.updatesite:jar:1.3.0
[DEBUG]   Included: org.eclipse.tycho:sisu-osgi-connect:jar:3.0.5
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.p2.jarprocessor:jar:1.3.0
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.p2.touchpoint.natives:jar:1.5.0
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.p2.touchpoint.eclipse:jar:2.4.0
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.p2.garbagecollector:jar:1.3.0
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.concurrent:jar:1.2.100
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.simpleconfigurator:jar:1.4.200
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.app:jar:1.6.200
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.frameworkadmin.equinox:jar:1.2.300
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.simpleconfigurator.manipulator:jar:2.2.100
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.p2.transport.ecf:jar:1.3.300
[DEBUG]   Included: org.eclipse.ecf:org.eclipse.ecf.identity:jar:3.10.0
[DEBUG]   Included: org.eclipse.ecf:org.eclipse.ecf.provider.filetransfer:jar:3.3.0
[DEBUG]   Included: org.eclipse.ecf:org.eclipse.ecf.filetransfer:jar:5.1.102
[DEBUG]   Included: org.eclipse.ecf:org.eclipse.ecf:jar:3.11.0
[DEBUG]   Included: org.apache.felix:org.apache.felix.scr:jar:2.2.6
[DEBUG]   Included: org.codehaus.mojo:animal-sniffer-annotations:jar:1.9
[DEBUG]   Included: org.osgi:org.osgi.service.component:jar:1.5.1
[DEBUG]   Included: org.osgi:org.osgi.namespace.extender:jar:1.0.1
[DEBUG]   Included: org.bouncycastle:bcpg-jdk15on:jar:1.70
[DEBUG]   Included: org.bouncycastle:bcprov-jdk15on:jar:1.70
[DEBUG]   Included: org.eclipse.tycho:org.eclipse.tycho.p2.maven.repository:jar:3.0.5
[DEBUG]   Included: org.eclipse.tycho:org.eclipse.tycho.p2.resolver.impl:jar:3.0.5
[DEBUG]   Included: org.eclipse.tycho:org.eclipse.tycho.p2.tools.impl:jar:3.0.5
[DEBUG]   Included: org.eclipse.tycho:org.eclipse.tycho.noopsecurity:jar:3.0.5
[DEBUG]   Included: org.eclipse.platform:org.eclipse.core.runtime:jar:3.27.0
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.common:jar:3.18.0
[DEBUG]   Included: org.eclipse.platform:org.eclipse.core.jobs:jar:3.14.0
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.registry:jar:3.11.200
[DEBUG]   Included: org.eclipse.platform:org.eclipse.core.contenttype:jar:3.9.0
[DEBUG]   Included: org.eclipse.platform:org.eclipse.core.net:jar:1.5.0
[DEBUG]   Included: biz.aQute.bnd:biz.aQute.bndlib:jar:6.4.0
[DEBUG]   Included: biz.aQute.bnd:biz.aQute.bnd.util:jar:6.4.0
[DEBUG]   Included: org.osgi:org.osgi.service.repository:jar:1.1.0
[DEBUG]   Included: org.osgi:org.osgi.util.function:jar:1.2.0
[DEBUG]   Included: org.osgi:osgi.annotation:jar:8.0.1
[DEBUG]   Included: org.osgi:org.osgi.util.promise:jar:1.3.0
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.p2.director.app:jar:1.3.0
[DEBUG]   Included: org.bouncycastle:bcpg-jdk18on:jar:1.73
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.p2.repository.tools:jar:2.3.200
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.p2.artifact.repository:jar:1.4.600
[DEBUG]   Included: commons-io:commons-io:jar:2.13.0
[DEBUG]   Included: commons-codec:commons-codec:jar:1.16.0
[DEBUG]   Included: org.eclipse.tycho:tycho-p2-facade:jar:3.0.5
[DEBUG]   Included: org.codehaus.plexus:plexus-component-annotations:jar:2.1.1
[DEBUG] Extension realms for project io.sapl:sapl-extensions-api:jar:3.0.0-SNAPSHOT: [ClassRealm[extension>org.eclipse.tycho:tycho-maven-plugin:3.0.5, parent: jdk.internal.loader.ClassLoaders$AppClassLoader@5cb0d902]]
[DEBUG] Created new class realm project>io.sapl:sapl-extensions-api:3.0.0-SNAPSHOT
[DEBUG] Populating class realm project>io.sapl:sapl-extensions-api:3.0.0-SNAPSHOT
[DEBUG] Looking up lifecycle mappings for packaging jar from ClassRealm[project>io.sapl:sapl-extensions-api:3.0.0-SNAPSHOT, parent: ClassRealm[maven.api, parent: null]]
[DEBUG] Extension realms for project io.sapl:sapl-policy-engine:pom:3.0.0-SNAPSHOT: [ClassRealm[extension>org.eclipse.tycho:tycho-maven-plugin:3.0.5, parent: jdk.internal.loader.ClassLoaders$AppClassLoader@5cb0d902]]
[DEBUG] Looking up lifecycle mappings for packaging pom from ClassRealm[project>io.sapl:sapl-extensions-api:3.0.0-SNAPSHOT, parent: ClassRealm[maven.api, parent: null]]
[DEBUG] Init instance extension>org.eclipse.tycho:tycho-maven-plugin:3.0.5 [ClassRealm[extension>org.eclipse.tycho:tycho-maven-plugin:3.0.5, parent: jdk.internal.loader.ClassLoaders$AppClassLoader@5cb0d902]]
[DEBUG] org.eclipse.tycho:tycho-maven-plugin:3.0.5 configured in MavenProject: io.sapl:sapl-extensions-api:3.0.0-SNAPSHOT @ /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/pom.xml
[DEBUG] === REACTOR BUILD PLAN ================================================
[DEBUG] Project: io.sapl:sapl-extensions-api:jar:3.0.0-SNAPSHOT
[DEBUG] Tasks:   [process-test-resources]
[DEBUG] Style:   Regular
[DEBUG] =======================================================================
[INFO] 
[INFO] --------------------< io.sapl:sapl-extensions-api >---------------------
[INFO] Building SAPL Extensions API 3.0.0-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[DEBUG] Lifecycle default -> [validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy]
[DEBUG] Lifecycle clean -> [pre-clean, clean, post-clean]
[DEBUG] Lifecycle site -> [pre-site, site, post-site, site-deploy]
[DEBUG] Lifecycle default -> [validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy]
[DEBUG] Lifecycle clean -> [pre-clean, clean, post-clean]
[DEBUG] Lifecycle site -> [pre-site, site, post-site, site-deploy]
[DEBUG] Lifecycle default -> [validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy]
[DEBUG] Lifecycle clean -> [pre-clean, clean, post-clean]
[DEBUG] Lifecycle site -> [pre-site, site, post-site, site-deploy]
[DEBUG] Lifecycle default -> [validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy]
[DEBUG] Lifecycle clean -> [pre-clean, clean, post-clean]
[DEBUG] Lifecycle site -> [pre-site, site, post-site, site-deploy]
[DEBUG] Lifecycle default -> [validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy]
[DEBUG] Lifecycle clean -> [pre-clean, clean, post-clean]
[DEBUG] Lifecycle site -> [pre-site, site, post-site, site-deploy]
[DEBUG] Lifecycle default -> [validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy]
[DEBUG] Lifecycle clean -> [pre-clean, clean, post-clean]
[DEBUG] Lifecycle site -> [pre-site, site, post-site, site-deploy]
[DEBUG] === PROJECT BUILD PLAN ================================================
[DEBUG] Project:       io.sapl:sapl-extensions-api:3.0.0-SNAPSHOT
[DEBUG] Dependencies (collect): []
[DEBUG] Dependencies (resolve): [compile]
[DEBUG] Repositories (dependencies): [central (https://repo.maven.apache.org/maven2, default, releases)]
[DEBUG] Repositories (plugins)     : [central (https://repo.maven.apache.org/maven2, default, releases)]
[DEBUG] -----------------------------------------------------------------------
[DEBUG] Goal:          net.revelc.code.formatter:formatter-maven-plugin:2.23.0:format (default)
[DEBUG] Style:         Regular
[DEBUG] Configuration: <?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <basedir default-value="${project.basedir}">${baseDirectory}</basedir>
  <cachedir default-value="${project.build.directory}">${formatter.cachedir}</cachedir>
  <compilerCompliance default-value="1.8">${maven.compiler.source}</compilerCompliance>
  <compilerSource default-value="1.8">${maven.compiler.source}</compilerSource>
  <compilerTargetPlatform default-value="1.8">${maven.compiler.target}</compilerTargetPlatform>
  <configCssFile default-value="formatter-maven-plugin/ph-css/css.properties">${configcssfile}</configCssFile>
  <configFile default-value="formatter-maven-plugin/eclipse/java.xml">/home/oludwig/dev/uni/sapl-policy-engine/formatter.xml</configFile>
  <configHtmlFile default-value="formatter-maven-plugin/jsoup/html.properties">${confightmlfile}</configHtmlFile>
  <configJsFile default-value="formatter-maven-plugin/eclipse/javascript.xml">${configjsfile}</configJsFile>
  <configJsonFile default-value="formatter-maven-plugin/jackson/json.properties">${configjsonfile}</configJsonFile>
  <configXmlFile default-value="formatter-maven-plugin/eclipse/xml.properties">${configxmlfile}</configXmlFile>
  <encoding>${project.build.sourceEncoding}</encoding>
  <excludes>${formatter.excludes}</excludes>
  <includeResources default-value="false">${formatter.includeResources}</includeResources>
  <includes>${formatter.includes}</includes>
  <javaExclusionPattern>${formatter.java.exclusion_pattern}</javaExclusionPattern>
  <lineEnding default-value="AUTO">${lineending}</lineEnding>
  <project default-value="${project}"/>
  <removeTrailingWhitespace default-value="true">${formatter.removeTrailingWhitespace}</removeTrailingWhitespace>
  <skipCssFormatting default-value="false">${formatter.css.skip}</skipCssFormatting>
  <skipFormatting default-value="false">${formatter.skip}</skipFormatting>
  <skipFormattingCache default-value="false">${formatter.cache.skip}</skipFormattingCache>
  <skipHtmlFormatting default-value="false">${formatter.html.skip}</skipHtmlFormatting>
  <skipJavaFormatting default-value="false">${formatter.java.skip}</skipJavaFormatting>
  <skipJsFormatting default-value="false">${formatter.js.skip}</skipJsFormatting>
  <skipJsonFormatting default-value="false">${formatter.json.skip}</skipJsonFormatting>
  <skipXmlFormatting default-value="false">${formatter.xml.skip}</skipXmlFormatting>
  <sourceDirectory default-value="${project.build.sourceDirectory}">${sourceDirectory}</sourceDirectory>
  <targetDirectory default-value="${project.build.directory}"/>
  <testSourceDirectory default-value="${project.build.testSourceDirectory}">${testSourceDirectory}</testSourceDirectory>
  <useEclipseDefaults default-value="false">${formatter.useEclipseDefaults}</useEclipseDefaults>
</configuration>
[DEBUG] -----------------------------------------------------------------------
[DEBUG] Goal:          org.apache.maven.plugins:maven-resources-plugin:3.3.1:resources (default-resources)
[DEBUG] Style:         Regular
[DEBUG] Configuration: <?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <addDefaultExcludes default-value="true"/>
  <buildFilters default-value="${project.build.filters}"/>
  <encoding default-value="${project.build.sourceEncoding}"/>
  <escapeWindowsPaths default-value="true"/>
  <fileNameFiltering default-value="false"/>
  <includeEmptyDirs default-value="false"/>
  <outputDirectory default-value="${project.build.outputDirectory}"/>
  <overwrite default-value="false"/>
  <project default-value="${project}"/>
  <resources default-value="${project.resources}"/>
  <session default-value="${session}"/>
  <skip default-value="false">${maven.resources.skip}</skip>
  <supportMultiLineFiltering default-value="false"/>
  <useBuildFilters default-value="true"/>
  <useDefaultDelimiters default-value="true"/>
</configuration>
[DEBUG] -----------------------------------------------------------------------
[DEBUG] Goal:          org.apache.maven.plugins:maven-compiler-plugin:3.11.0:compile (default-compile)
[DEBUG] Style:         Regular
[DEBUG] Configuration: <?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <annotationProcessorPaths>
    <path>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.30</version>
    </path>
  </annotationProcessorPaths>
  <basedir default-value="${basedir}"/>
  <buildDirectory default-value="${project.build.directory}"/>
  <compilePath default-value="${project.compileClasspathElements}"/>
  <compileSourceRoots default-value="${project.compileSourceRoots}"/>
  <compilerArgs>
    <arg>-parameters</arg>
  </compilerArgs>
  <compilerId default-value="javac">${maven.compiler.compilerId}</compilerId>
  <compilerReuseStrategy default-value="${reuseCreated}">${maven.compiler.compilerReuseStrategy}</compilerReuseStrategy>
  <compilerVersion>${maven.compiler.compilerVersion}</compilerVersion>
  <createMissingPackageInfoClass default-value="true">${maven.compiler.createMissingPackageInfoClass}</createMissingPackageInfoClass>
  <debug default-value="true">${maven.compiler.debug}</debug>
  <debugFileName default-value="javac"/>
  <debuglevel>${maven.compiler.debuglevel}</debuglevel>
  <enablePreview default-value="false">${maven.compiler.enablePreview}</enablePreview>
  <encoding default-value="${project.build.sourceEncoding}">${encoding}</encoding>
  <executable>${maven.compiler.executable}</executable>
  <failOnError default-value="true">true</failOnError>
  <failOnWarning default-value="false">true</failOnWarning>
  <forceJavacCompilerUse default-value="false">${maven.compiler.forceJavacCompilerUse}</forceJavacCompilerUse>
  <fork default-value="false">${maven.compiler.fork}</fork>
  <generatedSourcesDirectory default-value="${project.build.directory}/generated-sources/annotations"/>
  <implicit>${maven.compiler.implicit}</implicit>
  <maxmem>${maven.compiler.maxmem}</maxmem>
  <meminitial>${maven.compiler.meminitial}</meminitial>
  <mojoExecution default-value="${mojoExecution}"/>
  <optimize default-value="false">${maven.compiler.optimize}</optimize>
  <outputDirectory default-value="${project.build.outputDirectory}"/>
  <parameters default-value="false">${maven.compiler.parameters}</parameters>
  <project default-value="${project}"/>
  <projectArtifact default-value="${project.artifact}"/>
  <release>${maven.compiler.release}</release>
  <session default-value="${session}"/>
  <showCompilationChanges default-value="false">${maven.compiler.showCompilationChanges}</showCompilationChanges>
  <showDeprecation default-value="false">true</showDeprecation>
  <showWarnings default-value="true">true</showWarnings>
  <skipMain>${maven.main.skip}</skipMain>
  <skipMultiThreadWarning default-value="false">${maven.compiler.skipMultiThreadWarning}</skipMultiThreadWarning>
  <source default-value="1.8">17</source>
  <staleMillis default-value="0">${lastModGranularityMs}</staleMillis>
  <target default-value="1.8">17</target>
  <useIncrementalCompilation default-value="true">${maven.compiler.useIncrementalCompilation}</useIncrementalCompilation>
  <verbose default-value="false">${maven.compiler.verbose}</verbose>
</configuration>
[DEBUG] -----------------------------------------------------------------------
[DEBUG] Goal:          biz.aQute.bnd:bnd-maven-plugin:6.4.0:bnd-process (default)
[DEBUG] Style:         Regular
[DEBUG] Configuration: <?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <bndfile default-value="bnd.bnd"/>
  <classesDir default-value="${project.build.outputDirectory}"/>
  <finalName default-value="${project.build.finalName}"/>
  <includeClassesDir default-value="true"/>
  <manifestPath default-value="${project.build.outputDirectory}/META-INF/MANIFEST.MF"/>
  <mojoExecution default-value="${mojoExecution}"/>
  <outputDir default-value="${project.build.outputDirectory}"/>
  <outputTimestamp default-value="${project.build.outputTimestamp}"/>
  <packagingTypes default-value="jar,war">${bnd.packagingTypes}</packagingTypes>
  <project default-value="${project}"/>
  <resources default-value="${project.build.resources}"/>
  <settings default-value="${settings}"/>
  <skip default-value="false">${bnd.skip}</skip>
  <skipIfEmpty default-value="false">${bnd.skipIfEmpty}</skipIfEmpty>
  <sourceDir default-value="${project.build.sourceDirectory}"/>
  <webappDirectory default-value="${project.build.directory}/${project.build.finalName}"/>
</configuration>
[DEBUG] -----------------------------------------------------------------------
[DEBUG] Goal:          org.apache.maven.plugins:maven-resources-plugin:3.3.1:testResources (default-testResources)
[DEBUG] Style:         Regular
[DEBUG] Configuration: <?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <addDefaultExcludes default-value="true"/>
  <buildFilters default-value="${project.build.filters}"/>
  <encoding default-value="${project.build.sourceEncoding}"/>
  <escapeWindowsPaths default-value="true"/>
  <fileNameFiltering default-value="false"/>
  <includeEmptyDirs default-value="false"/>
  <outputDirectory default-value="${project.build.testOutputDirectory}"/>
  <overwrite default-value="false"/>
  <project default-value="${project}"/>
  <resources default-value="${project.testResources}"/>
  <session default-value="${session}"/>
  <skip default-value="false">${maven.test.skip}</skip>
  <supportMultiLineFiltering default-value="false"/>
  <useBuildFilters default-value="true"/>
  <useDefaultDelimiters default-value="true"/>
</configuration>
[DEBUG] =======================================================================
[DEBUG] Dependency collection stats {ConflictMarker.analyzeTime=156304, ConflictMarker.markTime=34903, ConflictMarker.nodeCount=45, ConflictIdSorter.graphTime=79757, ConflictIdSorter.topsortTime=36113, ConflictIdSorter.conflictIdCount=31, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=1035410, ConflictResolver.conflictItemCount=44, DefaultDependencyCollector.collectTime=46635777, DefaultDependencyCollector.transformTime=1414833}
[DEBUG] io.sapl:sapl-extensions-api:jar:3.0.0-SNAPSHOT
[DEBUG]    io.projectreactor:reactor-core:jar:3.6.1:compile
[DEBUG]       org.reactivestreams:reactive-streams:jar:1.0.4:compile (version managed from 1.0.4)
[DEBUG]    com.fasterxml.jackson.core:jackson-databind:jar:2.15.3:compile
[DEBUG]       com.fasterxml.jackson.core:jackson-annotations:jar:2.15.3:compile (version managed from 2.15.3)
[DEBUG]       com.fasterxml.jackson.core:jackson-core:jar:2.15.3:compile (version managed from 2.15.3)
[DEBUG]    com.fasterxml.jackson.datatype:jackson-datatype-jdk8:jar:2.15.3:compile
[DEBUG]    jakarta.validation:jakarta.validation-api:jar:3.0.2:compile
[DEBUG]    org.osgi:org.osgi.annotation.bundle:jar:2.0.0:provided
[DEBUG]       org.osgi:org.osgi.annotation.versioning:jar:1.1.2:provided
[DEBUG]    org.projectlombok:lombok:jar:1.18.30:provided
[DEBUG]    org.junit.jupiter:junit-jupiter:jar:5.10.1:test
[DEBUG]       org.junit.jupiter:junit-jupiter-api:jar:5.10.0:test (version managed from 5.10.1)
[DEBUG]          org.opentest4j:opentest4j:jar:1.3.0:test (version managed from 1.3.0)
[DEBUG]          org.junit.platform:junit-platform-commons:jar:1.10.0:test (version managed from 1.10.0)
[DEBUG]          org.apiguardian:apiguardian-api:jar:1.1.2:test (version managed from 1.1.2)
[DEBUG]       org.junit.jupiter:junit-jupiter-params:jar:5.10.1:test (version managed from 5.10.1)
[DEBUG]       org.junit.jupiter:junit-jupiter-engine:jar:5.10.0:test (version managed from 5.10.1)
[DEBUG]          org.junit.platform:junit-platform-engine:jar:1.10.0:test (version managed from 1.10.0)
[DEBUG]    net.javacrumbs.json-unit:json-unit-assertj:jar:3.2.2:test
[DEBUG]       net.javacrumbs.json-unit:json-unit-core:jar:3.2.2:test
[DEBUG]          org.hamcrest:hamcrest-core:jar:1.3:test (version managed from 2.2)
[DEBUG]       org.assertj:assertj-core:jar:3.24.2:test (version managed from 3.24.2)
[DEBUG]          net.bytebuddy:byte-buddy:jar:1.14.10:test (version managed from 1.12.21)
[DEBUG]       net.javacrumbs.json-unit:json-unit-json-path:jar:3.2.2:test
[DEBUG]          com.jayway.jsonpath:json-path:jar:2.8.0:test (version managed from 2.8.0)
[DEBUG]             net.minidev:json-smart:jar:2.5.0:test (version managed from 2.4.10)
[DEBUG]                net.minidev:accessors-smart:jar:2.5.0:test
[DEBUG]                   org.ow2.asm:asm:jar:9.5:test (version managed from 9.3)
[DEBUG]    io.projectreactor:reactor-test:jar:3.6.1:test
[DEBUG]    org.slf4j:slf4j-nop:jar:2.0.9:test
[DEBUG]       org.slf4j:slf4j-api:jar:2.0.9:test (version managed from 2.0.9)
[INFO] 
[INFO] --- formatter-maven-plugin:2.23.0:format (default) @ sapl-extensions-api ---
[DEBUG] Dependency collection stats {ConflictMarker.analyzeTime=211278, ConflictMarker.markTime=52465, ConflictMarker.nodeCount=91, ConflictIdSorter.graphTime=111890, ConflictIdSorter.topsortTime=49314, ConflictIdSorter.conflictIdCount=48, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=1000207, ConflictResolver.conflictItemCount=84, DefaultDependencyCollector.collectTime=61700757, DefaultDependencyCollector.transformTime=1475708}
[DEBUG] net.revelc.code.formatter:formatter-maven-plugin:jar:2.23.0
[DEBUG]    com.fasterxml.jackson.core:jackson-annotations:jar:2.15.2:compile
[DEBUG]    com.fasterxml.jackson.core:jackson-core:jar:2.15.2:compile
[DEBUG]    com.fasterxml.jackson.core:jackson-databind:jar:2.15.2:compile
[DEBUG]    com.google.guava:guava:jar:32.0.0-jre:compile
[DEBUG]       com.google.guava:failureaccess:jar:1.0.1:compile
[DEBUG]       com.google.guava:listenablefuture:jar:9999.0-empty-to-avoid-conflict-with-guava:compile
[DEBUG]       com.google.code.findbugs:jsr305:jar:3.0.2:compile
[DEBUG]       org.checkerframework:checker-qual:jar:3.33.0:compile
[DEBUG]       com.google.errorprone:error_prone_annotations:jar:2.18.0:compile
[DEBUG]       com.google.j2objc:j2objc-annotations:jar:2.8:compile
[DEBUG]    commons-beanutils:commons-beanutils:jar:1.9.4:compile
[DEBUG]       commons-collections:commons-collections:jar:3.2.2:compile
[DEBUG]    net.revelc.code.formatter:jsdt-core:jar:3.3.0:compile
[DEBUG]       org.osgi:org.osgi.service.prefs:jar:1.1.2:compile (version managed from default)
[DEBUG]          org.osgi:osgi.annotation:jar:8.1.0:compile (version managed from default)
[DEBUG]       org.osgi:org.osgi.util.function:jar:1.2.0:compile
[DEBUG]       org.osgi:org.osgi.util.promise:jar:1.2.0:compile
[DEBUG]       org.osgi:org.osgi.util.measurement:jar:1.0.2:compile
[DEBUG]       org.osgi:org.osgi.util.position:jar:1.0.1:compile
[DEBUG]       org.osgi:org.osgi.util.xml:jar:1.0.2:compile
[DEBUG]    net.revelc.code.formatter:xml-formatter:jar:0.3.0:compile
[DEBUG]    net.sourceforge.cssparser:cssparser:jar:0.9.30:compile
[DEBUG]    org.apache.commons:commons-digester3:jar:3.2:compile
[DEBUG]       cglib:cglib:jar:2.2.2:compile
[DEBUG]          asm:asm:jar:3.3.1:compile
[DEBUG]    org.codehaus.plexus:plexus-resources:jar:1.2.0:compile
[DEBUG]       javax.inject:javax.inject:jar:1:compile
[DEBUG]       org.slf4j:slf4j-api:jar:1.7.32:compile
[DEBUG]    org.codehaus.plexus:plexus-utils:jar:4.0.0:compile
[DEBUG]    org.eclipse.jdt:org.eclipse.jdt.core:jar:3.33.0:compile
[DEBUG]       org.eclipse.platform:org.eclipse.core.resources:jar:3.18.200:compile (version managed from default)
[DEBUG]          org.eclipse.platform:org.eclipse.core.expressions:jar:3.8.200:compile (version managed from default)
[DEBUG]          org.eclipse.platform:org.eclipse.osgi:jar:3.18.300:compile (version managed from default)
[DEBUG]       org.eclipse.platform:org.eclipse.core.runtime:jar:3.26.100:compile (version managed from default)
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.common:jar:3.17.0:compile (version managed from default)
[DEBUG]          org.eclipse.platform:org.eclipse.core.jobs:jar:3.13.200:compile (version managed from default)
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.registry:jar:3.11.200:compile (version managed from default)
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.preferences:jar:3.10.100:compile (version managed from default)
[DEBUG]          org.eclipse.platform:org.eclipse.core.contenttype:jar:3.8.200:compile (version managed from default)
[DEBUG]          org.eclipse.platform:org.eclipse.equinox.app:jar:1.6.200:compile (version managed from default)
[DEBUG]       org.eclipse.platform:org.eclipse.core.filesystem:jar:1.9.500:compile (version managed from default)
[DEBUG]       org.eclipse.platform:org.eclipse.text:jar:3.12.300:compile (version managed from default)
[DEBUG]          org.eclipse.platform:org.eclipse.core.commands:jar:3.10.300:compile (version managed from default)
[DEBUG]       org.eclipse.jdt:ecj:jar:3.33.0:compile (version managed from default)
[DEBUG]    org.jsoup:jsoup:jar:1.16.1:compile
[DEBUG]    org.slf4j:jcl-over-slf4j:jar:2.0.7:compile
[DEBUG]    org.w3c.css:sac:jar:1.3:compile
[DEBUG] Created new class realm plugin>net.revelc.code.formatter:formatter-maven-plugin:2.23.0
[DEBUG] Importing foreign packages into class realm plugin>net.revelc.code.formatter:formatter-maven-plugin:2.23.0
[DEBUG]   Imported:  < project>io.sapl:sapl-extensions-api:3.0.0-SNAPSHOT
[DEBUG] Populating class realm plugin>net.revelc.code.formatter:formatter-maven-plugin:2.23.0
[DEBUG]   Included: net.revelc.code.formatter:formatter-maven-plugin:jar:2.23.0
[DEBUG]   Included: com.fasterxml.jackson.core:jackson-annotations:jar:2.15.2
[DEBUG]   Included: com.fasterxml.jackson.core:jackson-core:jar:2.15.2
[DEBUG]   Included: com.fasterxml.jackson.core:jackson-databind:jar:2.15.2
[DEBUG]   Included: com.google.guava:guava:jar:32.0.0-jre
[DEBUG]   Included: com.google.guava:failureaccess:jar:1.0.1
[DEBUG]   Included: com.google.guava:listenablefuture:jar:9999.0-empty-to-avoid-conflict-with-guava
[DEBUG]   Included: com.google.code.findbugs:jsr305:jar:3.0.2
[DEBUG]   Included: org.checkerframework:checker-qual:jar:3.33.0
[DEBUG]   Included: com.google.errorprone:error_prone_annotations:jar:2.18.0
[DEBUG]   Included: com.google.j2objc:j2objc-annotations:jar:2.8
[DEBUG]   Included: commons-beanutils:commons-beanutils:jar:1.9.4
[DEBUG]   Included: commons-collections:commons-collections:jar:3.2.2
[DEBUG]   Included: net.revelc.code.formatter:jsdt-core:jar:3.3.0
[DEBUG]   Included: org.osgi:org.osgi.service.prefs:jar:1.1.2
[DEBUG]   Included: org.osgi:osgi.annotation:jar:8.1.0
[DEBUG]   Included: org.osgi:org.osgi.util.function:jar:1.2.0
[DEBUG]   Included: org.osgi:org.osgi.util.promise:jar:1.2.0
[DEBUG]   Included: org.osgi:org.osgi.util.measurement:jar:1.0.2
[DEBUG]   Included: org.osgi:org.osgi.util.position:jar:1.0.1
[DEBUG]   Included: org.osgi:org.osgi.util.xml:jar:1.0.2
[DEBUG]   Included: net.revelc.code.formatter:xml-formatter:jar:0.3.0
[DEBUG]   Included: net.sourceforge.cssparser:cssparser:jar:0.9.30
[DEBUG]   Included: org.apache.commons:commons-digester3:jar:3.2
[DEBUG]   Included: cglib:cglib:jar:2.2.2
[DEBUG]   Included: asm:asm:jar:3.3.1
[DEBUG]   Included: org.codehaus.plexus:plexus-resources:jar:1.2.0
[DEBUG]   Included: org.codehaus.plexus:plexus-utils:jar:4.0.0
[DEBUG]   Included: org.eclipse.jdt:org.eclipse.jdt.core:jar:3.33.0
[DEBUG]   Included: org.eclipse.platform:org.eclipse.core.resources:jar:3.18.200
[DEBUG]   Included: org.eclipse.platform:org.eclipse.core.expressions:jar:3.8.200
[DEBUG]   Included: org.eclipse.platform:org.eclipse.osgi:jar:3.18.300
[DEBUG]   Included: org.eclipse.platform:org.eclipse.core.runtime:jar:3.26.100
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.common:jar:3.17.0
[DEBUG]   Included: org.eclipse.platform:org.eclipse.core.jobs:jar:3.13.200
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.registry:jar:3.11.200
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.preferences:jar:3.10.100
[DEBUG]   Included: org.eclipse.platform:org.eclipse.core.contenttype:jar:3.8.200
[DEBUG]   Included: org.eclipse.platform:org.eclipse.equinox.app:jar:1.6.200
[DEBUG]   Included: org.eclipse.platform:org.eclipse.core.filesystem:jar:1.9.500
[DEBUG]   Included: org.eclipse.platform:org.eclipse.text:jar:3.12.300
[DEBUG]   Included: org.eclipse.platform:org.eclipse.core.commands:jar:3.10.300
[DEBUG]   Included: org.eclipse.jdt:ecj:jar:3.33.0
[DEBUG]   Included: org.jsoup:jsoup:jar:1.16.1
[DEBUG]   Included: org.slf4j:jcl-over-slf4j:jar:2.0.7
[DEBUG]   Included: org.w3c.css:sac:jar:1.3
[DEBUG] Configuring mojo net.revelc.code.formatter:formatter-maven-plugin:2.23.0:format from plugin realm ClassRealm[plugin>net.revelc.code.formatter:formatter-maven-plugin:2.23.0, parent: jdk.internal.loader.ClassLoaders$AppClassLoader@5cb0d902]
[DEBUG] Configuring mojo 'net.revelc.code.formatter:formatter-maven-plugin:2.23.0:format' with basic configurator -->
[DEBUG]   (f) basedir = /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api
[DEBUG]   (f) cachedir = /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target
[DEBUG]   (f) compilerCompliance = 17
[DEBUG]   (f) compilerSource = 17
[DEBUG]   (f) compilerTargetPlatform = 17
[DEBUG]   (f) configCssFile = formatter-maven-plugin/ph-css/css.properties
[DEBUG]   (f) configFile = /home/oludwig/dev/uni/sapl-policy-engine/formatter.xml
[DEBUG]   (f) configHtmlFile = formatter-maven-plugin/jsoup/html.properties
[DEBUG]   (f) configJsFile = formatter-maven-plugin/eclipse/javascript.xml
[DEBUG]   (f) configJsonFile = formatter-maven-plugin/jackson/json.properties
[DEBUG]   (f) configXmlFile = formatter-maven-plugin/eclipse/xml.properties
[DEBUG]   (f) encoding = UTF-8
[DEBUG]   (f) excludes = []
[DEBUG]   (f) includeResources = false
[DEBUG]   (f) includes = []
[DEBUG]   (f) lineEnding = AUTO
[DEBUG]   (f) project = MavenProject: io.sapl:sapl-extensions-api:3.0.0-SNAPSHOT @ /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/pom.xml
[DEBUG]   (f) removeTrailingWhitespace = true
[DEBUG]   (f) skipCssFormatting = false
[DEBUG]   (f) skipFormatting = false
[DEBUG]   (f) skipFormattingCache = false
[DEBUG]   (f) skipHtmlFormatting = false
[DEBUG]   (f) skipJavaFormatting = false
[DEBUG]   (f) skipJsFormatting = false
[DEBUG]   (f) skipJsonFormatting = false
[DEBUG]   (f) skipXmlFormatting = false
[DEBUG]   (f) sourceDirectory = /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java
[DEBUG]   (f) targetDirectory = /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target
[DEBUG]   (f) testSourceDirectory = /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/test/java
[DEBUG]   (f) useEclipseDefaults = false
[DEBUG] -- end configuration --
[DEBUG] Using 'UTF-8' encoding to format source files.
[DEBUG] Number of files to be formatted: 40
[DEBUG] Using search path at: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api
[DEBUG] The resource '/home/oludwig/dev/uni/sapl-policy-engine/formatter.xml' was found as '/home/oludwig/dev/uni/sapl-policy-engine/formatter.xml'
[DEBUG] addRuleSet() with no namespace URI
[DEBUG] setDocumentLocator(com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$LocatorProxy@571db8b4)
[DEBUG] startDocument()
[DEBUG] startElement(,,profiles)
[DEBUG]   Pushing body text ''
[DEBUG]   New match='profiles'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Profiles, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles} New 'net.revelc.code.formatter.model.Profiles' using default empty constructor
[DEBUG] characters(
    )
[DEBUG] startElement(,,profile)
[DEBUG]   Pushing body text '
    '
[DEBUG]   New match='profiles/profile'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Profile, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile} New 'net.revelc.code.formatter.model.Profile' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addProfile, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={kind=kind}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile} Setting property 'kind' to 'kind'
[DEBUG] [SetPropertiesRule]{profiles/profile} Setting property 'name' to 'name'
[DEBUG] [SetPropertiesRule]{profiles/profile} Setting property 'version' to 'version'
[DEBUG] [SetPropertiesRule]{profiles/profile} Set 'net.revelc.code.formatter.model.Profile' properties
[DEBUG] Setting default value: false
[DEBUG] Converting 'Boolean' value 'false' to type 'Boolean'
[DEBUG]     No conversion required, value is already a Boolean
[DEBUG] Setting default value: 0
[DEBUG] Converting 'Integer' value '0' to type 'Byte'
[DEBUG]     Converted to Byte value '0'
[DEBUG] Setting default value:  
[DEBUG] Converting 'Character' value ' ' to type 'Character'
[DEBUG]     No conversion required, value is already a Character
[DEBUG] Setting default value: 0
[DEBUG] Converting 'Integer' value '0' to type 'Double'
[DEBUG]     Converted to Double value '0.0'
[DEBUG] Setting default value: 0
[DEBUG] Converting 'Integer' value '0' to type 'Float'
[DEBUG]     Converted to Float value '0.0'
[DEBUG] Setting default value: 0
[DEBUG] Converting 'Integer' value '0' to type 'Integer'
[DEBUG]     No conversion required, value is already a Integer
[DEBUG] Setting default value: 0
[DEBUG] Converting 'Integer' value '0' to type 'Long'
[DEBUG]     Converted to Long value '0'
[DEBUG] Setting default value: 0
[DEBUG] Converting 'Integer' value '0' to type 'Short'
[DEBUG]     Converted to Short value '0'
[DEBUG] Setting default value: 0.0
[DEBUG] Converting 'BigDecimal' value '0.0' to type 'BigDecimal'
[DEBUG]     No conversion required, value is already a BigDecimal
[DEBUG] Setting default value: 0
[DEBUG] Converting 'BigInteger' value '0' to type 'BigInteger'
[DEBUG]     No conversion required, value is already a BigInteger
[DEBUG] Setting default value: false
[DEBUG] Converting 'Boolean' value 'false' to type 'Boolean'
[DEBUG]     No conversion required, value is already a Boolean
[DEBUG] Setting default value: 0
[DEBUG] Converting 'Integer' value '0' to type 'Byte'
[DEBUG]     Converted to Byte value '0'
[DEBUG] Setting default value:  
[DEBUG] Converting 'Character' value ' ' to type 'Character'
[DEBUG]     No conversion required, value is already a Character
[DEBUG] Setting default value: 0
[DEBUG] Converting 'Integer' value '0' to type 'Double'
[DEBUG]     Converted to Double value '0.0'
[DEBUG] Setting default value: 0
[DEBUG] Converting 'Integer' value '0' to type 'Float'
[DEBUG]     Converted to Float value '0.0'
[DEBUG] Setting default value: 0
[DEBUG] Converting 'Integer' value '0' to type 'Integer'
[DEBUG]     No conversion required, value is already a Integer
[DEBUG] Setting default value: 0
[DEBUG] Converting 'Integer' value '0' to type 'Long'
[DEBUG]     Converted to Long value '0'
[DEBUG] Setting default value: 0
[DEBUG] Converting 'Integer' value '0' to type 'Short'
[DEBUG]     Converted to Short value '0'
[DEBUG] Setting default value: 
[DEBUG] Converting 'String' value '' to type 'String'
[DEBUG] Setting default value: [Z@40b01718
[DEBUG] Converting 'boolean[]' value '[Z@40b01718' to type 'boolean[]'
[DEBUG]     No conversion required, value is already a boolean[]
[DEBUG] Setting default value: [B@6d4c18b8
[DEBUG] Converting 'byte[]' value '[B@6d4c18b8' to type 'byte[]'
[DEBUG]     No conversion required, value is already a byte[]
[DEBUG] Setting default value: [C@663622b1
[DEBUG] Converting 'char[]' value '[C@663622b1' to type 'char[]'
[DEBUG]     No conversion required, value is already a char[]
[DEBUG] Setting default value: [D@1be52113
[DEBUG] Converting 'double[]' value '[D@1be52113' to type 'double[]'
[DEBUG]     No conversion required, value is already a double[]
[DEBUG] Setting default value: [F@5badeda0
[DEBUG] Converting 'float[]' value '[F@5badeda0' to type 'float[]'
[DEBUG]     No conversion required, value is already a float[]
[DEBUG] Setting default value: [I@56a9a7b5
[DEBUG] Converting 'int[]' value '[I@56a9a7b5' to type 'int[]'
[DEBUG]     No conversion required, value is already a int[]
[DEBUG] Setting default value: [J@1dd247b
[DEBUG] Converting 'long[]' value '[J@1dd247b' to type 'long[]'
[DEBUG]     No conversion required, value is already a long[]
[DEBUG] Setting default value: [S@338270ea
[DEBUG] Converting 'short[]' value '[S@338270ea' to type 'short[]'
[DEBUG]     No conversion required, value is already a short[]
[DEBUG] Setting default value: [Ljava.math.BigDecimal;@7f64bd7
[DEBUG] Converting 'BigDecimal[]' value '[Ljava.math.BigDecimal;@7f64bd7' to type 'BigDecimal[]'
[DEBUG]     No conversion required, value is already a BigDecimal[]
[DEBUG] Setting default value: [Ljava.math.BigInteger;@746fd19b
[DEBUG] Converting 'BigInteger[]' value '[Ljava.math.BigInteger;@746fd19b' to type 'BigInteger[]'
[DEBUG]     No conversion required, value is already a BigInteger[]
[DEBUG] Setting default value: [Ljava.lang.Boolean;@61d7bb61
[DEBUG] Converting 'Boolean[]' value '[Ljava.lang.Boolean;@61d7bb61' to type 'Boolean[]'
[DEBUG]     No conversion required, value is already a Boolean[]
[DEBUG] Setting default value: [Ljava.lang.Byte;@3991fe6d
[DEBUG] Converting 'Byte[]' value '[Ljava.lang.Byte;@3991fe6d' to type 'Byte[]'
[DEBUG]     No conversion required, value is already a Byte[]
[DEBUG] Setting default value: [Ljava.lang.Character;@3a0e7f89
[DEBUG] Converting 'Character[]' value '[Ljava.lang.Character;@3a0e7f89' to type 'Character[]'
[DEBUG]     No conversion required, value is already a Character[]
[DEBUG] Setting default value: [Ljava.lang.Double;@665ed71a
[DEBUG] Converting 'Double[]' value '[Ljava.lang.Double;@665ed71a' to type 'Double[]'
[DEBUG]     No conversion required, value is already a Double[]
[DEBUG] Setting default value: [Ljava.lang.Float;@23954300
[DEBUG] Converting 'Float[]' value '[Ljava.lang.Float;@23954300' to type 'Float[]'
[DEBUG]     No conversion required, value is already a Float[]
[DEBUG] Setting default value: [Ljava.lang.Integer;@7a587e84
[DEBUG] Converting 'Integer[]' value '[Ljava.lang.Integer;@7a587e84' to type 'Integer[]'
[DEBUG]     No conversion required, value is already a Integer[]
[DEBUG] Setting default value: [Ljava.lang.Long;@622ba721
[DEBUG] Converting 'Long[]' value '[Ljava.lang.Long;@622ba721' to type 'Long[]'
[DEBUG]     No conversion required, value is already a Long[]
[DEBUG] Setting default value: [Ljava.lang.Short;@6b2f7527
[DEBUG] Converting 'Short[]' value '[Ljava.lang.Short;@6b2f7527' to type 'Short[]'
[DEBUG]     No conversion required, value is already a Short[]
[DEBUG] Setting default value: [Ljava.lang.String;@7509226c
[DEBUG] Converting 'String[]' value '[Ljava.lang.String;@7509226c' to type 'String[]'
[DEBUG]     No conversion required, value is already a String[]
[DEBUG] Setting default value: [Ljava.lang.Class;@4c9cce17
[DEBUG] Converting 'Class[]' value '[Ljava.lang.Class;@4c9cce17' to type 'Class[]'
[DEBUG]     No conversion required, value is already a Class[]
[DEBUG] Setting default value: [Ljava.util.Date;@73316a0a
[DEBUG] Converting 'Date[]' value '[Ljava.util.Date;@73316a0a' to type 'Date[]'
[DEBUG]     No conversion required, value is already a Date[]
[DEBUG] Setting default value: [Ljava.util.Calendar;@5f01fb5c
[DEBUG] Converting 'Calendar[]' value '[Ljava.util.Calendar;@5f01fb5c' to type 'Calendar[]'
[DEBUG]     No conversion required, value is already a Calendar[]
[DEBUG] Setting default value: [Ljava.io.File;@d5e3f55
[DEBUG] Converting 'java.io.File[]' value '[Ljava.io.File;@d5e3f55' to type 'java.io.File[]'
[DEBUG]     No conversion required, value is already a java.io.File[]
[DEBUG] Setting default value: [Ljava.sql.Date;@3d4b45b
[DEBUG] Converting 'java.sql.Date[]' value '[Ljava.sql.Date;@3d4b45b' to type 'java.sql.Date[]'
[DEBUG]     No conversion required, value is already a java.sql.Date[]
[DEBUG] Setting default value: [Ljava.sql.Time;@31531d0d
[DEBUG] Converting 'java.sql.Time[]' value '[Ljava.sql.Time;@31531d0d' to type 'java.sql.Time[]'
[DEBUG]     No conversion required, value is already a java.sql.Time[]
[DEBUG] Setting default value: [Ljava.sql.Timestamp;@3f87780b
[DEBUG] Converting 'java.sql.Timestamp[]' value '[Ljava.sql.Timestamp;@3f87780b' to type 'java.sql.Timestamp[]'
[DEBUG]     No conversion required, value is already a java.sql.Timestamp[]
[DEBUG] Setting default value: [Ljava.net.URL;@231d3ce
[DEBUG] Converting 'java.net.URL[]' value '[Ljava.net.URL;@231d3ce' to type 'java.net.URL[]'
[DEBUG]     No conversion required, value is already a java.net.URL[]
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Profile@602c167e, {kind=CodeFormatterProfile, name=sapl, version=23})
[DEBUG] Convert string 'CodeFormatterProfile' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'CodeFormatterProfile' to type 'String'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4ec37a42, {id=org.eclipse.jdt.core.formatter.insert_space_after_ellipsis, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_ellipsis' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_ellipsis' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4ec37a42, {id=org.eclipse.jdt.core.formatter.insert_space_after_ellipsis, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_ellipsis' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_ellipsis' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4ec37a42)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@51cd2d2, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@51cd2d2, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@51cd2d2)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5521407f, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5521407f, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5521407f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@42b500aa, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_for_statment, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_for_statment' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_for_statment' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@42b500aa, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_for_statment, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_for_statment' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_for_statment' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@42b500aa)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@71f056a, {id=org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@71f056a, {id=org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@71f056a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@64f6dd19, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@64f6dd19, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@64f6dd19)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3b8b5b40, {id=org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3b8b5b40, {id=org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3b8b5b40)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5151accb, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5151accb, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5151accb)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@395197cb, {id=org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@395197cb, {id=org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@395197cb)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7305cfb1, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7305cfb1, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7305cfb1)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@582c1f8d, {id=org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@582c1f8d, {id=org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@582c1f8d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@71687d8f, {id=org.eclipse.jdt.core.formatter.comment.format_javadoc_comments, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.format_javadoc_comments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.format_javadoc_comments' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@71687d8f, {id=org.eclipse.jdt.core.formatter.comment.format_javadoc_comments, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.format_javadoc_comments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.format_javadoc_comments' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@71687d8f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@443253a6, {id=org.eclipse.jdt.core.formatter.indentation.size, value=4})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indentation.size' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indentation.size' to type 'String'
[DEBUG] Convert string '4' to class 'java.lang.String'
[DEBUG] Converting 'String' value '4' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@443253a6, {id=org.eclipse.jdt.core.formatter.indentation.size, value=4})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indentation.size' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indentation.size' to type 'String'
[DEBUG] Convert string '4' to class 'java.lang.String'
[DEBUG] Converting 'String' value '4' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@443253a6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@191774d6, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_enum_constant_declaration, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_enum_constant_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_enum_constant_declaration' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@191774d6, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_enum_constant_declaration, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_enum_constant_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_enum_constant_declaration' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@191774d6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@21ffc00e, {id=org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@21ffc00e, {id=org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@21ffc00e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6723e6b3, {id=org.eclipse.jdt.core.formatter.align_with_spaces, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.align_with_spaces' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.align_with_spaces' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6723e6b3, {id=org.eclipse.jdt.core.formatter.align_with_spaces, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.align_with_spaces' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.align_with_spaces' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6723e6b3)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@20171cdc, {id=org.eclipse.jdt.core.formatter.continuation_indentation, value=2})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.continuation_indentation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.continuation_indentation' to type 'String'
[DEBUG] Convert string '2' to class 'java.lang.String'
[DEBUG] Converting 'String' value '2' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@20171cdc, {id=org.eclipse.jdt.core.formatter.continuation_indentation, value=2})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.continuation_indentation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.continuation_indentation' to type 'String'
[DEBUG] Convert string '2' to class 'java.lang.String'
[DEBUG] Converting 'String' value '2' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@20171cdc)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@58f97013, {id=org.eclipse.jdt.core.formatter.number_of_blank_lines_before_code_block, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.number_of_blank_lines_before_code_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.number_of_blank_lines_before_code_block' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@58f97013, {id=org.eclipse.jdt.core.formatter.number_of_blank_lines_before_code_block, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.number_of_blank_lines_before_code_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.number_of_blank_lines_before_code_block' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@58f97013)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7d70ba18, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_switch_case_expressions, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_switch_case_expressions' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_switch_case_expressions' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7d70ba18, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_switch_case_expressions, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_switch_case_expressions' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_switch_case_expressions' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7d70ba18)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6a07e6ca, {id=org.eclipse.jdt.core.formatter.blank_lines_after_package, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_after_package' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_after_package' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6a07e6ca, {id=org.eclipse.jdt.core.formatter.blank_lines_after_package, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_after_package' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_after_package' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6a07e6ca)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@726ef6aa, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@726ef6aa, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@726ef6aa)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6104691c, {id=org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6104691c, {id=org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6104691c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@195cbf5e, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@195cbf5e, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@195cbf5e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4cb82b09, {id=org.eclipse.jdt.core.formatter.comment.indent_root_tags, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.indent_root_tags' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.indent_root_tags' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4cb82b09, {id=org.eclipse.jdt.core.formatter.comment.indent_root_tags, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.indent_root_tags' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.indent_root_tags' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4cb82b09)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@49665f92, {id=org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@49665f92, {id=org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@49665f92)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@b68932b, {id=org.eclipse.jdt.core.formatter.enabling_tag, value=@formatter:on})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.enabling_tag' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.enabling_tag' to type 'String'
[DEBUG] Convert string '@formatter:on' to class 'java.lang.String'
[DEBUG] Converting 'String' value '@formatter:on' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@b68932b, {id=org.eclipse.jdt.core.formatter.enabling_tag, value=@formatter:on})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.enabling_tag' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.enabling_tag' to type 'String'
[DEBUG] Convert string '@formatter:on' to class 'java.lang.String'
[DEBUG] Converting 'String' value '@formatter:on' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@b68932b)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@77b27b57, {id=org.eclipse.jdt.core.formatter.comment.count_line_length_from_starting_position, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.count_line_length_from_starting_position' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.count_line_length_from_starting_position' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@77b27b57, {id=org.eclipse.jdt.core.formatter.comment.count_line_length_from_starting_position, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.count_line_length_from_starting_position' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.count_line_length_from_starting_position' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@77b27b57)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7adff6cb, {id=org.eclipse.jdt.core.formatter.alignment_for_record_components, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_record_components' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_record_components' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7adff6cb, {id=org.eclipse.jdt.core.formatter.alignment_for_record_components, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_record_components' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_record_components' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7adff6cb)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@13ebccd, {id=org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@13ebccd, {id=org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@13ebccd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4e80960a, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4e80960a, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4e80960a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2a0c244e, {id=org.eclipse.jdt.core.formatter.wrap_before_multiplicative_operator, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_multiplicative_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_multiplicative_operator' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2a0c244e, {id=org.eclipse.jdt.core.formatter.wrap_before_multiplicative_operator, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_multiplicative_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_multiplicative_operator' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2a0c244e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2f60e66a, {id=org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2f60e66a, {id=org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2f60e66a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5bccef9f, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5bccef9f, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5bccef9f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1136122a, {id=org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1136122a, {id=org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1136122a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5a537a16, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5a537a16, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5a537a16)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@72288480, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@72288480, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@72288480)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4ea43d4d, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4ea43d4d, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4ea43d4d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6f22c1f1, {id=org.eclipse.jdt.core.formatter.alignment_for_parameterized_type_references, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_parameterized_type_references' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_parameterized_type_references' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6f22c1f1, {id=org.eclipse.jdt.core.formatter.alignment_for_parameterized_type_references, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_parameterized_type_references' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_parameterized_type_references' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6f22c1f1)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2ee095c9, {id=org.eclipse.jdt.core.formatter.alignment_for_logical_operator, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_logical_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_logical_operator' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2ee095c9, {id=org.eclipse.jdt.core.formatter.alignment_for_logical_operator, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_logical_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_logical_operator' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2ee095c9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@185a0811, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@185a0811, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@185a0811)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@77fb1002, {id=org.eclipse.jdt.core.formatter.keep_annotation_declaration_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_annotation_declaration_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_annotation_declaration_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@77fb1002, {id=org.eclipse.jdt.core.formatter.keep_annotation_declaration_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_annotation_declaration_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_annotation_declaration_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@77fb1002)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@e2f6a45, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_record_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_record_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_record_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@e2f6a45, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_record_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_record_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_record_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@e2f6a45)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@24cbf894, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_enum_constant, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_enum_constant' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@24cbf894, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_enum_constant, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_enum_constant' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@24cbf894)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6c19769c, {id=org.eclipse.jdt.core.formatter.insert_space_after_multiplicative_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_multiplicative_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_multiplicative_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6c19769c, {id=org.eclipse.jdt.core.formatter.insert_space_after_multiplicative_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_multiplicative_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_multiplicative_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6c19769c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@434d001d, {id=org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@434d001d, {id=org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@434d001d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@36453773, {id=org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@36453773, {id=org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@36453773)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4db16677, {id=org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4db16677, {id=org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4db16677)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6abb44cb, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6abb44cb, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6abb44cb)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@41ddec69, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@41ddec69, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@41ddec69)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5e3cb58e, {id=org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5e3cb58e, {id=org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5e3cb58e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@18f8e2e0, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@18f8e2e0, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@18f8e2e0)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@28d56028, {id=org.eclipse.jdt.core.formatter.blank_lines_before_abstract_method, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_before_abstract_method' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_before_abstract_method' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@28d56028, {id=org.eclipse.jdt.core.formatter.blank_lines_before_abstract_method, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_before_abstract_method' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_before_abstract_method' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@28d56028)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6c56fff, {id=org.eclipse.jdt.core.formatter.keep_enum_constant_declaration_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_enum_constant_declaration_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_enum_constant_declaration_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6c56fff, {id=org.eclipse.jdt.core.formatter.keep_enum_constant_declaration_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_enum_constant_declaration_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_enum_constant_declaration_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6c56fff)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3dee3a6c, {id=org.eclipse.jdt.core.formatter.align_variable_declarations_on_columns, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.align_variable_declarations_on_columns' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.align_variable_declarations_on_columns' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3dee3a6c, {id=org.eclipse.jdt.core.formatter.align_variable_declarations_on_columns, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.align_variable_declarations_on_columns' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.align_variable_declarations_on_columns' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3dee3a6c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@62de20d3, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@62de20d3, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@62de20d3)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6109d880, {id=org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6109d880, {id=org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6109d880)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4c9ef9c9, {id=org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4c9ef9c9, {id=org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4c9ef9c9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6f976c, {id=org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6f976c, {id=org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6f976c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1324e70a, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_catch_clause, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_catch_clause' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_catch_clause' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1324e70a, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_catch_clause, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_catch_clause' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_catch_clause' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1324e70a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3cc6f036, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3cc6f036, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3cc6f036)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@72d16d6, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@72d16d6, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@72d16d6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7b0525a8, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7b0525a8, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7b0525a8)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4f2d8175, {id=org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4f2d8175, {id=org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4f2d8175)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@44618fe6, {id=org.eclipse.jdt.core.formatter.alignment_for_multiplicative_operator, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_multiplicative_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_multiplicative_operator' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@44618fe6, {id=org.eclipse.jdt.core.formatter.alignment_for_multiplicative_operator, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_multiplicative_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_multiplicative_operator' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@44618fe6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2b15ba1a, {id=org.eclipse.jdt.core.formatter.keep_anonymous_type_declaration_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_anonymous_type_declaration_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_anonymous_type_declaration_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2b15ba1a, {id=org.eclipse.jdt.core.formatter.keep_anonymous_type_declaration_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_anonymous_type_declaration_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_anonymous_type_declaration_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2b15ba1a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@796fe2b5, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_switch_case_expressions, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_switch_case_expressions' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_switch_case_expressions' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@796fe2b5, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_switch_case_expressions, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_switch_case_expressions' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_switch_case_expressions' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@796fe2b5)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5a6af2c4, {id=org.eclipse.jdt.core.formatter.wrap_before_shift_operator, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_shift_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_shift_operator' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5a6af2c4, {id=org.eclipse.jdt.core.formatter.wrap_before_shift_operator, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_shift_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_shift_operator' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5a6af2c4)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@123c48d0, {id=org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@123c48d0, {id=org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@123c48d0)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@14fff5e7, {id=org.eclipse.jdt.core.formatter.brace_position_for_block, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_block' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@14fff5e7, {id=org.eclipse.jdt.core.formatter.brace_position_for_block, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_block' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@14fff5e7)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1203d787, {id=org.eclipse.jdt.core.formatter.number_of_blank_lines_at_end_of_code_block, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.number_of_blank_lines_at_end_of_code_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.number_of_blank_lines_at_end_of_code_block' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1203d787, {id=org.eclipse.jdt.core.formatter.number_of_blank_lines_at_end_of_code_block, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.number_of_blank_lines_at_end_of_code_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.number_of_blank_lines_at_end_of_code_block' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1203d787)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1f72fbd1, {id=org.eclipse.jdt.core.formatter.insert_space_before_bitwise_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_bitwise_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_bitwise_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1f72fbd1, {id=org.eclipse.jdt.core.formatter.insert_space_before_bitwise_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_bitwise_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_bitwise_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1f72fbd1)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6f785a27, {id=org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6f785a27, {id=org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6f785a27)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@443dae2, {id=org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@443dae2, {id=org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@443dae2)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@8f09a02, {id=org.eclipse.jdt.core.formatter.alignment_for_type_parameters, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_type_parameters' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@8f09a02, {id=org.eclipse.jdt.core.formatter.alignment_for_type_parameters, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_type_parameters' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@8f09a02)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5454be, {id=org.eclipse.jdt.core.formatter.alignment_for_compact_loops, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_compact_loops' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_compact_loops' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5454be, {id=org.eclipse.jdt.core.formatter.alignment_for_compact_loops, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_compact_loops' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_compact_loops' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5454be)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2dd08ff1, {id=org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2dd08ff1, {id=org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2dd08ff1)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@37dec463, {id=org.eclipse.jdt.core.formatter.keep_simple_for_body_on_same_line, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_simple_for_body_on_same_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_simple_for_body_on_same_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@37dec463, {id=org.eclipse.jdt.core.formatter.keep_simple_for_body_on_same_line, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_simple_for_body_on_same_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_simple_for_body_on_same_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@37dec463)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3bf26810, {id=org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3bf26810, {id=org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3bf26810)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@19213a74, {id=org.eclipse.jdt.core.formatter.wrap_before_switch_case_arrow_operator, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_switch_case_arrow_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_switch_case_arrow_operator' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@19213a74, {id=org.eclipse.jdt.core.formatter.wrap_before_switch_case_arrow_operator, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_switch_case_arrow_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_switch_case_arrow_operator' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@19213a74)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@30a791a6, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@30a791a6, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@30a791a6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@719bb60d, {id=org.eclipse.jdt.core.formatter.insert_space_before_unary_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_unary_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_unary_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@719bb60d, {id=org.eclipse.jdt.core.formatter.insert_space_before_unary_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_unary_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_unary_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@719bb60d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5981f2c6, {id=org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5981f2c6, {id=org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5981f2c6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@49639118, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_annotation, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_annotation' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@49639118, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_annotation, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_annotation' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@49639118)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@45451333, {id=org.eclipse.jdt.core.formatter.insert_space_before_ellipsis, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_ellipsis' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_ellipsis' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@45451333, {id=org.eclipse.jdt.core.formatter.insert_space_before_ellipsis, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_ellipsis' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_ellipsis' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@45451333)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6942ee48, {id=org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6942ee48, {id=org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6942ee48)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3f033664, {id=org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3f033664, {id=org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3f033664)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6abd8bcd, {id=org.eclipse.jdt.core.formatter.alignment_for_annotations_on_enum_constant, value=49})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_enum_constant' to type 'String'
[DEBUG] Convert string '49' to class 'java.lang.String'
[DEBUG] Converting 'String' value '49' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6abd8bcd, {id=org.eclipse.jdt.core.formatter.alignment_for_annotations_on_enum_constant, value=49})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_enum_constant' to type 'String'
[DEBUG] Convert string '49' to class 'java.lang.String'
[DEBUG] Converting 'String' value '49' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6abd8bcd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@70cd122, {id=org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@70cd122, {id=org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@70cd122)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@79424f25, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@79424f25, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@79424f25)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5fd4e67f, {id=org.eclipse.jdt.core.formatter.text_block_indentation, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.text_block_indentation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.text_block_indentation' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5fd4e67f, {id=org.eclipse.jdt.core.formatter.text_block_indentation, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.text_block_indentation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.text_block_indentation' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5fd4e67f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@59b1edab, {id=org.eclipse.jdt.core.formatter.align_type_members_on_columns, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.align_type_members_on_columns' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.align_type_members_on_columns' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@59b1edab, {id=org.eclipse.jdt.core.formatter.align_type_members_on_columns, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.align_type_members_on_columns' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.align_type_members_on_columns' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@59b1edab)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3855b27e, {id=org.eclipse.jdt.core.formatter.alignment_for_assignment, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_assignment' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_assignment' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3855b27e, {id=org.eclipse.jdt.core.formatter.alignment_for_assignment, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_assignment' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_assignment' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3855b27e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5305f936, {id=org.eclipse.jdt.core.formatter.alignment_for_module_statements, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_module_statements' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_module_statements' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5305f936, {id=org.eclipse.jdt.core.formatter.alignment_for_module_statements, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_module_statements' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_module_statements' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5305f936)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2b1a1a37, {id=org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2b1a1a37, {id=org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2b1a1a37)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7d90764a, {id=org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7d90764a, {id=org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7d90764a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6843fdc4, {id=org.eclipse.jdt.core.formatter.comment.align_tags_names_descriptions, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.align_tags_names_descriptions' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.align_tags_names_descriptions' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6843fdc4, {id=org.eclipse.jdt.core.formatter.comment.align_tags_names_descriptions, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.align_tags_names_descriptions' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.align_tags_names_descriptions' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6843fdc4)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@147375b3, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@147375b3, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@147375b3)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6f430ea8, {id=org.eclipse.jdt.core.formatter.keep_if_then_body_block_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_if_then_body_block_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_if_then_body_block_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6f430ea8, {id=org.eclipse.jdt.core.formatter.keep_if_then_body_block_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_if_then_body_block_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_if_then_body_block_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6f430ea8)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@119f072c, {id=org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@119f072c, {id=org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@119f072c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@66456506, {id=org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@66456506, {id=org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@66456506)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@69944a90, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@69944a90, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@69944a90)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1ed52f44, {id=org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1ed52f44, {id=org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1ed52f44)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@771afdd5, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@771afdd5, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@771afdd5)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3abadb65, {id=org.eclipse.jdt.core.formatter.align_assignment_statements_on_columns, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.align_assignment_statements_on_columns' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.align_assignment_statements_on_columns' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3abadb65, {id=org.eclipse.jdt.core.formatter.align_assignment_statements_on_columns, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.align_assignment_statements_on_columns' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.align_assignment_statements_on_columns' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3abadb65)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7131d668, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_permitted_types, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_permitted_types' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_permitted_types' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7131d668, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_permitted_types, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_permitted_types' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_permitted_types' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7131d668)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@46a97805, {id=org.eclipse.jdt.core.formatter.brace_position_for_block_in_case, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_block_in_case' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_block_in_case' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@46a97805, {id=org.eclipse.jdt.core.formatter.brace_position_for_block_in_case, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_block_in_case' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_block_in_case' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@46a97805)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@667dd150, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@667dd150, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@667dd150)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@af04f09, {id=org.eclipse.jdt.core.formatter.alignment_for_conditional_expression_chain, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_conditional_expression_chain' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_conditional_expression_chain' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@af04f09, {id=org.eclipse.jdt.core.formatter.alignment_for_conditional_expression_chain, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_conditional_expression_chain' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_conditional_expression_chain' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@af04f09)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@758d4aa9, {id=org.eclipse.jdt.core.formatter.comment.format_header, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.format_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.format_header' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@758d4aa9, {id=org.eclipse.jdt.core.formatter.comment.format_header, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.format_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.format_header' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@758d4aa9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@78e97d4d, {id=org.eclipse.jdt.core.formatter.alignment_for_type_annotations, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_type_annotations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_type_annotations' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@78e97d4d, {id=org.eclipse.jdt.core.formatter.alignment_for_type_annotations, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_type_annotations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_type_annotations' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@78e97d4d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7096d451, {id=org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7096d451, {id=org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7096d451)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7816454d, {id=org.eclipse.jdt.core.formatter.wrap_before_assertion_message_operator, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_assertion_message_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_assertion_message_operator' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7816454d, {id=org.eclipse.jdt.core.formatter.wrap_before_assertion_message_operator, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_assertion_message_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_assertion_message_operator' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7816454d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@67d180e4, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@67d180e4, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@67d180e4)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@54e18a46, {id=org.eclipse.jdt.core.formatter.alignment_for_method_declaration, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_method_declaration' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@54e18a46, {id=org.eclipse.jdt.core.formatter.alignment_for_method_declaration, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_method_declaration' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@54e18a46)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1293f8d7, {id=org.eclipse.jdt.core.formatter.align_fields_grouping_blank_lines, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.align_fields_grouping_blank_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.align_fields_grouping_blank_lines' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1293f8d7, {id=org.eclipse.jdt.core.formatter.align_fields_grouping_blank_lines, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.align_fields_grouping_blank_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.align_fields_grouping_blank_lines' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1293f8d7)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@58e5fbe5, {id=org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@58e5fbe5, {id=org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@58e5fbe5)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@335896bd, {id=org.eclipse.jdt.core.formatter.alignment_for_bitwise_operator, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_bitwise_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_bitwise_operator' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@335896bd, {id=org.eclipse.jdt.core.formatter.alignment_for_bitwise_operator, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_bitwise_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_bitwise_operator' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@335896bd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6b33892a, {id=org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6b33892a, {id=org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6b33892a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@666b91db, {id=org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@666b91db, {id=org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@666b91db)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@11a67420, {id=org.eclipse.jdt.core.formatter.alignment_for_resources_in_try, value=80})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_resources_in_try' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_resources_in_try' to type 'String'
[DEBUG] Convert string '80' to class 'java.lang.String'
[DEBUG] Converting 'String' value '80' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@11a67420, {id=org.eclipse.jdt.core.formatter.alignment_for_resources_in_try, value=80})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_resources_in_try' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_resources_in_try' to type 'String'
[DEBUG] Convert string '80' to class 'java.lang.String'
[DEBUG] Converting 'String' value '80' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@11a67420)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@663cf5d7, {id=org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@663cf5d7, {id=org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@663cf5d7)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@11b14ae3, {id=org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@11b14ae3, {id=org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@11b14ae3)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2b6ee447, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2b6ee447, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2b6ee447)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@9cb927e, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@9cb927e, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@9cb927e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@8585cdd, {id=org.eclipse.jdt.core.formatter.comment.format_source_code, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.format_source_code' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.format_source_code' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@8585cdd, {id=org.eclipse.jdt.core.formatter.comment.format_source_code, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.format_source_code' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.format_source_code' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@8585cdd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1325f967, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1325f967, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1325f967)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4f356b98, {id=org.eclipse.jdt.core.formatter.blank_lines_before_field, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_before_field' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_before_field' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4f356b98, {id=org.eclipse.jdt.core.formatter.blank_lines_before_field, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_before_field' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_before_field' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4f356b98)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1ab85862, {id=org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1ab85862, {id=org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1ab85862)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@504c415c, {id=org.eclipse.jdt.core.formatter.blank_lines_before_method, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_before_method' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_before_method' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@504c415c, {id=org.eclipse.jdt.core.formatter.blank_lines_before_method, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_before_method' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_before_method' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@504c415c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6c9e74f3, {id=org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6c9e74f3, {id=org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6c9e74f3)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@813ab53, {id=org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@813ab53, {id=org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@813ab53)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5030997b, {id=org.eclipse.jdt.core.formatter.insert_space_after_not_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_not_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_not_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5030997b, {id=org.eclipse.jdt.core.formatter.insert_space_after_not_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_not_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_not_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5030997b)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@62c47480, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@62c47480, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@62c47480)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7de2bdc7, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7de2bdc7, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7de2bdc7)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@683ed81b, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@683ed81b, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@683ed81b)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3c116f26, {id=org.eclipse.jdt.core.formatter.comment.format_html, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.format_html' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.format_html' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3c116f26, {id=org.eclipse.jdt.core.formatter.comment.format_html, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.format_html' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.format_html' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3c116f26)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7db06c50, {id=org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7db06c50, {id=org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7db06c50)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1554eaa4, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_method_delcaration, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_method_delcaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_method_delcaration' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1554eaa4, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_method_delcaration, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_method_delcaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_method_delcaration' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1554eaa4)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@b340615, {id=org.eclipse.jdt.core.formatter.alignment_for_compact_if, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_compact_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_compact_if' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@b340615, {id=org.eclipse.jdt.core.formatter.alignment_for_compact_if, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_compact_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_compact_if' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@b340615)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3c6b300a, {id=org.eclipse.jdt.core.formatter.indent_empty_lines, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_empty_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_empty_lines' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3c6b300a, {id=org.eclipse.jdt.core.formatter.indent_empty_lines, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_empty_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_empty_lines' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3c6b300a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4247093b, {id=org.eclipse.jdt.core.formatter.alignment_for_type_arguments, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_type_arguments' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4247093b, {id=org.eclipse.jdt.core.formatter.alignment_for_type_arguments, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_type_arguments' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4247093b)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7074da1d, {id=org.eclipse.jdt.core.formatter.insert_space_after_unary_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_unary_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_unary_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7074da1d, {id=org.eclipse.jdt.core.formatter.insert_space_after_unary_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_unary_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_unary_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7074da1d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5bdb6ea8, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5bdb6ea8, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5bdb6ea8)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3e55eeb9, {id=org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3e55eeb9, {id=org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3e55eeb9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@44a13699, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@44a13699, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@44a13699)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1253b822, {id=org.eclipse.jdt.core.formatter.alignment_for_annotations_on_package, value=49})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_package' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_package' to type 'String'
[DEBUG] Convert string '49' to class 'java.lang.String'
[DEBUG] Converting 'String' value '49' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1253b822, {id=org.eclipse.jdt.core.formatter.alignment_for_annotations_on_package, value=49})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_package' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_package' to type 'String'
[DEBUG] Convert string '49' to class 'java.lang.String'
[DEBUG] Converting 'String' value '49' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1253b822)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@127d2aee, {id=org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@127d2aee, {id=org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@127d2aee)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3cc2e3e, {id=org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3cc2e3e, {id=org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3cc2e3e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4e14d520, {id=org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4e14d520, {id=org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4e14d520)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4189e668, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_label, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_label' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_label' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4189e668, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_label, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_label' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_label' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4189e668)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3a589eed, {id=org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3a589eed, {id=org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3a589eed)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5807ea46, {id=org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5807ea46, {id=org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5807ea46)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@305289b3, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@305289b3, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@305289b3)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3ee68377, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3ee68377, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3ee68377)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4037cdb0, {id=org.eclipse.jdt.core.formatter.insert_space_after_arrow_in_switch_case, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_arrow_in_switch_case' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_arrow_in_switch_case' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4037cdb0, {id=org.eclipse.jdt.core.formatter.insert_space_after_arrow_in_switch_case, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_arrow_in_switch_case' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_arrow_in_switch_case' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4037cdb0)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@27055a2a, {id=org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@27055a2a, {id=org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@27055a2a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@33e4068, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@33e4068, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@33e4068)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@9499643, {id=org.eclipse.jdt.core.formatter.alignment_for_permitted_types_in_type_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_permitted_types_in_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_permitted_types_in_type_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@9499643, {id=org.eclipse.jdt.core.formatter.alignment_for_permitted_types_in_type_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_permitted_types_in_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_permitted_types_in_type_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@9499643)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@776d8097, {id=org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_record_header, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_record_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_record_header' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@776d8097, {id=org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_record_header, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_record_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_record_header' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@776d8097)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7a34505a, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7a34505a, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7a34505a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@b787274, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@b787274, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@b787274)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4ec616d6, {id=org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4ec616d6, {id=org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4ec616d6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@55b45ea1, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@55b45ea1, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@55b45ea1)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@d5a72cd, {id=org.eclipse.jdt.core.formatter.wrap_before_bitwise_operator, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_bitwise_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_bitwise_operator' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@d5a72cd, {id=org.eclipse.jdt.core.formatter.wrap_before_bitwise_operator, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_bitwise_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_bitwise_operator' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@d5a72cd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@45f95ac0, {id=org.eclipse.jdt.core.formatter.comment.javadoc_do_not_separate_block_tags, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.javadoc_do_not_separate_block_tags' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.javadoc_do_not_separate_block_tags' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@45f95ac0, {id=org.eclipse.jdt.core.formatter.comment.javadoc_do_not_separate_block_tags, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.javadoc_do_not_separate_block_tags' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.javadoc_do_not_separate_block_tags' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@45f95ac0)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3b77940f, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3b77940f, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3b77940f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4c418496, {id=org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4c418496, {id=org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4c418496)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@12d35bc9, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@12d35bc9, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@12d35bc9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1df32c09, {id=org.eclipse.jdt.core.formatter.comment.indent_tag_description, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.indent_tag_description' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.indent_tag_description' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1df32c09, {id=org.eclipse.jdt.core.formatter.comment.indent_tag_description, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.indent_tag_description' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.indent_tag_description' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1df32c09)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1aa31454, {id=org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1aa31454, {id=org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1aa31454)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5a8656a2, {id=org.eclipse.jdt.core.formatter.brace_position_for_record_constructor, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_record_constructor' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_record_constructor' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5a8656a2, {id=org.eclipse.jdt.core.formatter.brace_position_for_record_constructor, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_record_constructor' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_record_constructor' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5a8656a2)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@52035328, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@52035328, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@52035328)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5614ae05, {id=org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5614ae05, {id=org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5614ae05)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@54970127, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@54970127, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@54970127)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3c4c7e51, {id=org.eclipse.jdt.core.formatter.alignment_for_string_concatenation, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_string_concatenation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_string_concatenation' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3c4c7e51, {id=org.eclipse.jdt.core.formatter.alignment_for_string_concatenation, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_string_concatenation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_string_concatenation' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3c4c7e51)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@749ee0e3, {id=org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@749ee0e3, {id=org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@749ee0e3)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7891cf3, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7891cf3, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7891cf3)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6bfbab1c, {id=org.eclipse.jdt.core.formatter.alignment_for_multiple_fields, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_multiple_fields' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_multiple_fields' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6bfbab1c, {id=org.eclipse.jdt.core.formatter.alignment_for_multiple_fields, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_multiple_fields' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_multiple_fields' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6bfbab1c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@349aeec4, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@349aeec4, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@349aeec4)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3700994c, {id=org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3700994c, {id=org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3700994c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@78a165db, {id=org.eclipse.jdt.core.formatter.brace_position_for_array_initializer, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_array_initializer' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@78a165db, {id=org.eclipse.jdt.core.formatter.brace_position_for_array_initializer, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_array_initializer' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@78a165db)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4eb48298, {id=org.eclipse.jdt.core.formatter.insert_space_before_shift_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_shift_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_shift_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4eb48298, {id=org.eclipse.jdt.core.formatter.insert_space_before_shift_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_shift_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_shift_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4eb48298)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2d3bb944, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2d3bb944, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2d3bb944)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1e429f56, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1e429f56, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1e429f56)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6dbeaef8, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6dbeaef8, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6dbeaef8)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7744195, {id=org.eclipse.jdt.core.formatter.insert_space_after_shift_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_shift_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_shift_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7744195, {id=org.eclipse.jdt.core.formatter.insert_space_after_shift_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_shift_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_shift_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7744195)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@77f529a6, {id=org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@77f529a6, {id=org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@77f529a6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7d47b021, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7d47b021, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7d47b021)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6516181f, {id=org.eclipse.jdt.core.formatter.keep_simple_do_while_body_on_same_line, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_simple_do_while_body_on_same_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_simple_do_while_body_on_same_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6516181f, {id=org.eclipse.jdt.core.formatter.keep_simple_do_while_body_on_same_line, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_simple_do_while_body_on_same_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_simple_do_while_body_on_same_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6516181f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@40cb95c1, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@40cb95c1, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@40cb95c1)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1ead3c67, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_record_components, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_record_components' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_record_components' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1ead3c67, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_record_components, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_record_components' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_record_components' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1ead3c67)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5e2b512b, {id=org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5e2b512b, {id=org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5e2b512b)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@ba87c11, {id=org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@ba87c11, {id=org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@ba87c11)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@17d19538, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@17d19538, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@17d19538)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6068cda1, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6068cda1, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6068cda1)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@644e6a8e, {id=org.eclipse.jdt.core.formatter.alignment_for_expressions_in_for_loop_header, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_expressions_in_for_loop_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_expressions_in_for_loop_header' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@644e6a8e, {id=org.eclipse.jdt.core.formatter.alignment_for_expressions_in_for_loop_header, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_expressions_in_for_loop_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_expressions_in_for_loop_header' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@644e6a8e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2ccecae2, {id=org.eclipse.jdt.core.formatter.wrap_before_additive_operator, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_additive_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_additive_operator' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2ccecae2, {id=org.eclipse.jdt.core.formatter.wrap_before_additive_operator, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_additive_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_additive_operator' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2ccecae2)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@37ade216, {id=org.eclipse.jdt.core.formatter.keep_simple_getter_setter_on_one_line, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_simple_getter_setter_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_simple_getter_setter_on_one_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@37ade216, {id=org.eclipse.jdt.core.formatter.keep_simple_getter_setter_on_one_line, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_simple_getter_setter_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_simple_getter_setter_on_one_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@37ade216)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@118e2487, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@118e2487, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@118e2487)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6032622, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6032622, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6032622)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5cc075da, {id=org.eclipse.jdt.core.formatter.insert_space_before_string_concatenation, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_string_concatenation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_string_concatenation' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5cc075da, {id=org.eclipse.jdt.core.formatter.insert_space_before_string_concatenation, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_string_concatenation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_string_concatenation' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5cc075da)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4258106, {id=org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4258106, {id=org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4258106)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@64ef2719, {id=org.eclipse.jdt.core.formatter.join_lines_in_comments, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.join_lines_in_comments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.join_lines_in_comments' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@64ef2719, {id=org.eclipse.jdt.core.formatter.join_lines_in_comments, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.join_lines_in_comments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.join_lines_in_comments' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@64ef2719)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7b423f90, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_record_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_record_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_record_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7b423f90, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_record_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_record_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_record_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7b423f90)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@24f3fb87, {id=org.eclipse.jdt.core.formatter.insert_space_after_relational_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_relational_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_relational_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@24f3fb87, {id=org.eclipse.jdt.core.formatter.insert_space_after_relational_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_relational_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_relational_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@24f3fb87)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@c7673ae, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@c7673ae, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@c7673ae)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@113c4ad6, {id=org.eclipse.jdt.core.formatter.blank_lines_between_import_groups, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_between_import_groups' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_between_import_groups' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@113c4ad6, {id=org.eclipse.jdt.core.formatter.blank_lines_between_import_groups, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_between_import_groups' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_between_import_groups' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@113c4ad6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7be859de, {id=org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7be859de, {id=org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7be859de)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@40fcaae7, {id=org.eclipse.jdt.core.formatter.insert_space_after_logical_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_logical_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_logical_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@40fcaae7, {id=org.eclipse.jdt.core.formatter.insert_space_after_logical_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_logical_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_logical_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@40fcaae7)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7fa85a55, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_method_invocation, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_method_invocation' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7fa85a55, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_method_invocation, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_method_invocation' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7fa85a55)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@cb1c58c, {id=org.eclipse.jdt.core.formatter.blank_lines_after_imports, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_after_imports' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_after_imports' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@cb1c58c, {id=org.eclipse.jdt.core.formatter.blank_lines_after_imports, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_after_imports' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_after_imports' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@cb1c58c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@352e4b6d, {id=org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@352e4b6d, {id=org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@352e4b6d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@10a064bd, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_record_declaration, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_record_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_record_declaration' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@10a064bd, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_record_declaration, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_record_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_record_declaration' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@10a064bd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2de7fe0e, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2de7fe0e, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2de7fe0e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2ff8d39b, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_switch_statement, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_switch_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_switch_statement' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2ff8d39b, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_switch_statement, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_switch_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_switch_statement' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2ff8d39b)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@684a802a, {id=org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@684a802a, {id=org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@684a802a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7b5c9412, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7b5c9412, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7b5c9412)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@69d902f9, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@69d902f9, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@69d902f9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@547052, {id=org.eclipse.jdt.core.formatter.insert_space_after_arrow_in_switch_default, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_arrow_in_switch_default' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_arrow_in_switch_default' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@547052, {id=org.eclipse.jdt.core.formatter.insert_space_after_arrow_in_switch_default, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_arrow_in_switch_default' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_arrow_in_switch_default' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@547052)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3ca3eba2, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3ca3eba2, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3ca3eba2)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@23c00420, {id=org.eclipse.jdt.core.formatter.disabling_tag, value=@formatter:off})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.disabling_tag' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.disabling_tag' to type 'String'
[DEBUG] Convert string '@formatter:off' to class 'java.lang.String'
[DEBUG] Converting 'String' value '@formatter:off' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@23c00420, {id=org.eclipse.jdt.core.formatter.disabling_tag, value=@formatter:off})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.disabling_tag' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.disabling_tag' to type 'String'
[DEBUG] Convert string '@formatter:off' to class 'java.lang.String'
[DEBUG] Converting 'String' value '@formatter:off' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@23c00420)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@22f046b, {id=org.eclipse.jdt.core.formatter.alignment_for_enum_constants, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_enum_constants' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_enum_constants' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@22f046b, {id=org.eclipse.jdt.core.formatter.alignment_for_enum_constants, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_enum_constants' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_enum_constants' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@22f046b)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@215a329c, {id=org.eclipse.jdt.core.formatter.blank_lines_before_imports, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_before_imports' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_before_imports' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@215a329c, {id=org.eclipse.jdt.core.formatter.blank_lines_before_imports, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_before_imports' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_before_imports' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@215a329c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@20723ee, {id=org.eclipse.jdt.core.formatter.number_of_blank_lines_at_end_of_method_body, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.number_of_blank_lines_at_end_of_method_body' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.number_of_blank_lines_at_end_of_method_body' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@20723ee, {id=org.eclipse.jdt.core.formatter.number_of_blank_lines_at_end_of_method_body, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.number_of_blank_lines_at_end_of_method_body' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.number_of_blank_lines_at_end_of_method_body' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@20723ee)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@21c5c68a, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_if_while_statement, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_if_while_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_if_while_statement' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@21c5c68a, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_if_while_statement, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_if_while_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_if_while_statement' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@21c5c68a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5bb39285, {id=org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5bb39285, {id=org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5bb39285)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2b0d85bd, {id=org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2b0d85bd, {id=org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2b0d85bd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@102ecb61, {id=org.eclipse.jdt.core.formatter.insert_space_before_arrow_in_switch_case, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_arrow_in_switch_case' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_arrow_in_switch_case' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@102ecb61, {id=org.eclipse.jdt.core.formatter.insert_space_before_arrow_in_switch_case, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_arrow_in_switch_case' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_arrow_in_switch_case' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@102ecb61)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1fd0ae78, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1fd0ae78, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1fd0ae78)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@583030bd, {id=org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@583030bd, {id=org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@583030bd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1f57666b, {id=org.eclipse.jdt.core.formatter.keep_switch_body_block_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_switch_body_block_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_switch_body_block_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1f57666b, {id=org.eclipse.jdt.core.formatter.keep_switch_body_block_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_switch_body_block_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_switch_body_block_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1f57666b)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7944c323, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7944c323, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7944c323)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@637d111d, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@637d111d, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@637d111d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3a917017, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3a917017, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3a917017)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1ed12d10, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1ed12d10, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1ed12d10)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4153a832, {id=org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4153a832, {id=org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4153a832)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4a2dbcfc, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4a2dbcfc, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4a2dbcfc)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7b8d6c66, {id=org.eclipse.jdt.core.formatter.indent_statements_compare_to_block, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_statements_compare_to_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_statements_compare_to_block' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7b8d6c66, {id=org.eclipse.jdt.core.formatter.indent_statements_compare_to_block, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_statements_compare_to_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_statements_compare_to_block' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7b8d6c66)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6ca367aa, {id=org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6ca367aa, {id=org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6ca367aa)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@30ed4034, {id=org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@30ed4034, {id=org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@30ed4034)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1700d089, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1700d089, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1700d089)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@77e6053, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@77e6053, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@77e6053)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7097d921, {id=org.eclipse.jdt.core.formatter.alignment_for_expressions_in_switch_case_with_arrow, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_expressions_in_switch_case_with_arrow' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_expressions_in_switch_case_with_arrow' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7097d921, {id=org.eclipse.jdt.core.formatter.alignment_for_expressions_in_switch_case_with_arrow, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_expressions_in_switch_case_with_arrow' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_expressions_in_switch_case_with_arrow' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7097d921)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2a21cbe7, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2a21cbe7, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2a21cbe7)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3bb4c2b2, {id=org.eclipse.jdt.core.formatter.comment.align_tags_descriptions_grouped, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.align_tags_descriptions_grouped' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.align_tags_descriptions_grouped' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3bb4c2b2, {id=org.eclipse.jdt.core.formatter.comment.align_tags_descriptions_grouped, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.align_tags_descriptions_grouped' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.align_tags_descriptions_grouped' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3bb4c2b2)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4fbc516f, {id=org.eclipse.jdt.core.formatter.comment.line_length, value=80})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.line_length' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.line_length' to type 'String'
[DEBUG] Convert string '80' to class 'java.lang.String'
[DEBUG] Converting 'String' value '80' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4fbc516f, {id=org.eclipse.jdt.core.formatter.comment.line_length, value=80})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.line_length' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.line_length' to type 'String'
[DEBUG] Convert string '80' to class 'java.lang.String'
[DEBUG] Converting 'String' value '80' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4fbc516f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1acc768, {id=org.eclipse.jdt.core.formatter.use_on_off_tags, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.use_on_off_tags' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.use_on_off_tags' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1acc768, {id=org.eclipse.jdt.core.formatter.use_on_off_tags, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.use_on_off_tags' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.use_on_off_tags' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1acc768)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@25765a49, {id=org.eclipse.jdt.core.formatter.keep_method_body_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_method_body_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_method_body_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@25765a49, {id=org.eclipse.jdt.core.formatter.keep_method_body_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_method_body_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_method_body_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@25765a49)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@38caad07, {id=org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@38caad07, {id=org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@38caad07)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@15d0b458, {id=org.eclipse.jdt.core.formatter.keep_loop_body_block_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_loop_body_block_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_loop_body_block_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@15d0b458, {id=org.eclipse.jdt.core.formatter.keep_loop_body_block_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_loop_body_block_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_loop_body_block_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@15d0b458)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@72a0a60d, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@72a0a60d, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@72a0a60d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@65930e02, {id=org.eclipse.jdt.core.formatter.brace_position_for_method_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_method_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@65930e02, {id=org.eclipse.jdt.core.formatter.brace_position_for_method_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_method_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@65930e02)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@85c3522, {id=org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@85c3522, {id=org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@85c3522)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@18be3205, {id=org.eclipse.jdt.core.formatter.keep_type_declaration_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_type_declaration_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_type_declaration_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@18be3205, {id=org.eclipse.jdt.core.formatter.keep_type_declaration_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_type_declaration_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_type_declaration_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@18be3205)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6fd97fd1, {id=org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6fd97fd1, {id=org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6fd97fd1)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@12c78f36, {id=org.eclipse.jdt.core.formatter.alignment_for_additive_operator, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_additive_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_additive_operator' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@12c78f36, {id=org.eclipse.jdt.core.formatter.alignment_for_additive_operator, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_additive_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_additive_operator' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@12c78f36)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7bdb4d69, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7bdb4d69, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7bdb4d69)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@129c760d, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_record_constructor, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_record_constructor' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_record_constructor' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@129c760d, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_record_constructor, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_record_constructor' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_record_constructor' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@129c760d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@361fa478, {id=org.eclipse.jdt.core.formatter.insert_space_before_relational_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_relational_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_relational_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@361fa478, {id=org.eclipse.jdt.core.formatter.insert_space_before_relational_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_relational_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_relational_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@361fa478)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@180f33b2, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@180f33b2, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@180f33b2)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@391e85df, {id=org.eclipse.jdt.core.formatter.keep_record_declaration_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_record_declaration_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_record_declaration_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@391e85df, {id=org.eclipse.jdt.core.formatter.keep_record_declaration_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_record_declaration_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_record_declaration_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@391e85df)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@48c3a0ef, {id=org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@48c3a0ef, {id=org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@48c3a0ef)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3b4f1eb, {id=org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3b4f1eb, {id=org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3b4f1eb)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6247c08c, {id=org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6247c08c, {id=org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6247c08c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2f3a8166, {id=org.eclipse.jdt.core.formatter.brace_position_for_lambda_body, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_lambda_body' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_lambda_body' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2f3a8166, {id=org.eclipse.jdt.core.formatter.brace_position_for_lambda_body, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_lambda_body' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_lambda_body' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2f3a8166)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7aab98b6, {id=org.eclipse.jdt.core.formatter.compact_else_if, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.compact_else_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.compact_else_if' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7aab98b6, {id=org.eclipse.jdt.core.formatter.compact_else_if, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.compact_else_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.compact_else_if' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7aab98b6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5e3405a1, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5e3405a1, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5e3405a1)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@22bfd4b, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@22bfd4b, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@22bfd4b)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@79e16dd9, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@79e16dd9, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@79e16dd9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5fa9247b, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5fa9247b, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5fa9247b)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@21ce3b22, {id=org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@21ce3b22, {id=org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@21ce3b22)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7cd25bf5, {id=org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7cd25bf5, {id=org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7cd25bf5)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@e2f6e13, {id=org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@e2f6e13, {id=org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@e2f6e13)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@18b30951, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@18b30951, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@18b30951)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@48f4264e, {id=org.eclipse.jdt.core.formatter.alignment_for_annotations_on_parameter, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_parameter' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_parameter' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@48f4264e, {id=org.eclipse.jdt.core.formatter.alignment_for_annotations_on_parameter, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_parameter' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_parameter' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@48f4264e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2697c156, {id=org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2697c156, {id=org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2697c156)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@533d7c61, {id=org.eclipse.jdt.core.formatter.alignment_for_relational_operator, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_relational_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_relational_operator' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@533d7c61, {id=org.eclipse.jdt.core.formatter.alignment_for_relational_operator, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_relational_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_relational_operator' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@533d7c61)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@53c40ed6, {id=org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@53c40ed6, {id=org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@53c40ed6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3a6b94b6, {id=org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3a6b94b6, {id=org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3a6b94b6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@22ee7fdc, {id=org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@22ee7fdc, {id=org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@22ee7fdc)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1a88d194, {id=org.eclipse.jdt.core.formatter.insert_space_after_additive_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_additive_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_additive_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1a88d194, {id=org.eclipse.jdt.core.formatter.insert_space_after_additive_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_additive_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_additive_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1a88d194)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6949cead, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6949cead, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6949cead)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@fe13916, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@fe13916, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@fe13916)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5ea0a7a9, {id=org.eclipse.jdt.core.formatter.insert_space_after_string_concatenation, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_string_concatenation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_string_concatenation' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5ea0a7a9, {id=org.eclipse.jdt.core.formatter.insert_space_after_string_concatenation, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_string_concatenation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_string_concatenation' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5ea0a7a9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@278c998, {id=org.eclipse.jdt.core.formatter.comment.format_line_comments, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.format_line_comments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.format_line_comments' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@278c998, {id=org.eclipse.jdt.core.formatter.comment.format_line_comments, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.format_line_comments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.format_line_comments' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@278c998)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@25e353dc, {id=org.eclipse.jdt.core.formatter.align_selector_in_method_invocation_on_expression_first_line, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.align_selector_in_method_invocation_on_expression_first_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.align_selector_in_method_invocation_on_expression_first_line' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@25e353dc, {id=org.eclipse.jdt.core.formatter.align_selector_in_method_invocation_on_expression_first_line, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.align_selector_in_method_invocation_on_expression_first_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.align_selector_in_method_invocation_on_expression_first_line' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@25e353dc)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@234ce7ff, {id=org.eclipse.jdt.core.formatter.brace_position_for_record_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_record_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_record_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@234ce7ff, {id=org.eclipse.jdt.core.formatter.brace_position_for_record_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_record_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_record_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@234ce7ff)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@780a91d0, {id=org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@780a91d0, {id=org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@780a91d0)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3cfab340, {id=org.eclipse.jdt.core.formatter.keep_switch_case_with_arrow_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_switch_case_with_arrow_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_switch_case_with_arrow_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3cfab340, {id=org.eclipse.jdt.core.formatter.keep_switch_case_with_arrow_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_switch_case_with_arrow_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_switch_case_with_arrow_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3cfab340)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3387ab0, {id=org.eclipse.jdt.core.formatter.alignment_for_expressions_in_switch_case_with_colon, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_expressions_in_switch_case_with_colon' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_expressions_in_switch_case_with_colon' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3387ab0, {id=org.eclipse.jdt.core.formatter.alignment_for_expressions_in_switch_case_with_colon, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_expressions_in_switch_case_with_colon' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_expressions_in_switch_case_with_colon' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3387ab0)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@470f0637, {id=org.eclipse.jdt.core.formatter.number_of_blank_lines_after_code_block, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.number_of_blank_lines_after_code_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.number_of_blank_lines_after_code_block' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@470f0637, {id=org.eclipse.jdt.core.formatter.number_of_blank_lines_after_code_block, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.number_of_blank_lines_after_code_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.number_of_blank_lines_after_code_block' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@470f0637)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6b278b17, {id=org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6b278b17, {id=org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6b278b17)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2ae5580, {id=org.eclipse.jdt.core.formatter.alignment_for_conditional_expression, value=80})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_conditional_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_conditional_expression' to type 'String'
[DEBUG] Convert string '80' to class 'java.lang.String'
[DEBUG] Converting 'String' value '80' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2ae5580, {id=org.eclipse.jdt.core.formatter.alignment_for_conditional_expression, value=80})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_conditional_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_conditional_expression' to type 'String'
[DEBUG] Convert string '80' to class 'java.lang.String'
[DEBUG] Converting 'String' value '80' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2ae5580)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4203529f, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4203529f, {id=org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4203529f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7d82ca56, {id=org.eclipse.jdt.core.formatter.alignment_for_annotations_on_type, value=49})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_type' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_type' to type 'String'
[DEBUG] Convert string '49' to class 'java.lang.String'
[DEBUG] Converting 'String' value '49' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7d82ca56, {id=org.eclipse.jdt.core.formatter.alignment_for_annotations_on_type, value=49})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_type' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_type' to type 'String'
[DEBUG] Convert string '49' to class 'java.lang.String'
[DEBUG] Converting 'String' value '49' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7d82ca56)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2aaa89c2, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2aaa89c2, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2aaa89c2)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5a58db42, {id=org.eclipse.jdt.core.formatter.alignment_for_annotations_on_local_variable, value=49})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_local_variable' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_local_variable' to type 'String'
[DEBUG] Convert string '49' to class 'java.lang.String'
[DEBUG] Converting 'String' value '49' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5a58db42, {id=org.eclipse.jdt.core.formatter.alignment_for_annotations_on_local_variable, value=49})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_local_variable' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_local_variable' to type 'String'
[DEBUG] Convert string '49' to class 'java.lang.String'
[DEBUG] Converting 'String' value '49' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5a58db42)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@217fd3c, {id=org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@217fd3c, {id=org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@217fd3c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@69ac5752, {id=org.eclipse.jdt.core.formatter.insert_space_before_arrow_in_switch_default, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_arrow_in_switch_default' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_arrow_in_switch_default' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@69ac5752, {id=org.eclipse.jdt.core.formatter.insert_space_before_arrow_in_switch_default, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_arrow_in_switch_default' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_arrow_in_switch_default' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@69ac5752)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1736273c, {id=org.eclipse.jdt.core.formatter.comment.insert_new_line_between_different_tags, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.insert_new_line_between_different_tags' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.insert_new_line_between_different_tags' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1736273c, {id=org.eclipse.jdt.core.formatter.comment.insert_new_line_between_different_tags, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.insert_new_line_between_different_tags' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.insert_new_line_between_different_tags' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1736273c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@ba86c53, {id=org.eclipse.jdt.core.formatter.insert_space_before_additive_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_additive_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_additive_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@ba86c53, {id=org.eclipse.jdt.core.formatter.insert_space_before_additive_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_additive_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_additive_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@ba86c53)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@36eb8e07, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@36eb8e07, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@36eb8e07)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3df6494f, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3df6494f, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3df6494f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1b5f960a, {id=org.eclipse.jdt.core.formatter.join_wrapped_lines, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.join_wrapped_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.join_wrapped_lines' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1b5f960a, {id=org.eclipse.jdt.core.formatter.join_wrapped_lines, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.join_wrapped_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.join_wrapped_lines' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1b5f960a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@53ddabc6, {id=org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@53ddabc6, {id=org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@53ddabc6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@39ac8c0c, {id=org.eclipse.jdt.core.formatter.alignment_for_annotations_on_field, value=49})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_field' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_field' to type 'String'
[DEBUG] Convert string '49' to class 'java.lang.String'
[DEBUG] Converting 'String' value '49' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@39ac8c0c, {id=org.eclipse.jdt.core.formatter.alignment_for_annotations_on_field, value=49})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_field' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_field' to type 'String'
[DEBUG] Convert string '49' to class 'java.lang.String'
[DEBUG] Converting 'String' value '49' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@39ac8c0c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@361f1647, {id=org.eclipse.jdt.core.formatter.wrap_before_conditional_operator, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_conditional_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_conditional_operator' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@361f1647, {id=org.eclipse.jdt.core.formatter.wrap_before_conditional_operator, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_conditional_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_conditional_operator' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@361f1647)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@51172948, {id=org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@51172948, {id=org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@51172948)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6f2a3b37, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6f2a3b37, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6f2a3b37)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@323b0632, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@323b0632, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@323b0632)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7cd8831c, {id=org.eclipse.jdt.core.formatter.alignment_for_shift_operator, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_shift_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_shift_operator' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7cd8831c, {id=org.eclipse.jdt.core.formatter.alignment_for_shift_operator, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_shift_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_shift_operator' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7cd8831c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@146db8a6, {id=org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@146db8a6, {id=org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@146db8a6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2a20da9f, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_try_clause, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_try_clause' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_try_clause' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2a20da9f, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_try_clause, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_try_clause' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_try_clause' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2a20da9f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@40c0437f, {id=org.eclipse.jdt.core.formatter.keep_code_block_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_code_block_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_code_block_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@40c0437f, {id=org.eclipse.jdt.core.formatter.keep_code_block_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_code_block_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_code_block_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@40c0437f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@78b8f818, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@78b8f818, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@78b8f818)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1e9d721, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_record_components, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_record_components' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_record_components' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1e9d721, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_record_components, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_record_components' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_record_components' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1e9d721)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2d3111a1, {id=org.eclipse.jdt.core.formatter.tabulation.size, value=4})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.tabulation.size' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.tabulation.size' to type 'String'
[DEBUG] Convert string '4' to class 'java.lang.String'
[DEBUG] Converting 'String' value '4' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2d3111a1, {id=org.eclipse.jdt.core.formatter.tabulation.size, value=4})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.tabulation.size' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.tabulation.size' to type 'String'
[DEBUG] Convert string '4' to class 'java.lang.String'
[DEBUG] Converting 'String' value '4' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2d3111a1)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6f2864c3, {id=org.eclipse.jdt.core.formatter.insert_space_after_bitwise_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_bitwise_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_bitwise_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6f2864c3, {id=org.eclipse.jdt.core.formatter.insert_space_after_bitwise_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_bitwise_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_bitwise_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6f2864c3)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@50ef2906, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@50ef2906, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@50ef2906)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1f70bce5, {id=org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1f70bce5, {id=org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1f70bce5)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3ae91ab3, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3ae91ab3, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3ae91ab3)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@16cb6f51, {id=org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@16cb6f51, {id=org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@16cb6f51)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3fc5d397, {id=org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer, value=2})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer' to type 'String'
[DEBUG] Convert string '2' to class 'java.lang.String'
[DEBUG] Converting 'String' value '2' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3fc5d397, {id=org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer, value=2})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer' to type 'String'
[DEBUG] Convert string '2' to class 'java.lang.String'
[DEBUG] Converting 'String' value '2' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3fc5d397)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@25c8c71e, {id=org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@25c8c71e, {id=org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@25c8c71e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@57867d96, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_record_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_record_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_record_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@57867d96, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_record_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_record_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_record_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@57867d96)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1a7a21d0, {id=org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1a7a21d0, {id=org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1a7a21d0)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@bb21063, {id=org.eclipse.jdt.core.formatter.wrap_before_assignment_operator, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_assignment_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_assignment_operator' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@bb21063, {id=org.eclipse.jdt.core.formatter.wrap_before_assignment_operator, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_assignment_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_assignment_operator' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@bb21063)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6821c63c, {id=org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6821c63c, {id=org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6821c63c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@c2f7c63, {id=org.eclipse.jdt.core.formatter.brace_position_for_switch, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_switch' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@c2f7c63, {id=org.eclipse.jdt.core.formatter.brace_position_for_switch, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_switch' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@c2f7c63)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4790b897, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4790b897, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4790b897)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5cba890e, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5cba890e, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5cba890e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3a4cb483, {id=org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3a4cb483, {id=org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3a4cb483)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4d770bcd, {id=org.eclipse.jdt.core.formatter.alignment_for_switch_case_with_arrow, value=20})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_switch_case_with_arrow' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_switch_case_with_arrow' to type 'String'
[DEBUG] Convert string '20' to class 'java.lang.String'
[DEBUG] Converting 'String' value '20' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4d770bcd, {id=org.eclipse.jdt.core.formatter.alignment_for_switch_case_with_arrow, value=20})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_switch_case_with_arrow' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_switch_case_with_arrow' to type 'String'
[DEBUG] Convert string '20' to class 'java.lang.String'
[DEBUG] Converting 'String' value '20' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4d770bcd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@fe156f4, {id=org.eclipse.jdt.core.formatter.keep_lambda_body_block_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_lambda_body_block_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_lambda_body_block_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@fe156f4, {id=org.eclipse.jdt.core.formatter.keep_lambda_body_block_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_lambda_body_block_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_lambda_body_block_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@fe156f4)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@79b4cff, {id=org.eclipse.jdt.core.formatter.alignment_for_annotations_on_method, value=49})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_method' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_method' to type 'String'
[DEBUG] Convert string '49' to class 'java.lang.String'
[DEBUG] Converting 'String' value '49' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@79b4cff, {id=org.eclipse.jdt.core.formatter.alignment_for_annotations_on_method, value=49})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_method' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_annotations_on_method' to type 'String'
[DEBUG] Convert string '49' to class 'java.lang.String'
[DEBUG] Converting 'String' value '49' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@79b4cff)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@58ac0823, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@58ac0823, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@58ac0823)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2d705998, {id=org.eclipse.jdt.core.formatter.keep_record_constructor_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_record_constructor_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_record_constructor_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2d705998, {id=org.eclipse.jdt.core.formatter.keep_record_constructor_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_record_constructor_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_record_constructor_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2d705998)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@28a3fc34, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_record_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_record_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_record_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@28a3fc34, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_record_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_record_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_record_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@28a3fc34)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7582a16b, {id=org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7582a16b, {id=org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7582a16b)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4dd752e8, {id=org.eclipse.jdt.core.formatter.alignment_for_assertion_message, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_assertion_message' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_assertion_message' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4dd752e8, {id=org.eclipse.jdt.core.formatter.alignment_for_assertion_message, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_assertion_message' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_assertion_message' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4dd752e8)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@62c46e53, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@62c46e53, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@62c46e53)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@55317c63, {id=org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@55317c63, {id=org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@55317c63)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@35d81657, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@35d81657, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@35d81657)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@42ef5216, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@42ef5216, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@42ef5216)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3180aee, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3180aee, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3180aee)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5d94ac8a, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5d94ac8a, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5d94ac8a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@288b73c1, {id=org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@288b73c1, {id=org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@288b73c1)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@104cfb24, {id=org.eclipse.jdt.core.formatter.blank_lines_before_member_type, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_before_member_type' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_before_member_type' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@104cfb24, {id=org.eclipse.jdt.core.formatter.blank_lines_before_member_type, value=1})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_before_member_type' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_before_member_type' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@104cfb24)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5340ccb9, {id=org.eclipse.jdt.core.formatter.insert_space_before_logical_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_logical_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_logical_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5340ccb9, {id=org.eclipse.jdt.core.formatter.insert_space_before_logical_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_logical_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_logical_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5340ccb9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2bc8caa7, {id=org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2bc8caa7, {id=org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2bc8caa7)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@582ea164, {id=org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_record_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_record_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_record_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@582ea164, {id=org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_record_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_record_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_record_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@582ea164)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2fccf49e, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2fccf49e, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2fccf49e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7abcc0da, {id=org.eclipse.jdt.core.formatter.insert_space_before_semicolon, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_semicolon' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_semicolon' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7abcc0da, {id=org.eclipse.jdt.core.formatter.insert_space_before_semicolon, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_semicolon' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_semicolon' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7abcc0da)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@174cb0d8, {id=org.eclipse.jdt.core.formatter.wrap_before_relational_operator, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_relational_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_relational_operator' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@174cb0d8, {id=org.eclipse.jdt.core.formatter.wrap_before_relational_operator, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_relational_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_relational_operator' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@174cb0d8)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3ac406d4, {id=org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3ac406d4, {id=org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3ac406d4)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@72646d16, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@72646d16, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@72646d16)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6ec2d990, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6ec2d990, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6ec2d990)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1cfa7ee0, {id=org.eclipse.jdt.core.formatter.comment.format_block_comments, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.format_block_comments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.format_block_comments' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1cfa7ee0, {id=org.eclipse.jdt.core.formatter.comment.format_block_comments, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.format_block_comments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.format_block_comments' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1cfa7ee0)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@612290d, {id=org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@612290d, {id=org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@612290d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@57cff804, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@57cff804, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@57cff804)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2f39b534, {id=org.eclipse.jdt.core.formatter.blank_lines_after_last_class_body_declaration, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_after_last_class_body_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_after_last_class_body_declaration' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2f39b534, {id=org.eclipse.jdt.core.formatter.blank_lines_after_last_class_body_declaration, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_after_last_class_body_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_after_last_class_body_declaration' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2f39b534)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@60fbc34d, {id=org.eclipse.jdt.core.formatter.indent_statements_compare_to_body, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_statements_compare_to_body' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_statements_compare_to_body' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@60fbc34d, {id=org.eclipse.jdt.core.formatter.indent_statements_compare_to_body, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_statements_compare_to_body' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_statements_compare_to_body' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@60fbc34d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7736c41e, {id=org.eclipse.jdt.core.formatter.keep_simple_while_body_on_same_line, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_simple_while_body_on_same_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_simple_while_body_on_same_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7736c41e, {id=org.eclipse.jdt.core.formatter.keep_simple_while_body_on_same_line, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_simple_while_body_on_same_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_simple_while_body_on_same_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7736c41e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5f911d24, {id=org.eclipse.jdt.core.formatter.wrap_before_logical_operator, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_logical_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_logical_operator' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5f911d24, {id=org.eclipse.jdt.core.formatter.wrap_before_logical_operator, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_logical_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_logical_operator' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5f911d24)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3de383f7, {id=org.eclipse.jdt.core.formatter.blank_lines_between_statement_group_in_switch, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_between_statement_group_in_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_between_statement_group_in_switch' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3de383f7, {id=org.eclipse.jdt.core.formatter.blank_lines_between_statement_group_in_switch, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_between_statement_group_in_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_between_statement_group_in_switch' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3de383f7)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@33ccead, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@33ccead, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@33ccead)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@42ebece0, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@42ebece0, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@42ebece0)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@15c4b1a4, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@15c4b1a4, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@15c4b1a4)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@341964d0, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_lambda_declaration, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_lambda_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_lambda_declaration' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@341964d0, {id=org.eclipse.jdt.core.formatter.parentheses_positions_in_lambda_declaration, value=common_lines})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.parentheses_positions_in_lambda_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.parentheses_positions_in_lambda_declaration' to type 'String'
[DEBUG] Convert string 'common_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'common_lines' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@341964d0)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@51b59d58, {id=org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@51b59d58, {id=org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@51b59d58)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4ca4f762, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_permitted_types, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_permitted_types' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_permitted_types' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4ca4f762, {id=org.eclipse.jdt.core.formatter.insert_space_after_comma_in_permitted_types, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_permitted_types' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_comma_in_permitted_types' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4ca4f762)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7c5d36c3, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7c5d36c3, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7c5d36c3)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@31de27c, {id=org.eclipse.jdt.core.formatter.keep_enum_declaration_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_enum_declaration_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_enum_declaration_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@31de27c, {id=org.eclipse.jdt.core.formatter.keep_enum_declaration_on_one_line, value=one_line_never})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.keep_enum_declaration_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.keep_enum_declaration_on_one_line' to type 'String'
[DEBUG] Convert string 'one_line_never' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'one_line_never' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@31de27c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7ebfe01a, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7ebfe01a, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7ebfe01a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@154b0748, {id=org.eclipse.jdt.core.formatter.brace_position_for_enum_constant, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_enum_constant' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@154b0748, {id=org.eclipse.jdt.core.formatter.brace_position_for_enum_constant, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_enum_constant' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@154b0748)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@35c00c, {id=org.eclipse.jdt.core.formatter.brace_position_for_type_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_type_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@35c00c, {id=org.eclipse.jdt.core.formatter.brace_position_for_type_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.brace_position_for_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.brace_position_for_type_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@35c00c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6cd7dc74, {id=org.eclipse.jdt.core.formatter.insert_space_before_multiplicative_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_multiplicative_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_multiplicative_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6cd7dc74, {id=org.eclipse.jdt.core.formatter.insert_space_before_multiplicative_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_multiplicative_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_multiplicative_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6cd7dc74)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6d695ec4, {id=org.eclipse.jdt.core.formatter.blank_lines_before_package, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_before_package' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_before_package' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6d695ec4, {id=org.eclipse.jdt.core.formatter.blank_lines_before_package, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.blank_lines_before_package' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.blank_lines_before_package' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6d695ec4)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@20556566, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@20556566, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@20556566)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@e4ef4c0, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@e4ef4c0, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@e4ef4c0)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5ca8bd01, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5ca8bd01, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5ca8bd01)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7b10472e, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7b10472e, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7b10472e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@70e5737f, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@70e5737f, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@70e5737f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@9746157, {id=org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@9746157, {id=org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@9746157)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@10ad95cd, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@10ad95cd, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@10ad95cd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@69fd99c1, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@69fd99c1, {id=org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@69fd99c1)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@32d8710a, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@32d8710a, {id=org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@32d8710a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@180cc0df, {id=org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@180cc0df, {id=org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@180cc0df)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@64f33dee, {id=org.eclipse.jdt.core.formatter.comment.indent_parameter_description, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.indent_parameter_description' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.indent_parameter_description' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@64f33dee, {id=org.eclipse.jdt.core.formatter.comment.indent_parameter_description, value=false})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.comment.indent_parameter_description' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.comment.indent_parameter_description' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@64f33dee)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@61c58320, {id=org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_code_block, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_code_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_code_block' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@61c58320, {id=org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_code_block, value=0})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_code_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_code_block' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@61c58320)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@10e4ee33, {id=org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@10e4ee33, {id=org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@10e4ee33)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6e90cec8, {id=org.eclipse.jdt.core.formatter.tabulation.char, value=space})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.tabulation.char' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.tabulation.char' to type 'String'
[DEBUG] Convert string 'space' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'space' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6e90cec8, {id=org.eclipse.jdt.core.formatter.tabulation.char, value=space})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.tabulation.char' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.tabulation.char' to type 'String'
[DEBUG] Convert string 'space' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'space' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6e90cec8)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@13f182b9, {id=org.eclipse.jdt.core.formatter.wrap_before_string_concatenation, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_string_concatenation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_string_concatenation' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@13f182b9, {id=org.eclipse.jdt.core.formatter.wrap_before_string_concatenation, value=true})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.wrap_before_string_concatenation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.wrap_before_string_concatenation' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@13f182b9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5ee0cf64, {id=org.eclipse.jdt.core.formatter.lineSplit, value=120})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.lineSplit' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.lineSplit' to type 'String'
[DEBUG] Convert string '120' to class 'java.lang.String'
[DEBUG] Converting 'String' value '120' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5ee0cf64, {id=org.eclipse.jdt.core.formatter.lineSplit, value=120})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.lineSplit' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.lineSplit' to type 'String'
[DEBUG] Convert string '120' to class 'java.lang.String'
[DEBUG] Converting 'String' value '120' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5ee0cf64)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@69c227fd, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@69c227fd, {id=org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@69c227fd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
        )
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@14c5283, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@14c5283, {id=org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch, value=insert})
[DEBUG] Convert string 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@14c5283)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
    )
[DEBUG] endElement(,,profile)
[DEBUG]   match='profiles/profile'
[DEBUG]   bodyText='
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    '
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Profile, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addProfile, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={kind=kind}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
    '
[DEBUG]   Fire end() for SetPropertiesRule[aliases={kind=kind}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addProfile, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile} Call net.revelc.code.formatter.model.Profiles.addProfile(net.revelc.code.formatter.model.Profile@602c167e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Profile, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile} Pop 'net.revelc.code.formatter.model.Profile'
[DEBUG] characters(
)
[DEBUG] endElement(,,profiles)
[DEBUG]   match='profiles'
[DEBUG]   bodyText='
    
'
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Profiles, attributeName=null]
[DEBUG]   Popping body text ''
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Profiles, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles} Pop 'net.revelc.code.formatter.model.Profiles'
[DEBUG] endDocument()
[DEBUG] Using search path at: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api
[DEBUG] The resource 'formatter-maven-plugin/eclipse/javascript.xml' was not found with resourceLoader 'org.codehaus.plexus.resource.loader.FileResourceLoader'
[DEBUG] The resource 'formatter-maven-plugin/eclipse/javascript.xml' was not found with resourceLoader 'org.codehaus.plexus.resource.loader.JarResourceLoader'
[DEBUG] The resource 'formatter-maven-plugin/eclipse/javascript.xml' was found as 'jar:file:/home/oludwig/.m2/repository/net/revelc/code/formatter/formatter-maven-plugin/2.23.0/formatter-maven-plugin-2.23.0.jar!/formatter-maven-plugin/eclipse/javascript.xml'
[DEBUG] addRuleSet() with no namespace URI
[DEBUG] setDocumentLocator(com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$LocatorProxy@61ce238e)
[DEBUG] startDocument()
[DEBUG] startElement(,,profiles)
[DEBUG]   Pushing body text ''
[DEBUG]   New match='profiles'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Profiles, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles} New 'net.revelc.code.formatter.model.Profiles' using default empty constructor
[DEBUG] characters(
)
[DEBUG] startElement(,,profile)
[DEBUG]   Pushing body text '
'
[DEBUG]   New match='profiles/profile'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Profile, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile} New 'net.revelc.code.formatter.model.Profile' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addProfile, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={kind=kind}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile} Setting property 'kind' to 'kind'
[DEBUG] [SetPropertiesRule]{profiles/profile} Setting property 'name' to 'name'
[DEBUG] [SetPropertiesRule]{profiles/profile} Setting property 'version' to 'version'
[DEBUG] [SetPropertiesRule]{profiles/profile} Set 'net.revelc.code.formatter.model.Profile' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Profile@49ea13b6, {kind=CodeFormatterProfile, name=formatter, version=11})
[DEBUG] Convert string 'CodeFormatterProfile' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'CodeFormatterProfile' to type 'String'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7c02b3cb, {id=org.eclipse.wst.jsdt.core.compiler.codegen.targetPlatform, value=1.5})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.compiler.codegen.targetPlatform' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.compiler.codegen.targetPlatform' to type 'String'
[DEBUG] Convert string '1.5' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1.5' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7c02b3cb, {id=org.eclipse.wst.jsdt.core.compiler.codegen.targetPlatform, value=1.5})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.compiler.codegen.targetPlatform' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.compiler.codegen.targetPlatform' to type 'String'
[DEBUG] Convert string '1.5' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1.5' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7c02b3cb)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3d8fd373, {id=org.eclipse.wst.jsdt.core.compiler.compliance, value=1.5})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.compiler.compliance' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.compiler.compliance' to type 'String'
[DEBUG] Convert string '1.5' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1.5' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3d8fd373, {id=org.eclipse.wst.jsdt.core.compiler.compliance, value=1.5})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.compiler.compliance' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.compiler.compliance' to type 'String'
[DEBUG] Convert string '1.5' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1.5' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3d8fd373)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2dcd451f, {id=org.eclipse.wst.jsdt.core.compiler.problem.assertIdentifier, value=error})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.compiler.problem.assertIdentifier' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.compiler.problem.assertIdentifier' to type 'String'
[DEBUG] Convert string 'error' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'error' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2dcd451f, {id=org.eclipse.wst.jsdt.core.compiler.problem.assertIdentifier, value=error})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.compiler.problem.assertIdentifier' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.compiler.problem.assertIdentifier' to type 'String'
[DEBUG] Convert string 'error' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'error' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2dcd451f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@342394b3, {id=org.eclipse.wst.jsdt.core.compiler.source, value=1.5})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.compiler.source' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.compiler.source' to type 'String'
[DEBUG] Convert string '1.5' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1.5' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@342394b3, {id=org.eclipse.wst.jsdt.core.compiler.source, value=1.5})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.compiler.source' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.compiler.source' to type 'String'
[DEBUG] Convert string '1.5' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1.5' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@342394b3)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5dd6f517, {id=org.eclipse.wst.jsdt.core.formatter.align_type_members_on_columns, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.align_type_members_on_columns' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.align_type_members_on_columns' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5dd6f517, {id=org.eclipse.wst.jsdt.core.formatter.align_type_members_on_columns, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.align_type_members_on_columns' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.align_type_members_on_columns' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5dd6f517)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1e01b195, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_allocation_expression, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_allocation_expression' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1e01b195, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_allocation_expression, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_allocation_expression' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1e01b195)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@59a3eaf7, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_enum_constant, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_enum_constant' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@59a3eaf7, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_enum_constant, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_enum_constant' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@59a3eaf7)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '







'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@718d6b7c, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@718d6b7c, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '







'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@718d6b7c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '








'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1b994617, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_method_invocation, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_method_invocation' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1b994617, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_method_invocation, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_method_invocation' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '








'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1b994617)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '









'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@807c1e8, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@807c1e8, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '









'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@807c1e8)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '










'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4eb5764d, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_assignment, value=0})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_assignment' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_assignment' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4eb5764d, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_assignment, value=0})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_assignment' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_assignment' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '










'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4eb5764d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '











'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@54f9326c, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_binary_expression, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_binary_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_binary_expression' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@54f9326c, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_binary_expression, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_binary_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_binary_expression' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '











'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@54f9326c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '












'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5016f1a, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_compact_if, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_compact_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_compact_if' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5016f1a, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_compact_if, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_compact_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_compact_if' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '












'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5016f1a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '













'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@33bfe6d3, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_conditional_expression, value=120})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_conditional_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_conditional_expression' to type 'String'
[DEBUG] Convert string '120' to class 'java.lang.String'
[DEBUG] Converting 'String' value '120' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@33bfe6d3, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_conditional_expression, value=120})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_conditional_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_conditional_expression' to type 'String'
[DEBUG] Convert string '120' to class 'java.lang.String'
[DEBUG] Converting 'String' value '120' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '













'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@33bfe6d3)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '














'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@56dde9f7, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_enum_constants, value=0})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_enum_constants' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_enum_constants' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@56dde9f7, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_enum_constants, value=0})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_enum_constants' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_enum_constants' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '














'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@56dde9f7)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '















'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4b2acb12, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_expressions_in_array_initializer, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_expressions_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_expressions_in_array_initializer' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4b2acb12, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_expressions_in_array_initializer, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_expressions_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_expressions_in_array_initializer' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '















'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4b2acb12)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
















'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@455d04d2, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_multiple_fields, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_multiple_fields' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_multiple_fields' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@455d04d2, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_multiple_fields, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_multiple_fields' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_multiple_fields' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
















'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@455d04d2)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

















'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@998fbd4, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_parameters_in_constructor_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_parameters_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_parameters_in_constructor_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@998fbd4, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_parameters_in_constructor_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_parameters_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_parameters_in_constructor_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

















'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@998fbd4)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


















'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@30333941, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_parameters_in_method_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_parameters_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_parameters_in_method_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@30333941, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_parameters_in_method_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_parameters_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_parameters_in_method_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


















'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@30333941)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



















'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2d5c160e, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_selector_in_method_invocation, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_selector_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_selector_in_method_invocation' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2d5c160e, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_selector_in_method_invocation, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_selector_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_selector_in_method_invocation' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



















'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2d5c160e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




















'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@8afce3, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_superclass_in_type_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_superclass_in_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_superclass_in_type_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@8afce3, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_superclass_in_type_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_superclass_in_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_superclass_in_type_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




















'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@8afce3)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





















'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4e02f17d, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4e02f17d, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





















'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4e02f17d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






















'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@675230cd, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_superinterfaces_in_type_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_superinterfaces_in_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_superinterfaces_in_type_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@675230cd, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_superinterfaces_in_type_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_superinterfaces_in_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_superinterfaces_in_type_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






















'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@675230cd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '























'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2a73a64f, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2a73a64f, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '























'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2a73a64f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
























'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7dc92a06, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_throws_clause_in_method_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_throws_clause_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_throws_clause_in_method_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7dc92a06, {id=org.eclipse.wst.jsdt.core.formatter.alignment_for_throws_clause_in_method_declaration, value=16})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.alignment_for_throws_clause_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.alignment_for_throws_clause_in_method_declaration' to type 'String'
[DEBUG] Convert string '16' to class 'java.lang.String'
[DEBUG] Converting 'String' value '16' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
























'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7dc92a06)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

























'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2419a5db, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_after_imports, value=1})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_after_imports' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_after_imports' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2419a5db, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_after_imports, value=1})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_after_imports' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_after_imports' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

























'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2419a5db)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


























'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@52bb3dcd, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_after_package, value=1})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_after_package' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_after_package' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@52bb3dcd, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_after_package, value=1})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_after_package' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_after_package' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


























'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@52bb3dcd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



























'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@654db80b, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_before_field, value=0})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_field' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_field' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@654db80b, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_before_field, value=0})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_field' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_field' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



























'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@654db80b)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




























'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@516037be, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_before_first_class_body_declaration, value=0})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_first_class_body_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_first_class_body_declaration' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@516037be, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_before_first_class_body_declaration, value=0})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_first_class_body_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_first_class_body_declaration' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




























'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@516037be)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





























'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@383e6734, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_before_imports, value=1})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_imports' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_imports' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@383e6734, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_before_imports, value=1})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_imports' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_imports' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





























'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@383e6734)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






























'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@336070ab, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_before_member_type, value=1})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_member_type' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_member_type' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@336070ab, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_before_member_type, value=1})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_member_type' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_member_type' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






























'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@336070ab)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3be50b2c, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_before_method, value=1})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_method' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_method' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3be50b2c, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_before_method, value=1})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_method' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_method' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3be50b2c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6be80629, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_before_new_chunk, value=1})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_new_chunk' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_new_chunk' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6be80629, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_before_new_chunk, value=1})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_new_chunk' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_new_chunk' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6be80629)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@20a4cba7, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_before_package, value=0})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_package' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_package' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@20a4cba7, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_before_package, value=0})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_package' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_before_package' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@20a4cba7)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@10f10230, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_between_import_groups, value=1})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_between_import_groups' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_between_import_groups' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@10f10230, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_between_import_groups, value=1})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_between_import_groups' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_between_import_groups' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@10f10230)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3dec769, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_between_type_declarations, value=0})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_between_type_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_between_type_declarations' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3dec769, {id=org.eclipse.wst.jsdt.core.formatter.blank_lines_between_type_declarations, value=0})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.blank_lines_between_type_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.blank_lines_between_type_declarations' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3dec769)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@282c5075, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_annotation_type_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_annotation_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_annotation_type_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@282c5075, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_annotation_type_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_annotation_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_annotation_type_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@282c5075)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2ed35f24, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_anonymous_type_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_anonymous_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_anonymous_type_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2ed35f24, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_anonymous_type_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_anonymous_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_anonymous_type_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2ed35f24)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@362b384c, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_array_initializer, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_array_initializer' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@362b384c, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_array_initializer, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_array_initializer' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@362b384c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '







































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@433b546f, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_block, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_block' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@433b546f, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_block, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_block' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '







































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@433b546f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '








































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@9de1b85, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_block_in_case, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_block_in_case' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_block_in_case' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@9de1b85, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_block_in_case, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_block_in_case' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_block_in_case' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '








































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@9de1b85)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '









































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3d405fe5, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_constructor_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_constructor_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3d405fe5, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_constructor_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_constructor_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '









































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3d405fe5)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '










































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@52c6e959, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_enum_constant, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_enum_constant' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@52c6e959, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_enum_constant, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_enum_constant' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '










































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@52c6e959)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '











































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4b475742, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_enum_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_enum_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_enum_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4b475742, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_enum_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_enum_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_enum_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '











































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4b475742)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '












































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@323c6f9c, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_method_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_method_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@323c6f9c, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_method_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_method_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '












































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@323c6f9c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '













































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@dbca149, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_objlit_initializer, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_objlit_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_objlit_initializer' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@dbca149, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_objlit_initializer, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_objlit_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_objlit_initializer' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '













































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@dbca149)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '














































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@68550d86, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_switch, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_switch' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@68550d86, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_switch, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_switch' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '














































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@68550d86)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '















































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@19d9ba89, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_type_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_type_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@19d9ba89, {id=org.eclipse.wst.jsdt.core.formatter.brace_position_for_type_declaration, value=end_of_line})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.brace_position_for_type_declaration' to type 'String'
[DEBUG] Convert string 'end_of_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'end_of_line' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '















































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@19d9ba89)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
















































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@484876a1, {id=org.eclipse.wst.jsdt.core.formatter.comment.clear_blank_lines_in_block_comment, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.clear_blank_lines_in_block_comment' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.clear_blank_lines_in_block_comment' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@484876a1, {id=org.eclipse.wst.jsdt.core.formatter.comment.clear_blank_lines_in_block_comment, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.clear_blank_lines_in_block_comment' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.clear_blank_lines_in_block_comment' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
















































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@484876a1)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

















































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@20163008, {id=org.eclipse.wst.jsdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@20163008, {id=org.eclipse.wst.jsdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

















































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@20163008)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


















































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@60ef30b1, {id=org.eclipse.wst.jsdt.core.formatter.comment.format_block_comments, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.format_block_comments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.format_block_comments' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@60ef30b1, {id=org.eclipse.wst.jsdt.core.formatter.comment.format_block_comments, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.format_block_comments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.format_block_comments' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


















































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@60ef30b1)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



















































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3436d3d7, {id=org.eclipse.wst.jsdt.core.formatter.comment.format_header, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.format_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.format_header' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3436d3d7, {id=org.eclipse.wst.jsdt.core.formatter.comment.format_header, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.format_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.format_header' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



















































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3436d3d7)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




















































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3f40568e, {id=org.eclipse.wst.jsdt.core.formatter.comment.format_html, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.format_html' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.format_html' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3f40568e, {id=org.eclipse.wst.jsdt.core.formatter.comment.format_html, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.format_html' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.format_html' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




















































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3f40568e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





















































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2e47a71e, {id=org.eclipse.wst.jsdt.core.formatter.comment.format_javadoc_comments, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.format_javadoc_comments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.format_javadoc_comments' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2e47a71e, {id=org.eclipse.wst.jsdt.core.formatter.comment.format_javadoc_comments, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.format_javadoc_comments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.format_javadoc_comments' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





















































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2e47a71e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






















































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@37b470df, {id=org.eclipse.wst.jsdt.core.formatter.comment.format_line_comments, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.format_line_comments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.format_line_comments' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@37b470df, {id=org.eclipse.wst.jsdt.core.formatter.comment.format_line_comments, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.format_line_comments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.format_line_comments' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






















































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@37b470df)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '























































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@359ea595, {id=org.eclipse.wst.jsdt.core.formatter.comment.format_source_code, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.format_source_code' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.format_source_code' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@359ea595, {id=org.eclipse.wst.jsdt.core.formatter.comment.format_source_code, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.format_source_code' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.format_source_code' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '























































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@359ea595)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
























































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@8d7718e, {id=org.eclipse.wst.jsdt.core.formatter.comment.indent_parameter_description, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.indent_parameter_description' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.indent_parameter_description' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@8d7718e, {id=org.eclipse.wst.jsdt.core.formatter.comment.indent_parameter_description, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.indent_parameter_description' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.indent_parameter_description' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
























































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@8d7718e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

























































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1bbb48dd, {id=org.eclipse.wst.jsdt.core.formatter.comment.indent_root_tags, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.indent_root_tags' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.indent_root_tags' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1bbb48dd, {id=org.eclipse.wst.jsdt.core.formatter.comment.indent_root_tags, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.indent_root_tags' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.indent_root_tags' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

























































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1bbb48dd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


























































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@f9de1fd, {id=org.eclipse.wst.jsdt.core.formatter.comment.insert_new_line_before_root_tags, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.insert_new_line_before_root_tags' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.insert_new_line_before_root_tags' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@f9de1fd, {id=org.eclipse.wst.jsdt.core.formatter.comment.insert_new_line_before_root_tags, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.insert_new_line_before_root_tags' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.insert_new_line_before_root_tags' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


























































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@f9de1fd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



























































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4fef4f96, {id=org.eclipse.wst.jsdt.core.formatter.comment.insert_new_line_for_parameter, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.insert_new_line_for_parameter' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.insert_new_line_for_parameter' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4fef4f96, {id=org.eclipse.wst.jsdt.core.formatter.comment.insert_new_line_for_parameter, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.insert_new_line_for_parameter' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.insert_new_line_for_parameter' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



























































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4fef4f96)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




























































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7c871ce4, {id=org.eclipse.wst.jsdt.core.formatter.comment.line_length, value=120})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.line_length' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.line_length' to type 'String'
[DEBUG] Convert string '120' to class 'java.lang.String'
[DEBUG] Converting 'String' value '120' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7c871ce4, {id=org.eclipse.wst.jsdt.core.formatter.comment.line_length, value=120})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.comment.line_length' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.comment.line_length' to type 'String'
[DEBUG] Convert string '120' to class 'java.lang.String'
[DEBUG] Converting 'String' value '120' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




























































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7c871ce4)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





























































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3d3b4e09, {id=org.eclipse.wst.jsdt.core.formatter.compact_else_if, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.compact_else_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.compact_else_if' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3d3b4e09, {id=org.eclipse.wst.jsdt.core.formatter.compact_else_if, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.compact_else_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.compact_else_if' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





























































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3d3b4e09)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






























































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5dc9d25a, {id=org.eclipse.wst.jsdt.core.formatter.continuation_indentation, value=2})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.continuation_indentation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.continuation_indentation' to type 'String'
[DEBUG] Convert string '2' to class 'java.lang.String'
[DEBUG] Converting 'String' value '2' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5dc9d25a, {id=org.eclipse.wst.jsdt.core.formatter.continuation_indentation, value=2})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.continuation_indentation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.continuation_indentation' to type 'String'
[DEBUG] Convert string '2' to class 'java.lang.String'
[DEBUG] Converting 'String' value '2' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






























































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5dc9d25a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@686fb58a, {id=org.eclipse.wst.jsdt.core.formatter.continuation_indentation_for_array_initializer, value=2})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.continuation_indentation_for_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.continuation_indentation_for_array_initializer' to type 'String'
[DEBUG] Convert string '2' to class 'java.lang.String'
[DEBUG] Converting 'String' value '2' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@686fb58a, {id=org.eclipse.wst.jsdt.core.formatter.continuation_indentation_for_array_initializer, value=2})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.continuation_indentation_for_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.continuation_indentation_for_array_initializer' to type 'String'
[DEBUG] Convert string '2' to class 'java.lang.String'
[DEBUG] Converting 'String' value '2' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@686fb58a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2c4be45f, {id=org.eclipse.wst.jsdt.core.formatter.continuation_indentation_for_objlit_initializer, value=1})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.continuation_indentation_for_objlit_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.continuation_indentation_for_objlit_initializer' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2c4be45f, {id=org.eclipse.wst.jsdt.core.formatter.continuation_indentation_for_objlit_initializer, value=1})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.continuation_indentation_for_objlit_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.continuation_indentation_for_objlit_initializer' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2c4be45f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4be7acd9, {id=org.eclipse.wst.jsdt.core.formatter.format_guardian_clause_on_one_line, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.format_guardian_clause_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.format_guardian_clause_on_one_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4be7acd9, {id=org.eclipse.wst.jsdt.core.formatter.format_guardian_clause_on_one_line, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.format_guardian_clause_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.format_guardian_clause_on_one_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4be7acd9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@58afecfd, {id=org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@58afecfd, {id=org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@58afecfd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4d79d187, {id=org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4d79d187, {id=org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4d79d187)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3e63bd6b, {id=org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3e63bd6b, {id=org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3e63bd6b)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@48144f1a, {id=org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_type_header, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_type_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_type_header' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@48144f1a, {id=org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_type_header, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_type_header' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_body_declarations_compare_to_type_header' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@48144f1a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6f7b8ae1, {id=org.eclipse.wst.jsdt.core.formatter.indent_breaks_compare_to_cases, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_breaks_compare_to_cases' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_breaks_compare_to_cases' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6f7b8ae1, {id=org.eclipse.wst.jsdt.core.formatter.indent_breaks_compare_to_cases, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_breaks_compare_to_cases' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_breaks_compare_to_cases' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6f7b8ae1)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '







































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6c8d8b60, {id=org.eclipse.wst.jsdt.core.formatter.indent_empty_lines, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_empty_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_empty_lines' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6c8d8b60, {id=org.eclipse.wst.jsdt.core.formatter.indent_empty_lines, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_empty_lines' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_empty_lines' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '







































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6c8d8b60)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '








































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4fa6fb7f, {id=org.eclipse.wst.jsdt.core.formatter.indent_statements_compare_to_block, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_statements_compare_to_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_statements_compare_to_block' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4fa6fb7f, {id=org.eclipse.wst.jsdt.core.formatter.indent_statements_compare_to_block, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_statements_compare_to_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_statements_compare_to_block' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '








































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4fa6fb7f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '









































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2520010e, {id=org.eclipse.wst.jsdt.core.formatter.indent_statements_compare_to_body, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_statements_compare_to_body' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_statements_compare_to_body' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2520010e, {id=org.eclipse.wst.jsdt.core.formatter.indent_statements_compare_to_body, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_statements_compare_to_body' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_statements_compare_to_body' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '









































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2520010e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '










































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@163fbbc9, {id=org.eclipse.wst.jsdt.core.formatter.indent_switchstatements_compare_to_cases, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_switchstatements_compare_to_cases' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_switchstatements_compare_to_cases' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@163fbbc9, {id=org.eclipse.wst.jsdt.core.formatter.indent_switchstatements_compare_to_cases, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_switchstatements_compare_to_cases' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_switchstatements_compare_to_cases' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '










































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@163fbbc9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '











































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1669f4e5, {id=org.eclipse.wst.jsdt.core.formatter.indent_switchstatements_compare_to_switch, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_switchstatements_compare_to_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_switchstatements_compare_to_switch' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1669f4e5, {id=org.eclipse.wst.jsdt.core.formatter.indent_switchstatements_compare_to_switch, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indent_switchstatements_compare_to_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indent_switchstatements_compare_to_switch' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '











































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1669f4e5)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '












































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6e6c8854, {id=org.eclipse.wst.jsdt.core.formatter.indentation.size, value=4})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indentation.size' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indentation.size' to type 'String'
[DEBUG] Convert string '4' to class 'java.lang.String'
[DEBUG] Converting 'String' value '4' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6e6c8854, {id=org.eclipse.wst.jsdt.core.formatter.indentation.size, value=4})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.indentation.size' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.indentation.size' to type 'String'
[DEBUG] Convert string '4' to class 'java.lang.String'
[DEBUG] Converting 'String' value '4' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '












































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6e6c8854)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '













































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4be1dce6, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_annotation, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_annotation' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4be1dce6, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_annotation, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_annotation' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '













































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4be1dce6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '














































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@206bd7a0, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_comma_in_objlit_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_comma_in_objlit_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_comma_in_objlit_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@206bd7a0, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_comma_in_objlit_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_comma_in_objlit_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_comma_in_objlit_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '














































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@206bd7a0)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '















































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@79fcd194, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@79fcd194, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '















































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@79fcd194)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
















































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@73d8c8d7, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_opening_brace_in_objlit_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_opening_brace_in_objlit_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_opening_brace_in_objlit_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@73d8c8d7, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_opening_brace_in_objlit_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_opening_brace_in_objlit_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_after_opening_brace_in_objlit_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
















































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@73d8c8d7)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

















































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@361b3ca6, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_at_end_of_file_if_missing, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_at_end_of_file_if_missing' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_at_end_of_file_if_missing' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@361b3ca6, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_at_end_of_file_if_missing, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_at_end_of_file_if_missing' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_at_end_of_file_if_missing' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

















































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@361b3ca6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


















































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@48333b12, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_catch_in_try_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_catch_in_try_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_catch_in_try_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@48333b12, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_catch_in_try_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_catch_in_try_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_catch_in_try_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


















































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@48333b12)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



















































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@575c23f1, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@575c23f1, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



















































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@575c23f1)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




















































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@62f7d7bd, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_closing_brace_in_objlit_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_closing_brace_in_objlit_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_closing_brace_in_objlit_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@62f7d7bd, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_closing_brace_in_objlit_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_closing_brace_in_objlit_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_closing_brace_in_objlit_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




















































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@62f7d7bd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





















































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@de63949, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_else_in_if_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_else_in_if_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_else_in_if_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@de63949, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_else_in_if_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_else_in_if_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_else_in_if_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





















































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@de63949)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






















































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5c5c784c, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_finally_in_try_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_finally_in_try_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_finally_in_try_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5c5c784c, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_finally_in_try_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_finally_in_try_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_finally_in_try_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






















































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5c5c784c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '























































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6a299b9d, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_while_in_do_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_while_in_do_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_while_in_do_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6a299b9d, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_while_in_do_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_while_in_do_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_before_while_in_do_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '























































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6a299b9d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
























































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@363fe35a, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_annotation_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_annotation_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_annotation_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@363fe35a, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_annotation_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_annotation_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_annotation_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
























































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@363fe35a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

























































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@a2fb8a5, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@a2fb8a5, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

























































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@a2fb8a5)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


























































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@350e3fb4, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_block, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_block' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@350e3fb4, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_block, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_block' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


























































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@350e3fb4)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



























































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@13ddaffb, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_enum_constant, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_enum_constant' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@13ddaffb, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_enum_constant, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_enum_constant' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



























































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@13ddaffb)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




























































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5a31abe9, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_enum_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_enum_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_enum_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5a31abe9, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_enum_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_enum_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_enum_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




























































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5a31abe9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





























































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2dacda9a, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_method_body, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_method_body' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_method_body' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2dacda9a, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_method_body, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_method_body' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_method_body' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





























































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2dacda9a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






























































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@699bb304, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@699bb304, {id=org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_new_line_in_empty_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






























































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@699bb304)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@17477bbb, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_and_in_type_parameter, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_and_in_type_parameter' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_and_in_type_parameter' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@17477bbb, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_and_in_type_parameter, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_and_in_type_parameter' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_and_in_type_parameter' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@17477bbb)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@40fee459, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_assignment_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_assignment_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_assignment_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@40fee459, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_assignment_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_assignment_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_assignment_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@40fee459)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@bcd9ed6, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_at_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_at_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_at_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@bcd9ed6, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_at_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_at_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_at_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@bcd9ed6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3ffa0f38, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_at_in_annotation_type_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_at_in_annotation_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_at_in_annotation_type_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3ffa0f38, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_at_in_annotation_type_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_at_in_annotation_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_at_in_annotation_type_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3ffa0f38)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@13cc31df, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_binary_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_binary_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_binary_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@13cc31df, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_binary_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_binary_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_binary_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@13cc31df)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@24a7d3d3, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@24a7d3d3, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@24a7d3d3)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@43fbc2bf, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@43fbc2bf, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@43fbc2bf)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2c978637, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_brace_in_block, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_brace_in_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_brace_in_block' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2c978637, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_brace_in_block, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_brace_in_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_brace_in_block' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2c978637)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '







































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5e2718b3, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_paren_in_cast, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_paren_in_cast' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_paren_in_cast' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5e2718b3, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_paren_in_cast, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_paren_in_cast' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_closing_paren_in_cast' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '







































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5e2718b3)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '








































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@440461ef, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_assert, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_assert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_assert' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@440461ef, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_assert, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_assert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_assert' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '








































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@440461ef)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '









































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5977bdea, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_case, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_case' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_case' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5977bdea, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_case, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_case' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_case' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '









































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5977bdea)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '










































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@49c13ecd, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_conditional, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_conditional' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_conditional' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@49c13ecd, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_conditional, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_conditional' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_conditional' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '










































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@49c13ecd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '











































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2f4545c6, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_for, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_for' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2f4545c6, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_for, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_for' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '











































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2f4545c6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '












































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@482942d8, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_labeled_statement, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_labeled_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_labeled_statement' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@482942d8, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_labeled_statement, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_labeled_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_labeled_statement' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '












































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@482942d8)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '













































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2cd52eda, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_object_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_object_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_object_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2cd52eda, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_object_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_object_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_colon_in_object_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '













































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2cd52eda)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '














































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6c225adb, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_allocation_expression, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_allocation_expression' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6c225adb, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_allocation_expression, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_allocation_expression' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '














































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6c225adb)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '















































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@69cc49ec, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_annotation, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_annotation' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@69cc49ec, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_annotation, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_annotation' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '















































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@69cc49ec)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
















































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6b71e98f, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_array_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_array_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6b71e98f, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_array_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_array_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
















































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6b71e98f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

















































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6ed7b9c5, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6ed7b9c5, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

















































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6ed7b9c5)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


















































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@105dc246, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@105dc246, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


















































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@105dc246)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



















































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1b556a88, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1b556a88, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



















































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1b556a88)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




















































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7f8cd5fc, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_enum_declarations, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_enum_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_enum_declarations' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7f8cd5fc, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_enum_declarations, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_enum_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_enum_declarations' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




















































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7f8cd5fc)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





















































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2c465259, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2c465259, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





















































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2c465259)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






















































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@52f7fa65, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_for_increments, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_for_increments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_for_increments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@52f7fa65, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_for_increments, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_for_increments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_for_increments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






















































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@52f7fa65)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '























































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@62c6db99, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_for_inits, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_for_inits' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_for_inits' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@62c6db99, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_for_inits, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_for_inits' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_for_inits' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '























































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@62c6db99)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
























































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7bfcc108, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7bfcc108, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
























































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7bfcc108)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

























































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@65b680b4, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_method_declaration_throws, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_method_declaration_throws' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_method_declaration_throws' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@65b680b4, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_method_declaration_throws, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_method_declaration_throws' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_method_declaration_throws' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

























































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@65b680b4)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


























































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@87f6ab5, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@87f6ab5, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


























































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@87f6ab5)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



























































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5c316230, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5c316230, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



























































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5c316230)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




























































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@41581c3f, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@41581c3f, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




























































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@41581c3f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





























































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@10ba9780, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@10ba9780, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





























































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@10ba9780)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






























































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@63636de0, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_superinterfaces, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_superinterfaces' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_superinterfaces' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@63636de0, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_superinterfaces, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_superinterfaces' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_superinterfaces' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






























































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@63636de0)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3494a35e, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_type_arguments, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_type_arguments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3494a35e, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_type_arguments, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_type_arguments' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3494a35e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@352ce817, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_type_parameters, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_type_parameters' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@352ce817, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_type_parameters, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_comma_in_type_parameters' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@352ce817)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@716e6fa5, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_ellipsis, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_ellipsis' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_ellipsis' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@716e6fa5, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_ellipsis, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_ellipsis' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_ellipsis' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@716e6fa5)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@91a1005, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_function_keyword, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_function_keyword' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_function_keyword' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@91a1005, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_function_keyword, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_function_keyword' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_function_keyword' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@91a1005)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1885dc2b, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1885dc2b, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1885dc2b)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4a3bf37c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4a3bf37c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4a3bf37c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@48aaaed9, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@48aaaed9, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@48aaaed9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@116915f1, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_brace_in_array_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_brace_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_brace_in_array_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@116915f1, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_brace_in_array_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_brace_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_brace_in_array_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@116915f1)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '







































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@27bbe773, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@27bbe773, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '







































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@27bbe773)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '








































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@328e50eb, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_bracket_in_array_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_bracket_in_array_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_bracket_in_array_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@328e50eb, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_bracket_in_array_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_bracket_in_array_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_bracket_in_array_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '








































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@328e50eb)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '









































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2fcffc05, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2fcffc05, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '









































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2fcffc05)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '










































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@76d0a290, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_cast, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_cast' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_cast' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@76d0a290, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_cast, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_cast' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_cast' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '










































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@76d0a290)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '











































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@ea84346, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_catch, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_catch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_catch' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@ea84346, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_catch, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_catch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_catch' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '











































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@ea84346)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '












































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4e614370, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4e614370, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '












































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4e614370)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '













































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1e1ea16d, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_enum_constant, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_enum_constant' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1e1ea16d, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_enum_constant, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_enum_constant' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '













































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1e1ea16d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '














































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6da9541c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_for, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_for' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6da9541c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_for, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_for' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '














































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6da9541c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '















































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2157889c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_if, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_if' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2157889c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_if, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_if' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '















































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2157889c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
















































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@65e92505, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_method_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_method_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@65e92505, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_method_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_method_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
















































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@65e92505)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

















































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@e97f51c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_method_invocation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_method_invocation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@e97f51c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_method_invocation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_method_invocation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

















































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@e97f51c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


















































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@29394966, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@29394966, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


















































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@29394966)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



















































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@343727b5, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_switch, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_switch' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@343727b5, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_switch, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_switch' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



















































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@343727b5)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




















































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@18dafd3b, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_synchronized, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_synchronized' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_synchronized' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@18dafd3b, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_synchronized, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_synchronized' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_synchronized' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




















































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@18dafd3b)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





















































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2954c429, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_while, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_while' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_while' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2954c429, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_while, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_while' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_opening_paren_in_while' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





















































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2954c429)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






















































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4a45ca1c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_postfix_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_postfix_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_postfix_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4a45ca1c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_postfix_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_postfix_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_postfix_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






















































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4a45ca1c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '























































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4742466e, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_prefix_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_prefix_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_prefix_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4742466e, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_prefix_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_prefix_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_prefix_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '























































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4742466e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
























































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@83e5898, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_question_in_conditional, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_question_in_conditional' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_question_in_conditional' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@83e5898, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_question_in_conditional, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_question_in_conditional' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_question_in_conditional' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
























































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@83e5898)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

























































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7c4a03a, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_semicolon_in_for, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_semicolon_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_semicolon_in_for' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7c4a03a, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_semicolon_in_for, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_semicolon_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_semicolon_in_for' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

























































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7c4a03a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


























































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@63b58ff4, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_unary_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_unary_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_unary_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@63b58ff4, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_after_unary_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_unary_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_after_unary_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


























































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@63b58ff4)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



























































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3691d4da, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_assignment_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_assignment_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_assignment_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3691d4da, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_assignment_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_assignment_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_assignment_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



























































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3691d4da)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




























































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4c91a008, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_at_in_annotation_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_at_in_annotation_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_at_in_annotation_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4c91a008, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_at_in_annotation_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_at_in_annotation_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_at_in_annotation_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




























































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4c91a008)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





























































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6ef61cd0, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_binary_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_binary_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_binary_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6ef61cd0, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_binary_operator, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_binary_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_binary_operator' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





























































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6ef61cd0)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






























































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2173e4d5, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2173e4d5, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






























































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2173e4d5)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@197cc325, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@197cc325, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@197cc325)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@582ca1e2, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@582ca1e2, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@582ca1e2)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@66226ab, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_brace_in_array_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_brace_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_brace_in_array_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@66226ab, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_brace_in_array_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_brace_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_brace_in_array_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@66226ab)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@38093ffe, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@38093ffe, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@38093ffe)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4713b631, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_bracket_in_array_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_bracket_in_array_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_bracket_in_array_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4713b631, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_bracket_in_array_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_bracket_in_array_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_bracket_in_array_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4713b631)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7a0d2c80, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7a0d2c80, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7a0d2c80)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6d4d0a14, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_cast, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_cast' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_cast' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6d4d0a14, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_cast, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_cast' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_cast' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6d4d0a14)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1cca3e8c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_catch, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_catch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_catch' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1cca3e8c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_catch, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_catch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_catch' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1cca3e8c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '







































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@46b2a11a, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@46b2a11a, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '







































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@46b2a11a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '








































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@55c8fc60, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_enum_constant, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_enum_constant' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@55c8fc60, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_enum_constant, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_enum_constant' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '








































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@55c8fc60)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '









































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@50d05167, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_for, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_for' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@50d05167, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_for, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_for' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '









































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@50d05167)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '










































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1da32baf, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_if, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_if' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1da32baf, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_if, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_if' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '










































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1da32baf)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '











































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4e4af370, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_method_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_method_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4e4af370, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_method_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_method_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '











































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4e4af370)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '












































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5cf33d25, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_method_invocation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_method_invocation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5cf33d25, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_method_invocation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_method_invocation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '












































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5cf33d25)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '













































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@efa04b5, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@efa04b5, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '













































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@efa04b5)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '














































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@a80a896, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_switch, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_switch' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@a80a896, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_switch, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_switch' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '














































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@a80a896)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '















































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@13c81bc5, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_synchronized, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_synchronized' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_synchronized' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@13c81bc5, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_synchronized, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_synchronized' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_synchronized' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '















































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@13c81bc5)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
















































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5617168c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_while, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_while' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_while' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5617168c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_while, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_while' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_closing_paren_in_while' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
















































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5617168c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

















































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@8167f57, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_assert, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_assert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_assert' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@8167f57, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_assert, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_assert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_assert' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

















































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@8167f57)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


















































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@75da2db, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_case, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_case' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_case' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@75da2db, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_case, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_case' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_case' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


















































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@75da2db)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



















































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@541897c6, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_conditional, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_conditional' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_conditional' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@541897c6, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_conditional, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_conditional' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_conditional' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



















































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@541897c6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




















































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3ad558bf, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_default, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_default' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_default' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3ad558bf, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_default, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_default' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_default' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




















































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3ad558bf)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





















































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1826475, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_for, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_for' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1826475, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_for, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_for' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





















































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1826475)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






















































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6ba355e4, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_labeled_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_labeled_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_labeled_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6ba355e4, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_labeled_statement, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_labeled_statement' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_labeled_statement' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






















































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6ba355e4)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '























































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7b1559f1, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_object_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_object_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_object_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7b1559f1, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_object_initializer, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_object_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_colon_in_object_initializer' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '























































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7b1559f1)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
























































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6b15e68c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6b15e68c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
























































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6b15e68c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

























































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@79a68657, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@79a68657, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

























































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@79a68657)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


























































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@8dbf0f2, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_array_initializer, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_array_initializer' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@8dbf0f2, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_array_initializer, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_array_initializer' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


























































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@8dbf0f2)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



























































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@59d0fac9, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@59d0fac9, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



























































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@59d0fac9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




























































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1d3546f9, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1d3546f9, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




























































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1d3546f9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





























































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@50ecef36, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@50ecef36, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





























































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@50ecef36)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






























































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@767d9b9, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_enum_declarations, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_enum_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_enum_declarations' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@767d9b9, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_enum_declarations, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_enum_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_enum_declarations' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






























































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@767d9b9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@593f7d2e, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@593f7d2e, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@593f7d2e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6e8aea7e, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_for_increments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_for_increments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_for_increments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6e8aea7e, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_for_increments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_for_increments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_for_increments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6e8aea7e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@59282dc6, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_for_inits, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_for_inits' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_for_inits' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@59282dc6, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_for_inits, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_for_inits' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_for_inits' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@59282dc6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@603b9d4b, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@603b9d4b, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@603b9d4b)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@42cf5a6f, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_method_declaration_throws, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_method_declaration_throws' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_method_declaration_throws' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@42cf5a6f, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_method_declaration_throws, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_method_declaration_throws' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_method_declaration_throws' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@42cf5a6f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7b2f8152, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7b2f8152, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7b2f8152)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6371c5ec, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6371c5ec, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6371c5ec)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5f9ccd0c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5f9ccd0c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5f9ccd0c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '







































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6738e8b2, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6738e8b2, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '







































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6738e8b2)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '








































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@609ad016, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_superinterfaces, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_superinterfaces' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_superinterfaces' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@609ad016, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_superinterfaces, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_superinterfaces' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_superinterfaces' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '








































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@609ad016)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '









































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@da9374c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_type_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_type_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@da9374c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_type_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_type_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '









































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@da9374c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '










































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@34647f58, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_type_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_type_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@34647f58, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_type_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_comma_in_type_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '










































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@34647f58)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '











































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@14b96c1e, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_ellipsis, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_ellipsis' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_ellipsis' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@14b96c1e, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_ellipsis, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_ellipsis' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_ellipsis' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '











































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@14b96c1e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '












































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@229514ff, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@229514ff, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '












































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@229514ff)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '













































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@664254b6, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@664254b6, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '













































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@664254b6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '














































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@714b6999, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@714b6999, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '














































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@714b6999)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '















































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2e4d2232, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2e4d2232, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '















































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2e4d2232)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
















































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@24f5e9e8, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@24f5e9e8, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
















































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@24f5e9e8)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

















































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@50e6ee24, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_block, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_block' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@50e6ee24, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_block, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_block' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_block' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

















































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@50e6ee24)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


















































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7acb5200, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7acb5200, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


















































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7acb5200)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



















































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3d50a3d9, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_enum_constant, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_enum_constant' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3d50a3d9, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_enum_constant, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_enum_constant' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



















































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3d50a3d9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




















































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3661b732, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3661b732, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




















































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3661b732)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





















































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5111f814, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_method_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_method_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5111f814, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_method_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_method_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





















































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5111f814)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






















































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@71eafb64, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_switch, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_switch' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@71eafb64, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_switch, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_switch' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






















































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@71eafb64)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '























































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@491cc0eb, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@491cc0eb, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_type_declaration, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_type_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_brace_in_type_declaration' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '























































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@491cc0eb)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
























































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@727f36dd, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@727f36dd, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
























































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@727f36dd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

























































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2c70a1de, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_bracket_in_array_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_bracket_in_array_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_bracket_in_array_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2c70a1de, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_bracket_in_array_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_bracket_in_array_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_bracket_in_array_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

























































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2c70a1de)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


























































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@ae74eef, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@ae74eef, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


























































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@ae74eef)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



























































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2553dcc0, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2553dcc0, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_annotation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_annotation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_annotation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



























































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2553dcc0)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




























































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2e91cf69, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2e91cf69, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




























































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2e91cf69)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





























































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@746e534, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_catch, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_catch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_catch' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@746e534, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_catch, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_catch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_catch' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





























































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@746e534)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






























































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@37665305, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@37665305, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






























































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@37665305)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@c683cf5, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_enum_constant, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_enum_constant' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@c683cf5, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_enum_constant, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_enum_constant' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@c683cf5)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2c224096, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_for, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_for' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2c224096, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_for, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_for' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2c224096)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1cfd6f63, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_if, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_if' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1cfd6f63, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_if, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_if' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_if' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1cfd6f63)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1906f982, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_method_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_method_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1906f982, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_method_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_method_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1906f982)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5444f1c3, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_method_invocation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_method_invocation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5444f1c3, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_method_invocation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_method_invocation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5444f1c3)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6a5c2d2d, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6a5c2d2d, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6a5c2d2d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1dadd172, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_switch, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_switch' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1dadd172, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_switch, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_switch' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_switch' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1dadd172)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@33c9f1ac, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_synchronized, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_synchronized' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_synchronized' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@33c9f1ac, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_synchronized, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_synchronized' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_synchronized' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@33c9f1ac)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '







































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4070c4ff, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_while, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_while' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_while' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4070c4ff, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_while, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_while' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_opening_paren_in_while' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '







































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4070c4ff)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '








































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4bceac99, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_parenthesized_expression_in_return, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_parenthesized_expression_in_return' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_parenthesized_expression_in_return' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4bceac99, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_parenthesized_expression_in_return, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_parenthesized_expression_in_return' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_parenthesized_expression_in_return' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '








































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4bceac99)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '









































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@389bc2d3, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_parenthesized_expression_in_throw, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_parenthesized_expression_in_throw' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_parenthesized_expression_in_throw' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@389bc2d3, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_parenthesized_expression_in_throw, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_parenthesized_expression_in_throw' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_parenthesized_expression_in_throw' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '









































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@389bc2d3)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '










































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@442310fd, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_postfix_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_postfix_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_postfix_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@442310fd, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_postfix_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_postfix_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_postfix_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '










































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@442310fd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '











































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@23263ba, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_prefix_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_prefix_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_prefix_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@23263ba, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_prefix_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_prefix_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_prefix_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '











































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@23263ba)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '












































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3ca6bd01, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_question_in_conditional, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_question_in_conditional' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_question_in_conditional' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3ca6bd01, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_question_in_conditional, value=insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_question_in_conditional' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_question_in_conditional' to type 'String'
[DEBUG] Convert string 'insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '












































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3ca6bd01)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '













































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5acd7d1c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_semicolon, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_semicolon' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_semicolon' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5acd7d1c, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_semicolon, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_semicolon' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_semicolon' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '













































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5acd7d1c)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '














































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6b52a40, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_semicolon_in_for, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_semicolon_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_semicolon_in_for' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6b52a40, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_semicolon_in_for, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_semicolon_in_for' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_semicolon_in_for' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '














































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6b52a40)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '















































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@178ba69f, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_unary_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_unary_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_unary_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@178ba69f, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_before_unary_operator, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_unary_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_before_unary_operator' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '















































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@178ba69f)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
















































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1e4c4fda, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_between_brackets_in_array_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_brackets_in_array_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_brackets_in_array_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1e4c4fda, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_between_brackets_in_array_type_reference, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_brackets_in_array_type_reference' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_brackets_in_array_type_reference' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
















































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1e4c4fda)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

















































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2f58f492, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_braces_in_array_initializer, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_braces_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_braces_in_array_initializer' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@2f58f492, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_braces_in_array_initializer, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_braces_in_array_initializer' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_braces_in_array_initializer' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

















































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@2f58f492)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


















































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@903c13, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@903c13, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


















































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@903c13)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



















































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4ae5ddc0, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4ae5ddc0, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



















































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4ae5ddc0)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




















































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@36ab69d9, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@36ab69d9, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




















































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@36ab69d9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





















































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5ebfe7fa, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_enum_constant, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_enum_constant' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5ebfe7fa, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_enum_constant, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_enum_constant' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_enum_constant' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





















































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5ebfe7fa)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






















































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5f4e389a, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_method_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_method_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@5f4e389a, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_method_declaration, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_method_declaration' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_method_declaration' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






















































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@5f4e389a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '























































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3ba1f56e, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_method_invocation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_method_invocation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@3ba1f56e, {id=org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_method_invocation, value=do not insert})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_method_invocation' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.insert_space_between_empty_parens_in_method_invocation' to type 'String'
[DEBUG] Convert string 'do not insert' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'do not insert' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '























































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@3ba1f56e)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
























































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@56a9b662, {id=org.eclipse.wst.jsdt.core.formatter.keep_else_statement_on_same_line, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.keep_else_statement_on_same_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.keep_else_statement_on_same_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@56a9b662, {id=org.eclipse.wst.jsdt.core.formatter.keep_else_statement_on_same_line, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.keep_else_statement_on_same_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.keep_else_statement_on_same_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
























































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@56a9b662)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

























































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@77881b7a, {id=org.eclipse.wst.jsdt.core.formatter.keep_empty_array_initializer_on_one_line, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.keep_empty_array_initializer_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.keep_empty_array_initializer_on_one_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@77881b7a, {id=org.eclipse.wst.jsdt.core.formatter.keep_empty_array_initializer_on_one_line, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.keep_empty_array_initializer_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.keep_empty_array_initializer_on_one_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

























































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@77881b7a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


























































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@59ac77f9, {id=org.eclipse.wst.jsdt.core.formatter.keep_empty_objlit_initializer_on_one_line, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.keep_empty_objlit_initializer_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.keep_empty_objlit_initializer_on_one_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@59ac77f9, {id=org.eclipse.wst.jsdt.core.formatter.keep_empty_objlit_initializer_on_one_line, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.keep_empty_objlit_initializer_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.keep_empty_objlit_initializer_on_one_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


























































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@59ac77f9)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



























































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6d92e327, {id=org.eclipse.wst.jsdt.core.formatter.keep_imple_if_on_one_line, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.keep_imple_if_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.keep_imple_if_on_one_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6d92e327, {id=org.eclipse.wst.jsdt.core.formatter.keep_imple_if_on_one_line, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.keep_imple_if_on_one_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.keep_imple_if_on_one_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



























































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6d92e327)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




























































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@76134251, {id=org.eclipse.wst.jsdt.core.formatter.keep_then_statement_on_same_line, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.keep_then_statement_on_same_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.keep_then_statement_on_same_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@76134251, {id=org.eclipse.wst.jsdt.core.formatter.keep_then_statement_on_same_line, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.keep_then_statement_on_same_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.keep_then_statement_on_same_line' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




























































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@76134251)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





























































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4177d422, {id=org.eclipse.wst.jsdt.core.formatter.lineSplit, value=120})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.lineSplit' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.lineSplit' to type 'String'
[DEBUG] Convert string '120' to class 'java.lang.String'
[DEBUG] Converting 'String' value '120' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@4177d422, {id=org.eclipse.wst.jsdt.core.formatter.lineSplit, value=120})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.lineSplit' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.lineSplit' to type 'String'
[DEBUG] Convert string '120' to class 'java.lang.String'
[DEBUG] Converting 'String' value '120' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





























































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@4177d422)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






























































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7bde704a, {id=org.eclipse.wst.jsdt.core.formatter.never_indent_block_comments_on_first_column, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.never_indent_block_comments_on_first_column' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.never_indent_block_comments_on_first_column' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@7bde704a, {id=org.eclipse.wst.jsdt.core.formatter.never_indent_block_comments_on_first_column, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.never_indent_block_comments_on_first_column' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.never_indent_block_comments_on_first_column' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






























































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@7bde704a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '































































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@12f3fcd, {id=org.eclipse.wst.jsdt.core.formatter.never_indent_line_comments_on_first_column, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.never_indent_line_comments_on_first_column' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.never_indent_line_comments_on_first_column' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@12f3fcd, {id=org.eclipse.wst.jsdt.core.formatter.never_indent_line_comments_on_first_column, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.never_indent_line_comments_on_first_column' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.never_indent_line_comments_on_first_column' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '































































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@12f3fcd)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '
































































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6dc2e473, {id=org.eclipse.wst.jsdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body, value=0})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@6dc2e473, {id=org.eclipse.wst.jsdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body, value=0})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body' to type 'String'
[DEBUG] Convert string '0' to class 'java.lang.String'
[DEBUG] Converting 'String' value '0' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
































































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@6dc2e473)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '

































































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@12ebfb2d, {id=org.eclipse.wst.jsdt.core.formatter.number_of_empty_lines_to_preserve, value=1})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.number_of_empty_lines_to_preserve' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.number_of_empty_lines_to_preserve' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@12ebfb2d, {id=org.eclipse.wst.jsdt.core.formatter.number_of_empty_lines_to_preserve, value=1})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.number_of_empty_lines_to_preserve' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.number_of_empty_lines_to_preserve' to type 'String'
[DEBUG] Convert string '1' to class 'java.lang.String'
[DEBUG] Converting 'String' value '1' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '

































































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@12ebfb2d)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '


































































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1abf951a, {id=org.eclipse.wst.jsdt.core.formatter.put_empty_statement_on_new_line, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.put_empty_statement_on_new_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.put_empty_statement_on_new_line' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@1abf951a, {id=org.eclipse.wst.jsdt.core.formatter.put_empty_statement_on_new_line, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.put_empty_statement_on_new_line' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.put_empty_statement_on_new_line' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '


































































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@1abf951a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '



































































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@629600d7, {id=org.eclipse.wst.jsdt.core.formatter.tabulation.char, value=space})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.tabulation.char' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.tabulation.char' to type 'String'
[DEBUG] Convert string 'space' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'space' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@629600d7, {id=org.eclipse.wst.jsdt.core.formatter.tabulation.char, value=space})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.tabulation.char' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.tabulation.char' to type 'String'
[DEBUG] Convert string 'space' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'space' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '



































































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@629600d7)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '




































































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@180d918a, {id=org.eclipse.wst.jsdt.core.formatter.tabulation.size, value=4})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.tabulation.size' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.tabulation.size' to type 'String'
[DEBUG] Convert string '4' to class 'java.lang.String'
[DEBUG] Converting 'String' value '4' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@180d918a, {id=org.eclipse.wst.jsdt.core.formatter.tabulation.size, value=4})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.tabulation.size' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.tabulation.size' to type 'String'
[DEBUG] Convert string '4' to class 'java.lang.String'
[DEBUG] Converting 'String' value '4' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '




































































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@180d918a)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '





































































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@55f23335, {id=org.eclipse.wst.jsdt.core.formatter.use_tabs_only_for_leading_indentations, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.use_tabs_only_for_leading_indentations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.use_tabs_only_for_leading_indentations' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@55f23335, {id=org.eclipse.wst.jsdt.core.formatter.use_tabs_only_for_leading_indentations, value=false})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.use_tabs_only_for_leading_indentations' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.use_tabs_only_for_leading_indentations' to type 'String'
[DEBUG] Convert string 'false' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'false' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '





































































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@55f23335)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] startElement(,,setting)
[DEBUG]   Pushing body text '






































































































































































































































































'
[DEBUG]   New match='profiles/profile/setting'
[DEBUG]   Fire begin() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} New 'net.revelc.code.formatter.model.Setting' using default empty constructor
[DEBUG]   Fire begin() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@33837bd4, {id=org.eclipse.wst.jsdt.core.formatter.wrap_before_binary_operator, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.wrap_before_binary_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.wrap_before_binary_operator' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG]   Fire begin() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'id' to 'id'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Setting property 'value' to 'value'
[DEBUG] [SetPropertiesRule]{profiles/profile/setting} Set 'net.revelc.code.formatter.model.Setting' properties
[DEBUG] BeanUtils.populate(net.revelc.code.formatter.model.Setting@33837bd4, {id=org.eclipse.wst.jsdt.core.formatter.wrap_before_binary_operator, value=true})
[DEBUG] Convert string 'org.eclipse.wst.jsdt.core.formatter.wrap_before_binary_operator' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'org.eclipse.wst.jsdt.core.formatter.wrap_before_binary_operator' to type 'String'
[DEBUG] Convert string 'true' to class 'java.lang.String'
[DEBUG] Converting 'String' value 'true' to type 'String'
[DEBUG] endElement(,,setting)
[DEBUG]   match='profiles/profile/setting'
[DEBUG]   bodyText=''
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '






































































































































































































































































'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={value=value}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetPropertiesRule[aliases={id=id}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addSetting, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile/setting} Call net.revelc.code.formatter.model.Profile.addSetting(net.revelc.code.formatter.model.Setting@33837bd4)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Setting, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile/setting} Pop 'net.revelc.code.formatter.model.Setting'
[DEBUG] characters(
)
[DEBUG] endElement(,,profile)
[DEBUG]   match='profiles/profile'
[DEBUG]   bodyText='







































































































































































































































































'
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Profile, attributeName=null]
[DEBUG]   Fire body() for SetNextRule[methodName=addProfile, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG]   Fire body() for SetPropertiesRule[aliases={kind=kind}, ignoreMissingProperty=true]
[DEBUG]   Popping body text '
'
[DEBUG]   Fire end() for SetPropertiesRule[aliases={kind=kind}, ignoreMissingProperty=true]
[DEBUG]   Fire end() for SetNextRule[methodName=addProfile, paramType=null, paramTypeName=null, useExactMatch=false, fireOnBegin=false]
[DEBUG] [SetNextRule]{profiles/profile} Call net.revelc.code.formatter.model.Profiles.addProfile(net.revelc.code.formatter.model.Profile@49ea13b6)
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Profile, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles/profile} Pop 'net.revelc.code.formatter.model.Profile'
[DEBUG] characters(
)
[DEBUG] endElement(,,profiles)
[DEBUG]   match='profiles'
[DEBUG]   bodyText='

'
[DEBUG]   Fire body() for ObjectCreateRule[className=net.revelc.code.formatter.model.Profiles, attributeName=null]
[DEBUG]   Popping body text ''
[DEBUG]   Fire end() for ObjectCreateRule[className=net.revelc.code.formatter.model.Profiles, attributeName=null]
[DEBUG] [ObjectCreateRule]{profiles} Pop 'net.revelc.code.formatter.model.Profiles'
[DEBUG] endDocument()
[DEBUG] Using search path at: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api
[DEBUG] The resource 'formatter-maven-plugin/jsoup/html.properties' was not found with resourceLoader 'org.codehaus.plexus.resource.loader.FileResourceLoader'
[DEBUG] The resource 'formatter-maven-plugin/jsoup/html.properties' was not found with resourceLoader 'org.codehaus.plexus.resource.loader.JarResourceLoader'
[DEBUG] The resource 'formatter-maven-plugin/jsoup/html.properties' was found as 'jar:file:/home/oludwig/.m2/repository/net/revelc/code/formatter/formatter-maven-plugin/2.23.0/formatter-maven-plugin-2.23.0.jar!/formatter-maven-plugin/jsoup/html.properties'
[DEBUG] Using search path at: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api
[DEBUG] The resource 'formatter-maven-plugin/eclipse/xml.properties' was not found with resourceLoader 'org.codehaus.plexus.resource.loader.FileResourceLoader'
[DEBUG] The resource 'formatter-maven-plugin/eclipse/xml.properties' was not found with resourceLoader 'org.codehaus.plexus.resource.loader.JarResourceLoader'
[DEBUG] The resource 'formatter-maven-plugin/eclipse/xml.properties' was found as 'jar:file:/home/oludwig/.m2/repository/net/revelc/code/formatter/formatter-maven-plugin/2.23.0/formatter-maven-plugin-2.23.0.jar!/formatter-maven-plugin/eclipse/xml.properties'
[DEBUG] Using search path at: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api
[DEBUG] The resource 'formatter-maven-plugin/jackson/json.properties' was not found with resourceLoader 'org.codehaus.plexus.resource.loader.FileResourceLoader'
[DEBUG] The resource 'formatter-maven-plugin/jackson/json.properties' was not found with resourceLoader 'org.codehaus.plexus.resource.loader.JarResourceLoader'
[DEBUG] The resource 'formatter-maven-plugin/jackson/json.properties' was found as 'jar:file:/home/oludwig/.m2/repository/net/revelc/code/formatter/formatter-maven-plugin/2.23.0/formatter-maven-plugin-2.23.0.jar!/formatter-maven-plugin/jackson/json.properties'
[DEBUG] Using search path at: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api
[DEBUG] The resource 'formatter-maven-plugin/ph-css/css.properties' was not found with resourceLoader 'org.codehaus.plexus.resource.loader.FileResourceLoader'
[DEBUG] The resource 'formatter-maven-plugin/ph-css/css.properties' was not found with resourceLoader 'org.codehaus.plexus.resource.loader.JarResourceLoader'
[DEBUG] The resource 'formatter-maven-plugin/ph-css/css.properties' was found as 'jar:file:/home/oludwig/.m2/repository/net/revelc/code/formatter/formatter-maven-plugin/2.23.0/formatter-maven-plugin-2.23.0.jar!/formatter-maven-plugin/ph-css/css.properties'
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/functions/FunctionLibrary.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/functions/FunctionLibrary.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/functions/StaticFunctionLibrarySupplier.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/functions/StaticFunctionLibrarySupplier.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/functions/package-info.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/functions/package-info.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/functions/Function.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/functions/Function.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/functions/FunctionLibrarySupplier.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/functions/FunctionLibrarySupplier.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pip/package-info.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pip/package-info.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pip/EnvironmentAttribute.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pip/EnvironmentAttribute.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pip/Attribute.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pip/Attribute.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pip/PolicyInformationPoint.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pip/PolicyInformationPoint.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pip/StaticPolicyInformationPointSupplier.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pip/StaticPolicyInformationPointSupplier.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pip/PolicyInformationPointSupplier.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pip/PolicyInformationPointSupplier.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/validation/package-info.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/validation/package-info.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/validation/Number.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/validation/Number.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/validation/Int.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/validation/Int.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/validation/Bool.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/validation/Bool.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/validation/JsonObject.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/validation/JsonObject.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/validation/Array.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/validation/Array.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/validation/Schema.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/validation/Schema.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/validation/Long.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/validation/Long.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/validation/Text.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/validation/Text.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/interpreter/package-info.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/interpreter/package-info.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/interpreter/ExpressionArgument.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/interpreter/ExpressionArgument.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/interpreter/Traced.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/interpreter/Traced.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/interpreter/Trace.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/interpreter/Trace.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/interpreter/PolicyEvaluationException.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/interpreter/PolicyEvaluationException.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/interpreter/Val.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/interpreter/Val.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pdp/package-info.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pdp/package-info.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pdp/Decision.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pdp/Decision.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pdp/AuthorizationSubscriptionInterceptor.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pdp/AuthorizationSubscriptionInterceptor.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pdp/TracedDecisionInterceptor.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pdp/TracedDecisionInterceptor.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pdp/AuthorizationDecision.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pdp/AuthorizationDecision.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pdp/AuthorizationSubscription.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pdp/AuthorizationSubscription.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pdp/TracedDecision.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java/io/sapl/api/pdp/TracedDecision.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/test/java/io/sapl/api/interpreter/ValTests.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/test/java/io/sapl/api/interpreter/ValTests.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/test/java/io/sapl/api/interpreter/PolicyEvaluationExceptionTests.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/test/java/io/sapl/api/interpreter/PolicyEvaluationExceptionTests.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/test/java/io/sapl/api/pdp/DecisionTests.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/test/java/io/sapl/api/pdp/DecisionTests.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/test/java/io/sapl/api/pdp/AuthorizationDecisionTests.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/test/java/io/sapl/api/pdp/AuthorizationDecisionTests.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/test/java/io/sapl/api/pdp/AuthorizationSubscriptionTests.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/test/java/io/sapl/api/pdp/AuthorizationSubscriptionTests.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/test/java/io/sapl/api/pdp/TracedDecisionInterceptorTests.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/test/java/io/sapl/api/pdp/TracedDecisionInterceptorTests.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/test/java/io/sapl/api/pdp/AuthorizationSubscriptionInterceptorTests.java
[DEBUG] Processing file: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/test/java/io/sapl/api/pdp/AuthorizationSubscriptionInterceptorTests.java with line ending: AUTO
[DEBUG] Nothing formatted. Try to fix line endings.
[DEBUG] Line endings fixed
[DEBUG] File is already formatted. Writing to cache only.
[DEBUG] Storing property file cache
[DEBUG] Reading property file cache
[DEBUG] Sorting property file cache
[DEBUG] Removing timestamp from property file cache
[DEBUG] Writing sorted cache file with no timestamp
[DEBUG] Files in cache are:

[/src/main/java/io/sapl/api/functions/Function.java=5eeb50f313031ee14e4ee0f4d2ff50ed1617b15ec88f476d6393419bc16c9873fbcc16d978809923bfd48762e631bb2f178b0097ac8a104613c8aa8929090274, /src/main/java/io/sapl/api/functions/FunctionLibrary.java=3ff5e7fd1bef651a08c19497e44d1dda71aa5bc14712306f1e26bad727d832a788e7a0560a66a20355b3e26d3527e79ca1066df12e2a5e22f464046c6831be7f, /src/main/java/io/sapl/api/functions/FunctionLibrarySupplier.java=2134689c31ea6510d98dbd2cb8c9acc9ce571b0da443990ebd38b14f98afeaf78cde6cbd5799aff1a84d85f5d29d1a089941d5ffdf64a69293997519ab07b574, /src/main/java/io/sapl/api/functions/StaticFunctionLibrarySupplier.java=895c23d487dcd146f72b6f8143837daee6b76f185a0ba3d31cc0204d8276854df39ded9814c38d528dfc0a1166ce439902f1fd6007ea9b0845e69fcc4b979053, /src/main/java/io/sapl/api/functions/package-info.java=734f35629b2e1e435711cddea88927e057bcd29c61942ce19eb5886f17c60d4d37fd50a4afe896a2382bd2d47a8b0accc6c87a61477ff319c22401cebaa8809c, /src/main/java/io/sapl/api/interpreter/ExpressionArgument.java=eae836ec1b7f29281688ba4e4c2e1683c53b2d66b06401294b1f457cf94c5c454e1a21c70fcd9fcb6a52960da5b2ac1b733a0f0e9782806276002381037c613e, /src/main/java/io/sapl/api/interpreter/PolicyEvaluationException.java=df79b3d585ca93ab3bc7c3900a912e616b3eb065e869d08e199f9ee8836ae94a922b6249c577fd8fd646ec22120fddadf0711d3494e680e4057efe2f11a6b146, /src/main/java/io/sapl/api/interpreter/Trace.java=5ab9f3967c31d09af043324686b82fad990b0573686e7d9aca25b99aa6a757b8fe344818c4770382398fd9642a9d43ec0644720ec01c920d228746a3a78e763e, /src/main/java/io/sapl/api/interpreter/Traced.java=3b0584adef330d2f10f79f08a092a95cc76f3ef0211b272f7d9038e4aac62d9dd27214ee0a9286996ebb817211b306065a9803631e129fec0853994645196705, /src/main/java/io/sapl/api/interpreter/Val.java=3ad90046f19a016f8dcd71deefc3d9419ad4159e15c12f77113a1ee15f8b2644606e12034d124f786cdcd5ab00256e37ddbd2333c54e1b5c99be5b2ce8e9a873, /src/main/java/io/sapl/api/interpreter/package-info.java=81f03ae435bc669e537d84fa4fef1c48d1d34ff303267c031ff4126632137b5c16e7d6fa18bd45028ec197b6ff8f8be94b8db15a4dd5a46cdf2d90d9478186ae, /src/main/java/io/sapl/api/pdp/AuthorizationDecision.java=fd901cc41e361ebcd4f4140f135c56d7735aae8db7eaddfd1922002dba10d328c53801d60b498405f27201331919ed29577b60597909ab1a8d98e1655670c096, /src/main/java/io/sapl/api/pdp/AuthorizationSubscription.java=9c98e579cb7cd21c45354f3e5648b1e4f5a47be9676dc800abfee67e9fdb0ab221beb1b49da7d02f9b0d8c36cb8456acf63df1f1ee2e7531b0c95eeb960b2405, /src/main/java/io/sapl/api/pdp/AuthorizationSubscriptionInterceptor.java=47d40979c98fd6610147611646471aace45a4062a4de147b15209a8946552827bf6d8b5600e3424794ee9a102846b861c93c35600b71a2e406a77d17202c0129, /src/main/java/io/sapl/api/pdp/Decision.java=8e4ece7c5cf244c0a8916891d8b99d3dc781211ff05ad8b8d6d5fb6fba28edf64e5fb956ea23cc30dbebb5aeb5a9fa51825c01fd638875ef380a2fe0fdcfbce8, /src/main/java/io/sapl/api/pdp/TracedDecision.java=a93ddfc70cba5857066439cc968beb9ed97751d604437410a7c93809fd9314713da46c2f8486d3f74fc146fd61704d7f6fcdc35e2f98ba7bc7e89162aed0c0bb, /src/main/java/io/sapl/api/pdp/TracedDecisionInterceptor.java=0cbfcc7a0e6594c6e676ecac6612b8885db79209b661c2357bbec934e8b8ba78ec0adea517f3d9451b13d24c6bf4cddbe1a92d0293ec2c18c94d552a10e846bc, /src/main/java/io/sapl/api/pdp/package-info.java=cd41b1cab3acfc16d666c46a29a68bbcd62cd776c25fd90473f88f75bbf29e4b707b989d9a382969056ec6032e325b5a3ef8187bfba4f1a012290ee96e607d0a, /src/main/java/io/sapl/api/pip/Attribute.java=fd03ba7f0d3bc504ab56e1cb86c304ea6c20310b09119eb2b3c9e75a55b6038655086bd42b8ef197f7f4e963b91fcaea64e061662d25a6296ad3fda122afe8f0, /src/main/java/io/sapl/api/pip/EnvironmentAttribute.java=c3796c2217c8c38f8afab641352b938cfcf361ade17c44cd757d3298ee09a2d9afb6b3df49ab9aeeb72770a21dc16229e6991f85a3458125519440bda2484fea, /src/main/java/io/sapl/api/pip/PolicyInformationPoint.java=556633c5144e1a9b10414972e21bc8aac5207fbe904afffecab6e83ce372a99f5013e1c89fecd8d5ae79a25f388053986c06f33cd603976ac4cf4a7e264cc9cb, /src/main/java/io/sapl/api/pip/PolicyInformationPointSupplier.java=6edfa834cc9cbc56a9497c2e379ed2407a8c0ade78027e9212129ce44a46f990ca0a374609266144144dad9e5bd0df64100bc8dac99337740d280a08b4a0b88c, /src/main/java/io/sapl/api/pip/StaticPolicyInformationPointSupplier.java=e52275cf4882d2a1f62ee3331756538cfe696eddb0aeb4e51e18821c6366fc0a9db137b0e5665fa57727a22e303283f07dd19dee6d2adc350d05b692c2385397, /src/main/java/io/sapl/api/pip/package-info.java=37d71fa746d6e95fc090eea4fb5a894c6e413740b41cf3a1e6215e13d12955b1adf9655936fef1104f7c686029e44f9a6491e2d9d67bed472147815616d4428a, /src/main/java/io/sapl/api/validation/Array.java=761410aac74a87e3e5b79fdb923ee456493125a7a44c9f0b9ee489a03ee548946da1fc9a8598ae5ae26e050bcd6e8fae2a0d898c2ded1e307613ded5f5e93fd9, /src/main/java/io/sapl/api/validation/Bool.java=7ec4520c02a6c5180381e7298aa13f01e04da642a19f6d4b0b2112b5ea79e70cbf5ba615734359cbbf533a3e2ae9d0da99f87879e7d5711fb961de3b59b06f7d, /src/main/java/io/sapl/api/validation/Int.java=39592c02fdb68f6bc53f26804bd2596f17c6997e0c1f6e907232973720d7866535f87e415f66473f7ee67748912939b4faa3595cf499db596fad927f1c06f7e3, /src/main/java/io/sapl/api/validation/JsonObject.java=fa314b0fdb2371f60b27f69591746e60a0ff13df71d37961aab4236d67c6d1191c9445ab45ee78c102cc0d164648fc1266db67aee742b02f1a31d8792f1cf1cd, /src/main/java/io/sapl/api/validation/Long.java=dd5667ae86f8cf733b3639140448a2ac55c28fe2bf499c8d4933d0ab8587cf9d21bd06ce6f268e4bb298355f356f62610fdee166638e3093c8631969ea6408ae, /src/main/java/io/sapl/api/validation/Number.java=a46db3103a1ea102c650c5e12daae0ea2e85390c5b4a331b78cc7448014c71c0e8b5c6148b8f9457e5cd5221eb2cf019e69dae352567ca70e3590bcee2c7752c, /src/main/java/io/sapl/api/validation/Schema.java=af60aa99ed3f3c959597b7b28f231937310699f481ffb9f3d7194c7d1643bab186df7539cf8de0cf9ae116277d72e2886743e0c8919446946f60352d41cc1a1d, /src/main/java/io/sapl/api/validation/Text.java=27cecf6899a565fc7ff6d4145ad7e7f88fd67cc3e2c1f2e0e2e17ee72ff0ad15a8e94827b04259e62e50021e1d7b85573617d42dc64dcc7435c0623b78114fdd, /src/main/java/io/sapl/api/validation/package-info.java=2033745bb24bd31e9e5951538e09e93b4d93810bb323fcc23c883da65de2088c1a685494c2d8289e5d1f6603c702237b150cd2ab69e9b1f8e63c9010ac2a9bd2, /src/test/java/io/sapl/api/interpreter/PolicyEvaluationExceptionTests.java=844e88ebcd90e9213e76a78ff59d7ec5194705ade0a1d889d0f6e8a68ecaa8d2eaaabd3121512c6e589b5200e3889c519fbe62fec8813aa103108295b986e6c4, /src/test/java/io/sapl/api/interpreter/ValTests.java=979e10555ec46da46baef6ae94e31f2dac1ab5cdc1dc9b39b5265ae2f552bbd23dbe2984d44e9592069427feed158004bca7f36790a99a8dfe62add684e98603, /src/test/java/io/sapl/api/pdp/AuthorizationDecisionTests.java=55923da5603f11ef795537964c9ecc6bb5676d46f1f69454ccb8953fdcc9235230db8f99442be57ff9c25e0a987efd7fe88361f384a1798c400c7a4a1532fad8, /src/test/java/io/sapl/api/pdp/AuthorizationSubscriptionInterceptorTests.java=336e03314269856533f3f51b93c8b0ab73742372361c2b32cb070c9995ce749f68567e91e3ef7a9d7a25e66896d77b993f933300e78b9de022a80671fa97f3ef, /src/test/java/io/sapl/api/pdp/AuthorizationSubscriptionTests.java=2f66b7d54075c9f6594476f3e480723e7d0ac7c27544db060292aa7a8f2116c30fa7a64017cfaff0e3c551293978a8cbcc7a2b4368ba6553e407f7163f8c2c8b, /src/test/java/io/sapl/api/pdp/DecisionTests.java=cc68d78085d9231b3dcad453910d73e77fc3fc2d43a37aead135cc2eca0c695e3b3032c6702f5fcbc36372e51d77882fbc341e95a68834371dcc3f11e8b6db6c, /src/test/java/io/sapl/api/pdp/TracedDecisionInterceptorTests.java=80724636d45aea7bbc936eb04dd2069364c4cf97203554b6f1ce38324efa6c05d40f367a13955a74467ed50698b3b0256d20916d8b13aa4b8f27061a0c8149b4]
[INFO] Processed 40 files in 1s300ms (Formatted: 0, Skipped: 0, Unchanged: 40, Failed: 0, Readonly: 0)
[INFO] 
[INFO] --- maven-resources-plugin:3.3.1:resources (default-resources) @ sapl-extensions-api ---
[DEBUG] Dependency collection stats {ConflictMarker.analyzeTime=104229, ConflictMarker.markTime=18921, ConflictMarker.nodeCount=13, ConflictIdSorter.graphTime=19711, ConflictIdSorter.topsortTime=15572, ConflictIdSorter.conflictIdCount=9, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=203177, ConflictResolver.conflictItemCount=13, DefaultDependencyCollector.collectTime=13767587, DefaultDependencyCollector.transformTime=388254}
[DEBUG] org.apache.maven.plugins:maven-resources-plugin:jar:3.3.1
[DEBUG]    org.codehaus.plexus:plexus-interpolation:jar:1.26:runtime
[DEBUG]    org.codehaus.plexus:plexus-utils:jar:3.5.1:compile
[DEBUG]    org.apache.maven.shared:maven-filtering:jar:3.3.1:compile
[DEBUG]       javax.inject:javax.inject:jar:1:compile
[DEBUG]       org.slf4j:slf4j-api:jar:1.7.36:compile
[DEBUG]       org.sonatype.plexus:plexus-build-api:jar:0.0.7:compile
[DEBUG]    commons-io:commons-io:jar:2.11.0:compile
[DEBUG]    org.apache.commons:commons-lang3:jar:3.12.0:compile
[DEBUG] Created new class realm plugin>org.apache.maven.plugins:maven-resources-plugin:3.3.1
[DEBUG] Importing foreign packages into class realm plugin>org.apache.maven.plugins:maven-resources-plugin:3.3.1
[DEBUG]   Imported:  < project>io.sapl:sapl-extensions-api:3.0.0-SNAPSHOT
[DEBUG] Populating class realm plugin>org.apache.maven.plugins:maven-resources-plugin:3.3.1
[DEBUG]   Included: org.apache.maven.plugins:maven-resources-plugin:jar:3.3.1
[DEBUG]   Included: org.codehaus.plexus:plexus-interpolation:jar:1.26
[DEBUG]   Included: org.codehaus.plexus:plexus-utils:jar:3.5.1
[DEBUG]   Included: org.apache.maven.shared:maven-filtering:jar:3.3.1
[DEBUG]   Included: org.sonatype.plexus:plexus-build-api:jar:0.0.7
[DEBUG]   Included: commons-io:commons-io:jar:2.11.0
[DEBUG]   Included: org.apache.commons:commons-lang3:jar:3.12.0
[DEBUG] Configuring mojo org.apache.maven.plugins:maven-resources-plugin:3.3.1:resources from plugin realm ClassRealm[plugin>org.apache.maven.plugins:maven-resources-plugin:3.3.1, parent: jdk.internal.loader.ClassLoaders$AppClassLoader@5cb0d902]
[DEBUG] Configuring mojo 'org.apache.maven.plugins:maven-resources-plugin:3.3.1:resources' with basic configurator -->
[DEBUG]   (f) addDefaultExcludes = true
[DEBUG]   (f) buildFilters = []
[DEBUG]   (f) encoding = UTF-8
[DEBUG]   (f) escapeWindowsPaths = true
[DEBUG]   (f) fileNameFiltering = false
[DEBUG]   (s) includeEmptyDirs = false
[DEBUG]   (s) outputDirectory = /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes
[DEBUG]   (s) overwrite = false
[DEBUG]   (f) project = MavenProject: io.sapl:sapl-extensions-api:3.0.0-SNAPSHOT @ /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/pom.xml
[DEBUG]   (s) resources = [Resource {targetPath: null, filtering: false, FileSet {directory: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/resources, PatternSet [includes: {}, excludes: {}]}}]
[DEBUG]   (f) session = org.apache.maven.execution.MavenSession@36a8ebca
[DEBUG]   (f) skip = false
[DEBUG]   (f) supportMultiLineFiltering = false
[DEBUG]   (f) useBuildFilters = true
[DEBUG]   (s) useDefaultDelimiters = true
[DEBUG] -- end configuration --
[DEBUG] properties used:
[DEBUG] argLine: 
[DEBUG] assertj.version: 3.24.2
[DEBUG] classworlds.conf: /usr/share/maven/bin/m2.conf
[DEBUG] docker-registry-url: ghcr.io/heutelbeck
[DEBUG] dockerfile-maven-plugin.version: 1.4.13
[DEBUG] env.CLUTTER_IM_MODULE: ibus
[DEBUG] env.DBUS_SESSION_BUS_ADDRESS: unix:path=/run/user/1000/bus
[DEBUG] env.DESKTOP_SESSION: plasma
[DEBUG] env.DISPLAY: :0
[DEBUG] env.GPG_AGENT_INFO: /run/user/1000/gnupg/S.gpg-agent:0:1
[DEBUG] env.GTK2_RC_FILES: /etc/gtk-2.0/gtkrc:/home/oludwig/.gtkrc-2.0:/home/oludwig/.config/gtkrc-2.0
[DEBUG] env.GTK_IM_MODULE: ibus
[DEBUG] env.GTK_MODULES: gail:atk-bridge
[DEBUG] env.GTK_RC_FILES: /etc/gtk/gtkrc:/home/oludwig/.gtkrc:/home/oludwig/.config/gtkrc
[DEBUG] env.HOME: /home/oludwig
[DEBUG] env.IM_CONFIG_PHASE: 1
[DEBUG] env.INVOCATION_ID: 4d0c85f78f15415a8a6bbd493fe92992
[DEBUG] env.JOURNAL_STREAM: 8:35051
[DEBUG] env.KDE_APPLICATIONS_AS_SCOPE: 1
[DEBUG] env.KDE_FULL_SESSION: true
[DEBUG] env.KDE_SESSION_UID: 1000
[DEBUG] env.KDE_SESSION_VERSION: 5
[DEBUG] env.LANG: de_DE.UTF-8
[DEBUG] env.LOGNAME: oludwig
[DEBUG] env.LS_COLORS: rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.swp=00;90:*.tmp=00;90:*.dpkg-dist=00;90:*.dpkg-old=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:
[DEBUG] env.MANAGERPID: 1830
[DEBUG] env.MAVEN_CMD_LINE_ARGS:  -B -e -X --log-file test2.log process-test-resources
[DEBUG] env.MAVEN_PROJECTBASEDIR: /home/oludwig/dev/uni/sapl-policy-engine
[DEBUG] env.OLDPWD: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api
[DEBUG] env.PAM_KWALLET5_LOGIN: /run/user/1000/kwallet5.socket
[DEBUG] env.PATH: /home/oludwig/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/home/oludwig/.local/share/JetBrains/Toolbox/scripts
[DEBUG] env.PWD: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api
[DEBUG] env.QTWEBENGINE_DICTIONARIES_PATH: /usr/share/hunspell-bdic/
[DEBUG] env.QT_ACCESSIBILITY: 1
[DEBUG] env.QT_AUTO_SCREEN_SCALE_FACTOR: 0
[DEBUG] env.QT_IM_MODULE: ibus
[DEBUG] env.SESSION_MANAGER: local/PC-Ole:@/tmp/.ICE-unix/2105,unix/PC-Ole:/tmp/.ICE-unix/2105
[DEBUG] env.SHELL: /usr/bin/bash
[DEBUG] env.SHLVL: 1
[DEBUG] env.SSH_AGENT_PID: 1953
[DEBUG] env.SSH_AUTH_SOCK: /tmp/ssh-XXXXXXa9uWzq/agent.1885
[DEBUG] env.SYSTEMD_EXEC_PID: 2371
[DEBUG] env.TERM: xterm-256color
[DEBUG] env.TERMINAL_EMULATOR: JetBrains-JediTerm
[DEBUG] env.TERM_SESSION_ID: 9464fcdd-8713-4ae9-a759-5d6cd477a0a5
[DEBUG] env.TOOLBOX_VERSION: 2.1.3.18901
[DEBUG] env.USER: oludwig
[DEBUG] env.XAUTHORITY: /home/oludwig/.Xauthority
[DEBUG] env.XCURSOR_SIZE: 24
[DEBUG] env.XCURSOR_THEME: breeze_cursors
[DEBUG] env.XDG_CONFIG_DIRS: /home/oludwig/.config/kdedefaults:/etc/xdg:/usr/share/desktop-base/kf5-settings
[DEBUG] env.XDG_CURRENT_DESKTOP: KDE
[DEBUG] env.XDG_DATA_DIRS: /home/oludwig/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share
[DEBUG] env.XDG_RUNTIME_DIR: /run/user/1000
[DEBUG] env.XDG_SEAT: seat0
[DEBUG] env.XDG_SEAT_PATH: /org/freedesktop/DisplayManager/Seat0
[DEBUG] env.XDG_SESSION_CLASS: user
[DEBUG] env.XDG_SESSION_DESKTOP: KDE
[DEBUG] env.XDG_SESSION_ID: 3
[DEBUG] env.XDG_SESSION_PATH: /org/freedesktop/DisplayManager/Session1
[DEBUG] env.XDG_SESSION_TYPE: x11
[DEBUG] env.XDG_VTNR: 7
[DEBUG] env.XMODIFIERS: @im=ibus
[DEBUG] env._: /usr/bin/mvn
[DEBUG] failsafe.version: 3.1.2
[DEBUG] file.encoding: UTF-8
[DEBUG] file.separator: /
[DEBUG] guice.version: 5.1.0
[DEBUG] jacoco.version: 0.8.11
[DEBUG] java.class.path: /usr/share/maven/boot/plexus-classworlds-2.x.jar
[DEBUG] java.class.version: 61.0
[DEBUG] java.home: /usr/lib/jvm/java-17-openjdk-amd64
[DEBUG] java.io.tmpdir: /tmp
[DEBUG] java.library.path: /usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
[DEBUG] java.runtime.name: OpenJDK Runtime Environment
[DEBUG] java.runtime.version: 17.0.9+9-Debian-1deb12u1
[DEBUG] java.specification.name: Java Platform API Specification
[DEBUG] java.specification.vendor: Oracle Corporation
[DEBUG] java.specification.version: 17
[DEBUG] java.vendor: Debian
[DEBUG] java.vendor.url: https://tracker.debian.org/openjdk-17
[DEBUG] java.vendor.url.bug: https://bugs.debian.org/openjdk-17
[DEBUG] java.version: 17.0.9
[DEBUG] java.version.date: 2023-10-17
[DEBUG] java.vm.compressedOopsMode: Zero based
[DEBUG] java.vm.info: mixed mode, sharing
[DEBUG] java.vm.name: OpenJDK 64-Bit Server VM
[DEBUG] java.vm.specification.name: Java Virtual Machine Specification
[DEBUG] java.vm.specification.vendor: Oracle Corporation
[DEBUG] java.vm.specification.version: 17
[DEBUG] java.vm.vendor: Debian
[DEBUG] java.vm.version: 17.0.9+9-Debian-1deb12u1
[DEBUG] jdk.debug: release
[DEBUG] junit.version: 5.10.0
[DEBUG] library.jansi.path: /usr/share/maven/lib/jansi-native
[DEBUG] license-maven-plugin.version: 4.2
[DEBUG] line.separator: 

[DEBUG] lombok.version: 1.18.30
[DEBUG] maven.build.timestamp: 2024-01-12T08:46:50Z
[DEBUG] maven.build.version: Apache Maven 3.8.7
[DEBUG] maven.compiler.release: 17
[DEBUG] maven.compiler.source: 17
[DEBUG] maven.compiler.target: 17
[DEBUG] maven.conf: /usr/share/maven/conf
[DEBUG] maven.home: /usr/share/maven
[DEBUG] maven.multiModuleProjectDirectory: /home/oludwig/dev/uni/sapl-policy-engine
[DEBUG] maven.version: 3.8.7
[DEBUG] native.encoding: UTF-8
[DEBUG] os.arch: amd64
[DEBUG] os.name: Linux
[DEBUG] os.version: 6.1.0-16-amd64
[DEBUG] path.separator: :
[DEBUG] project.baseUri: file:/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/
[DEBUG] project.build.sourceEncoding: UTF-8
[DEBUG] project.reporting.outputEncoding: UTF-8
[DEBUG] reactornetty.version: 1.0.40
[DEBUG] rsocket.version: 1.1.4
[DEBUG] snakeyaml.version: 2.2
[DEBUG] sonar.exclusions: **/xtext-gen/**/*,**/xtend-gen/**/*,**/emf-gen/**/*
[DEBUG] sonar.host.url: https://sonar.ftk.de
[DEBUG] sonar.version: 3.9.1.2184
[DEBUG] spotify.hamcrest.version: 1.3.2
[DEBUG] springboot.version: 3.2.1
[DEBUG] sun.arch.data.model: 64
[DEBUG] sun.boot.library.path: /usr/lib/jvm/java-17-openjdk-amd64/lib
[DEBUG] sun.cpu.endian: little
[DEBUG] sun.io.unicode.encoding: UnicodeLittle
[DEBUG] sun.java.command: org.codehaus.plexus.classworlds.launcher.Launcher -B -e -X --log-file test2.log process-test-resources
[DEBUG] sun.java.launcher: SUN_STANDARD
[DEBUG] sun.jnu.encoding: UTF-8
[DEBUG] sun.management.compiler: HotSpot 64-Bit Tiered Compilers
[DEBUG] sun.stderr.encoding: UTF-8
[DEBUG] sun.stdout.encoding: UTF-8
[DEBUG] tycho.version: 3.0.5
[DEBUG] user.country: DE
[DEBUG] user.dir: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api
[DEBUG] user.home: /home/oludwig
[DEBUG] user.language: de
[DEBUG] user.name: oludwig
[DEBUG] vaadin.version: 24.2.6
[DEBUG] xtext.version: 2.32.0
[DEBUG] Using 'UTF-8' encoding to copy filtered resources.
[DEBUG] Using 'UTF-8' encoding to copy filtered properties files.
[DEBUG] resource with targetPath null
directory /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/resources
excludes []
includes []
[INFO] skip non existing resourceDirectory /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/resources
[DEBUG] no user filter components
[INFO] 
[INFO] --- maven-compiler-plugin:3.11.0:compile (default-compile) @ sapl-extensions-api ---
[DEBUG] Dependency collection stats {ConflictMarker.analyzeTime=31173, ConflictMarker.markTime=20612, ConflictMarker.nodeCount=17, ConflictIdSorter.graphTime=26622, ConflictIdSorter.topsortTime=21582, ConflictIdSorter.conflictIdCount=12, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=158484, ConflictResolver.conflictItemCount=17, DefaultDependencyCollector.collectTime=23774066, DefaultDependencyCollector.transformTime=289786}
[DEBUG] org.apache.maven.plugins:maven-compiler-plugin:jar:3.11.0
[DEBUG]    org.apache.maven.shared:maven-shared-utils:jar:3.3.4:compile
[DEBUG]       commons-io:commons-io:jar:2.6:compile
[DEBUG]    org.apache.maven.shared:maven-shared-incremental:jar:1.1:compile
[DEBUG]       org.codehaus.plexus:plexus-component-annotations:jar:1.5.5:compile
[DEBUG]    org.codehaus.plexus:plexus-java:jar:1.1.2:compile
[DEBUG]       org.ow2.asm:asm:jar:9.4:compile
[DEBUG]       com.thoughtworks.qdox:qdox:jar:2.0.3:compile (version managed from default)
[DEBUG]    org.codehaus.plexus:plexus-compiler-api:jar:2.13.0:compile
[DEBUG]       org.codehaus.plexus:plexus-utils:jar:3.5.0:compile (version managed from default)
[DEBUG]    org.codehaus.plexus:plexus-compiler-manager:jar:2.13.0:compile
[DEBUG]    org.codehaus.plexus:plexus-compiler-javac:jar:2.13.0:runtime
[DEBUG] Created new class realm plugin>org.apache.maven.plugins:maven-compiler-plugin:3.11.0
[DEBUG] Importing foreign packages into class realm plugin>org.apache.maven.plugins:maven-compiler-plugin:3.11.0
[DEBUG]   Imported:  < project>io.sapl:sapl-extensions-api:3.0.0-SNAPSHOT
[DEBUG] Populating class realm plugin>org.apache.maven.plugins:maven-compiler-plugin:3.11.0
[DEBUG]   Included: org.apache.maven.plugins:maven-compiler-plugin:jar:3.11.0
[DEBUG]   Included: org.apache.maven.shared:maven-shared-utils:jar:3.3.4
[DEBUG]   Included: commons-io:commons-io:jar:2.6
[DEBUG]   Included: org.apache.maven.shared:maven-shared-incremental:jar:1.1
[DEBUG]   Included: org.codehaus.plexus:plexus-component-annotations:jar:1.5.5
[DEBUG]   Included: org.codehaus.plexus:plexus-java:jar:1.1.2
[DEBUG]   Included: org.ow2.asm:asm:jar:9.4
[DEBUG]   Included: com.thoughtworks.qdox:qdox:jar:2.0.3
[DEBUG]   Included: org.codehaus.plexus:plexus-compiler-api:jar:2.13.0
[DEBUG]   Included: org.codehaus.plexus:plexus-utils:jar:3.5.0
[DEBUG]   Included: org.codehaus.plexus:plexus-compiler-manager:jar:2.13.0
[DEBUG]   Included: org.codehaus.plexus:plexus-compiler-javac:jar:2.13.0
[DEBUG] Configuring mojo org.apache.maven.plugins:maven-compiler-plugin:3.11.0:compile from plugin realm ClassRealm[plugin>org.apache.maven.plugins:maven-compiler-plugin:3.11.0, parent: jdk.internal.loader.ClassLoaders$AppClassLoader@5cb0d902]
[DEBUG] Configuring mojo 'org.apache.maven.plugins:maven-compiler-plugin:3.11.0:compile' with basic configurator -->
[DEBUG]   (s) groupId = org.projectlombok
[DEBUG]   (s) artifactId = lombok
[DEBUG]   (s) version = 1.18.30
[DEBUG]   (f) annotationProcessorPaths = [org.projectlombok:lombok:1.18.30.jar]
[DEBUG]   (f) basedir = /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api
[DEBUG]   (f) buildDirectory = /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target
[DEBUG]   (f) compilePath = [/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes, /home/oludwig/.m2/repository/io/projectreactor/reactor-core/3.6.1/reactor-core-3.6.1.jar, /home/oludwig/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar, /home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar, /home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar, /home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar, /home/oludwig/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar, /home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar, /home/oludwig/.m2/repository/org/osgi/org.osgi.annotation.bundle/2.0.0/org.osgi.annotation.bundle-2.0.0.jar, /home/oludwig/.m2/repository/org/osgi/org.osgi.annotation.versioning/1.1.2/org.osgi.annotation.versioning-1.1.2.jar, /home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar]
[DEBUG]   (f) compileSourceRoots = [/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java]
[DEBUG]   (f) compilerArgs = [-parameters]
[DEBUG]   (f) compilerId = javac
[DEBUG]   (f) createMissingPackageInfoClass = true
[DEBUG]   (f) debug = true
[DEBUG]   (f) debugFileName = javac
[DEBUG]   (f) enablePreview = false
[DEBUG]   (f) encoding = UTF-8
[DEBUG]   (f) failOnError = true
[DEBUG]   (f) failOnWarning = true
[DEBUG]   (f) forceJavacCompilerUse = false
[DEBUG]   (f) fork = false
[DEBUG]   (f) generatedSourcesDirectory = /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/generated-sources/annotations
[DEBUG]   (f) mojoExecution = org.apache.maven.plugins:maven-compiler-plugin:3.11.0:compile {execution: default-compile}
[DEBUG]   (f) optimize = false
[DEBUG]   (f) outputDirectory = /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes
[DEBUG]   (f) parameters = false
[DEBUG]   (f) project = MavenProject: io.sapl:sapl-extensions-api:3.0.0-SNAPSHOT @ /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/pom.xml
[DEBUG]   (f) projectArtifact = io.sapl:sapl-extensions-api:jar:3.0.0-SNAPSHOT
[DEBUG]   (s) release = 17
[DEBUG]   (f) session = org.apache.maven.execution.MavenSession@36a8ebca
[DEBUG]   (f) showCompilationChanges = false
[DEBUG]   (f) showDeprecation = true
[DEBUG]   (f) showWarnings = true
[DEBUG]   (f) skipMultiThreadWarning = false
[DEBUG]   (f) source = 17
[DEBUG]   (f) staleMillis = 0
[DEBUG]   (s) target = 17
[DEBUG]   (f) useIncrementalCompilation = true
[DEBUG]   (f) verbose = false
[DEBUG] -- end configuration --
[DEBUG] Using compiler 'javac'.
[DEBUG] Adding /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/generated-sources/annotations to compile source roots:
  /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java
[DEBUG] New compile source roots:
  /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java
  /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/generated-sources/annotations
[DEBUG] Dependency collection stats {ConflictMarker.analyzeTime=38774, ConflictMarker.markTime=28122, ConflictMarker.nodeCount=2, ConflictIdSorter.graphTime=8961, ConflictIdSorter.topsortTime=16702, ConflictIdSorter.conflictIdCount=1, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=126441, ConflictResolver.conflictItemCount=1, DefaultDependencyCollector.collectTime=920920, DefaultDependencyCollector.transformTime=247021}
[DEBUG] CompilerReuseStrategy: reuseCreated
[DEBUG] useIncrementalCompilation enabled
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- bnd-maven-plugin:6.4.0:bnd-process (default) @ sapl-extensions-api ---
[DEBUG] Using mirror maven-default-http-blocker (http://0.0.0.0/) for codehaus.snapshots (http://snapshots.repository.codehaus.org).
[DEBUG] Dependency collection stats {ConflictMarker.analyzeTime=126141, ConflictMarker.markTime=56795, ConflictMarker.nodeCount=109, ConflictIdSorter.graphTime=172675, ConflictIdSorter.topsortTime=51415, ConflictIdSorter.conflictIdCount=43, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=1655614, ConflictResolver.conflictItemCount=108, DefaultDependencyCollector.collectTime=45926662, DefaultDependencyCollector.transformTime=2112964}
[DEBUG] biz.aQute.bnd:bnd-maven-plugin:jar:6.4.0
[DEBUG]    org.apache.maven.shared:maven-mapping:jar:3.0.0:compile
[DEBUG]       org.apache.maven:maven-core:jar:3.0:compile
[DEBUG]          org.apache.maven:maven-model:jar:3.0:compile
[DEBUG]          org.apache.maven:maven-settings:jar:3.0:compile
[DEBUG]          org.apache.maven:maven-settings-builder:jar:3.0:compile
[DEBUG]          org.apache.maven:maven-repository-metadata:jar:3.0:compile
[DEBUG]          org.apache.maven:maven-artifact:jar:3.0:compile
[DEBUG]          org.apache.maven:maven-plugin-api:jar:3.0:compile
[DEBUG]          org.apache.maven:maven-model-builder:jar:3.0:compile
[DEBUG]          org.apache.maven:maven-aether-provider:jar:3.0:runtime
[DEBUG]          org.sonatype.aether:aether-impl:jar:1.7:compile
[DEBUG]             org.sonatype.aether:aether-spi:jar:1.7:compile
[DEBUG]          org.sonatype.aether:aether-api:jar:1.7:compile
[DEBUG]          org.sonatype.aether:aether-util:jar:1.7:compile
[DEBUG]          org.sonatype.sisu:sisu-inject-plexus:jar:1.4.2:compile
[DEBUG]             org.sonatype.sisu:sisu-inject-bean:jar:1.4.2:compile
[DEBUG]                org.sonatype.sisu:sisu-guice:jar:noaop:2.1.7:compile
[DEBUG]          org.codehaus.plexus:plexus-classworlds:jar:2.2.3:compile
[DEBUG]          org.codehaus.plexus:plexus-component-annotations:jar:1.5.5:compile
[DEBUG]          org.sonatype.plexus:plexus-sec-dispatcher:jar:1.3:compile
[DEBUG]             org.sonatype.plexus:plexus-cipher:jar:1.4:compile
[DEBUG]       org.codehaus.plexus:plexus-interpolation:jar:1.21:compile
[DEBUG]    org.sonatype.plexus:plexus-build-api:jar:0.0.7:compile
[DEBUG]       org.codehaus.plexus:plexus-utils:jar:1.5.8:compile
[DEBUG]    biz.aQute.bnd:biz.aQute.bnd.maven:jar:6.4.0:compile
[DEBUG]       org.osgi:org.osgi.dto:jar:1.0.0:compile
[DEBUG]       org.osgi:org.osgi.resource:jar:1.0.0:compile
[DEBUG]       org.osgi:org.osgi.framework:jar:1.8.0:compile
[DEBUG]       org.osgi:org.osgi.service.repository:jar:1.1.0:compile
[DEBUG]       org.osgi:org.osgi.util.function:jar:1.2.0:compile
[DEBUG]          org.osgi:osgi.annotation:jar:8.0.1:compile
[DEBUG]       org.osgi:org.osgi.util.promise:jar:1.2.0:compile
[DEBUG]       biz.aQute.bnd:biz.aQute.bnd.util:jar:6.4.0:compile
[DEBUG]       biz.aQute.bnd:biz.aQute.resolve:jar:6.4.0:compile
[DEBUG]          org.osgi:org.osgi.service.resolver:jar:1.1.1:compile
[DEBUG]       biz.aQute.bnd:biz.aQute.repository:jar:6.4.0:compile
[DEBUG]          org.osgi:org.osgi.service.coordinator:jar:1.0.2:compile
[DEBUG]       org.eclipse.aether:aether-api:jar:1.0.2.v20150114:compile
[DEBUG]    biz.aQute.bnd:biz.aQute.bndlib:jar:6.4.0:compile
[DEBUG]       org.osgi:org.osgi.util.tracker:jar:1.5.4:compile
[DEBUG]       org.osgi:org.osgi.service.log:jar:1.3.0:compile
[DEBUG]       org.slf4j:slf4j-api:jar:1.7.25:compile
[DEBUG] Created new class realm plugin>biz.aQute.bnd:bnd-maven-plugin:6.4.0
[DEBUG] Importing foreign packages into class realm plugin>biz.aQute.bnd:bnd-maven-plugin:6.4.0
[DEBUG]   Imported:  < project>io.sapl:sapl-extensions-api:3.0.0-SNAPSHOT
[DEBUG] Populating class realm plugin>biz.aQute.bnd:bnd-maven-plugin:6.4.0
[DEBUG]   Included: biz.aQute.bnd:bnd-maven-plugin:jar:6.4.0
[DEBUG]   Included: org.apache.maven.shared:maven-mapping:jar:3.0.0
[DEBUG]   Included: org.sonatype.aether:aether-util:jar:1.7
[DEBUG]   Included: org.sonatype.sisu:sisu-inject-bean:jar:1.4.2
[DEBUG]   Included: org.sonatype.sisu:sisu-guice:jar:noaop:2.1.7
[DEBUG]   Included: org.codehaus.plexus:plexus-component-annotations:jar:1.5.5
[DEBUG]   Included: org.sonatype.plexus:plexus-sec-dispatcher:jar:1.3
[DEBUG]   Included: org.sonatype.plexus:plexus-cipher:jar:1.4
[DEBUG]   Included: org.codehaus.plexus:plexus-interpolation:jar:1.21
[DEBUG]   Included: org.sonatype.plexus:plexus-build-api:jar:0.0.7
[DEBUG]   Included: org.codehaus.plexus:plexus-utils:jar:1.5.8
[DEBUG]   Included: biz.aQute.bnd:biz.aQute.bnd.maven:jar:6.4.0
[DEBUG]   Included: org.osgi:org.osgi.dto:jar:1.0.0
[DEBUG]   Included: org.osgi:org.osgi.resource:jar:1.0.0
[DEBUG]   Included: org.osgi:org.osgi.framework:jar:1.8.0
[DEBUG]   Included: org.osgi:org.osgi.service.repository:jar:1.1.0
[DEBUG]   Included: org.osgi:org.osgi.util.function:jar:1.2.0
[DEBUG]   Included: org.osgi:osgi.annotation:jar:8.0.1
[DEBUG]   Included: org.osgi:org.osgi.util.promise:jar:1.2.0
[DEBUG]   Included: biz.aQute.bnd:biz.aQute.bnd.util:jar:6.4.0
[DEBUG]   Included: biz.aQute.bnd:biz.aQute.resolve:jar:6.4.0
[DEBUG]   Included: org.osgi:org.osgi.service.resolver:jar:1.1.1
[DEBUG]   Included: biz.aQute.bnd:biz.aQute.repository:jar:6.4.0
[DEBUG]   Included: org.osgi:org.osgi.service.coordinator:jar:1.0.2
[DEBUG]   Included: biz.aQute.bnd:biz.aQute.bndlib:jar:6.4.0
[DEBUG]   Included: org.osgi:org.osgi.util.tracker:jar:1.5.4
[DEBUG]   Included: org.osgi:org.osgi.service.log:jar:1.3.0
[DEBUG] Configuring mojo biz.aQute.bnd:bnd-maven-plugin:6.4.0:bnd-process from plugin realm ClassRealm[plugin>biz.aQute.bnd:bnd-maven-plugin:6.4.0, parent: jdk.internal.loader.ClassLoaders$AppClassLoader@5cb0d902]
[DEBUG] Configuring mojo 'biz.aQute.bnd:bnd-maven-plugin:6.4.0:bnd-process' with basic configurator -->
[DEBUG]   (f) bndfile = bnd.bnd
[DEBUG]   (f) classesDir = /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes
[DEBUG]   (f) finalName = sapl-extensions-api-3.0.0-SNAPSHOT
[DEBUG]   (f) includeClassesDir = true
[DEBUG]   (f) manifestPath = /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/META-INF/MANIFEST.MF
[DEBUG]   (f) mojoExecution = biz.aQute.bnd:bnd-maven-plugin:6.4.0:bnd-process {execution: default}
[DEBUG]   (f) outputDir = /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes
[DEBUG]   (f) packagingTypes = [jar, war]
[DEBUG]   (f) project = MavenProject: io.sapl:sapl-extensions-api:3.0.0-SNAPSHOT @ /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/pom.xml
[DEBUG]   (f) resources = [Resource {targetPath: null, filtering: false, FileSet {directory: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/resources, PatternSet [includes: {}, excludes: {}]}}]
[DEBUG]   (f) settings = org.apache.maven.execution.SettingsAdapter@4131f6db
[DEBUG]   (f) skip = false
[DEBUG]   (f) skipIfEmpty = false
[DEBUG]   (f) sourceDir = /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java
[DEBUG]   (f) webappDirectory = /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/sapl-extensions-api-3.0.0-SNAPSHOT
[DEBUG] -- end configuration --
[DEBUG] builder classpath: /home/oludwig/.m2/repository/io/projectreactor/reactor-core/3.6.1/reactor-core-3.6.1.jar:/home/oludwig/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar:/home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar:/home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar:/home/oludwig/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/oludwig/.m2/repository/org/osgi/org.osgi.annotation.bundle/2.0.0/org.osgi.annotation.bundle-2.0.0.jar:/home/oludwig/.m2/repository/org/osgi/org.osgi.annotation.versioning/1.1.2/org.osgi.annotation.versioning-1.1.2.jar:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar
[DEBUG] builder sourcepath: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java
[DEBUG] builder properties: {Bundle-License="Apache 2.0";link="https://www.apache.org/licenses/LICENSE-2.0", Bundle-SCM=url="https://github.com/heutelbeck/sapl-policy-engine/sapl-extensions-api",connection="scm:git:git://github.com/heutelbeck/sapl-policy-engine.git/sapl-extensions-api",developer-connection="scm:git:git@github.com:heutelbeck/sapl-policy-engine.git/sapl-extensions-api",tag=HEAD, Bundle-Name=SAPL Extensions API, Bundle-Description=Authorization Engine for Attribute Stream-Based Access Control
		(ASBAC), Bundle-Vendor=Dominic Heutelbeck, Bundle-DocURL=https://sapl.io/sapl-extensions-api, project.dir=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api, -snapshot=${tstamp}, Bundle-SymbolicName=sapl-extensions-api, project.sourcepath=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/main/java, project.output=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes, Bundle-Version=3.0.0.SNAPSHOT, Bundle-Developers=heutelbeck;email="dominic@heutelbeck.com";name="Dominic Heutelbeck";roles="Project Owner", project.buildpath=/home/oludwig/.m2/repository/io/projectreactor/reactor-core/3.6.1/reactor-core-3.6.1.jar:/home/oludwig/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.3/jackson-databind-2.15.3.jar:/home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar:/home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.3/jackson-core-2.15.3.jar:/home/oludwig/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.3/jackson-datatype-jdk8-2.15.3.jar:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/oludwig/.m2/repository/org/osgi/org.osgi.annotation.bundle/2.0.0/org.osgi.annotation.bundle-2.0.0.jar:/home/oludwig/.m2/repository/org/osgi/org.osgi.annotation.versioning/1.1.2/org.osgi.annotation.versioning-1.1.2.jar:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar}
[DEBUG] builder delta: true
[DEBUG] build
[DEBUG] parseClassFile(): path= resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/package-info.class
[DEBUG] visitClassFile(): path= resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/package-info.class
[DEBUG] parseClassFile(): path=io/sapl/api/functions/Function.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/Function.class
[DEBUG] parseClassFile(): path=io/sapl/api/functions/FunctionLibrary.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/FunctionLibrary.class
[DEBUG] parseClassFile(): path=io/sapl/api/functions/FunctionLibrarySupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/FunctionLibrarySupplier.class
[DEBUG] parseClassFile(): path=io/sapl/api/functions/StaticFunctionLibrarySupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/StaticFunctionLibrarySupplier.class
[DEBUG] parseClassFile(): path=io/sapl/api/functions/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/package-info.class
[DEBUG] parseClassFile(): path= resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/package-info.class
[DEBUG] visitClassFile(): path= resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/package-info.class
[DEBUG] parseClassFile(): path=io/sapl/api/interpreter/ExpressionArgument.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/ExpressionArgument.class
[DEBUG] parseClassFile(): path=io/sapl/api/interpreter/PolicyEvaluationException.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/PolicyEvaluationException.class
[DEBUG] parseClassFile(): path=io/sapl/api/interpreter/Trace.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Trace.class
[DEBUG] parseClassFile(): path=io/sapl/api/interpreter/Traced.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Traced.class
[DEBUG] parseClassFile(): path=io/sapl/api/interpreter/Val$NumericAwareComparator.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Val$NumericAwareComparator.class
[DEBUG] parseClassFile(): path=io/sapl/api/interpreter/Val.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Val.class
[DEBUG] parseClassFile(): path=io/sapl/api/interpreter/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/package-info.class
[DEBUG] parseClassFile(): path= resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/package-info.class
[DEBUG] visitClassFile(): path= resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/package-info.class
[DEBUG] parseClassFile(): path=io/sapl/api/pdp/AuthorizationDecision.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/AuthorizationDecision.class
[DEBUG] parseClassFile(): path=io/sapl/api/pdp/AuthorizationSubscription.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/AuthorizationSubscription.class
[DEBUG] parseClassFile(): path=io/sapl/api/pdp/AuthorizationSubscriptionInterceptor.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/AuthorizationSubscriptionInterceptor.class
[DEBUG] parseClassFile(): path=io/sapl/api/pdp/Decision.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/Decision.class
[DEBUG] parseClassFile(): path=io/sapl/api/pdp/TracedDecision.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/TracedDecision.class
[DEBUG] parseClassFile(): path=io/sapl/api/pdp/TracedDecisionInterceptor.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/TracedDecisionInterceptor.class
[DEBUG] parseClassFile(): path=io/sapl/api/pdp/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/package-info.class
[DEBUG] parseClassFile(): path= resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/package-info.class
[DEBUG] visitClassFile(): path= resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/package-info.class
[DEBUG] parseClassFile(): path=io/sapl/api/pip/Attribute.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/Attribute.class
[DEBUG] parseClassFile(): path=io/sapl/api/pip/EnvironmentAttribute.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/EnvironmentAttribute.class
[DEBUG] parseClassFile(): path=io/sapl/api/pip/PolicyInformationPoint.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/PolicyInformationPoint.class
[DEBUG] parseClassFile(): path=io/sapl/api/pip/PolicyInformationPointSupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/PolicyInformationPointSupplier.class
[DEBUG] parseClassFile(): path=io/sapl/api/pip/StaticPolicyInformationPointSupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/StaticPolicyInformationPointSupplier.class
[DEBUG] parseClassFile(): path=io/sapl/api/pip/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/package-info.class
[DEBUG] parseClassFile(): path= resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/package-info.class
[DEBUG] visitClassFile(): path= resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/package-info.class
[DEBUG] parseClassFile(): path=io/sapl/api/validation/Array.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Array.class
[DEBUG] parseClassFile(): path=io/sapl/api/validation/Bool.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Bool.class
[DEBUG] parseClassFile(): path=io/sapl/api/validation/Int.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Int.class
[DEBUG] parseClassFile(): path=io/sapl/api/validation/JsonObject.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/JsonObject.class
[DEBUG] parseClassFile(): path=io/sapl/api/validation/Long.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Long.class
[DEBUG] parseClassFile(): path=io/sapl/api/validation/Number.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Number.class
[DEBUG] parseClassFile(): path=io/sapl/api/validation/Schema.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Schema.class
[DEBUG] parseClassFile(): path=io/sapl/api/validation/Text.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Text.class
[DEBUG] parseClassFile(): path=io/sapl/api/validation/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/package-info.class
[DEBUG] get Manifest Info From Classpath for Jar:classes
[DEBUG] collecting Contracts  from classes
[DEBUG] get Manifest Info From Classpath for Jar:reactor-core-3.6.1
[DEBUG] collecting Contracts  from reactor-core-3.6.1
[DEBUG] get Manifest Info From Classpath for Jar:reactive-streams-1.0.4
[DEBUG] collecting Contracts  from reactive-streams-1.0.4
[DEBUG] get Manifest Info From Classpath for Jar:jackson-databind-2.15.3
[DEBUG] collecting Contracts  from jackson-databind-2.15.3
[DEBUG] get Manifest Info From Classpath for Jar:jackson-annotations-2.15.3
[DEBUG] collecting Contracts  from jackson-annotations-2.15.3
[DEBUG] get Manifest Info From Classpath for Jar:jackson-core-2.15.3
[DEBUG] collecting Contracts  from jackson-core-2.15.3
[DEBUG] get Manifest Info From Classpath for Jar:jackson-datatype-jdk8-2.15.3
[DEBUG] collecting Contracts  from jackson-datatype-jdk8-2.15.3
[DEBUG] get Manifest Info From Classpath for Jar:jakarta.validation-api-3.0.2
[DEBUG] collecting Contracts  from jakarta.validation-api-3.0.2
[DEBUG] get Manifest Info From Classpath for Jar:org.osgi.annotation.bundle-2.0.0
[DEBUG] collecting Contracts  from org.osgi.annotation.bundle-2.0.0
[DEBUG] get Manifest Info From Classpath for Jar:org.osgi.annotation.versioning-1.1.2
[DEBUG] collecting Contracts  from org.osgi.annotation.versioning-1.1.2
[DEBUG] get Manifest Info From Classpath for Jar:lombok-1.18.30
[DEBUG] collecting Contracts  from lombok-1.18.30
[DEBUG] collecting Contracts  from -define-contract
[DEBUG] begin ServiceComponent
[DEBUG] end
[DEBUG] begin CDIAnnotations
[DEBUG] visitClassFile(): path=io/sapl/api/functions/FunctionLibrarySupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/FunctionLibrarySupplier.class
[DEBUG] visitClassFile(): path=io/sapl/api/functions/StaticFunctionLibrarySupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/StaticFunctionLibrarySupplier.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/ExpressionArgument.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/ExpressionArgument.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/PolicyEvaluationException.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/PolicyEvaluationException.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/Trace.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Trace.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/Traced.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Traced.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/Val$NumericAwareComparator.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Val$NumericAwareComparator.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/Val.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Val.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/AuthorizationDecision.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/AuthorizationDecision.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/AuthorizationSubscription.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/AuthorizationSubscription.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/AuthorizationSubscriptionInterceptor.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/AuthorizationSubscriptionInterceptor.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/TracedDecision.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/TracedDecision.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/TracedDecisionInterceptor.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/TracedDecisionInterceptor.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/PolicyInformationPointSupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/PolicyInformationPointSupplier.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/StaticPolicyInformationPointSupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/StaticPolicyInformationPointSupplier.class
[DEBUG] end
[DEBUG] begin DSAnnotations
[DEBUG] end
[DEBUG] begin MetatypeAnnotations
[DEBUG] Analyzing for Metatype annotations: -metatypeannotations: *
[DEBUG] visitClassFile(): path=io/sapl/api/functions/Function.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/Function.class
[DEBUG] parseClassFile(): path=java/lang/annotation/Target.class resource=:jrt:/java.base/java/lang/annotation/Target.class:
[DEBUG] visitClassFile(): path=java/lang/annotation/Target.class resource=:jrt:/java.base/java/lang/annotation/Target.class:
[DEBUG] parseClassFile(): path=java/lang/annotation/Retention.class resource=:jrt:/java.base/java/lang/annotation/Retention.class:
[DEBUG] visitClassFile(): path=java/lang/annotation/Retention.class resource=:jrt:/java.base/java/lang/annotation/Retention.class:
[DEBUG] visitClassFile(): path=io/sapl/api/functions/FunctionLibrary.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/FunctionLibrary.class
[DEBUG] parseClassFile(): path=java/lang/annotation/Inherited.class resource=:jrt:/java.base/java/lang/annotation/Inherited.class:
[DEBUG] visitClassFile(): path=java/lang/annotation/Inherited.class resource=:jrt:/java.base/java/lang/annotation/Inherited.class:
[DEBUG] visitClassFile(): path=io/sapl/api/functions/FunctionLibrarySupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/FunctionLibrarySupplier.class
[DEBUG] parseClassFile(): path=java/lang/FunctionalInterface.class resource=:jrt:/java.base/java/lang/FunctionalInterface.class:
[DEBUG] visitClassFile(): path=java/lang/FunctionalInterface.class resource=:jrt:/java.base/java/lang/FunctionalInterface.class:
[DEBUG] visitClassFile(): path=io/sapl/api/functions/StaticFunctionLibrarySupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/StaticFunctionLibrarySupplier.class
[DEBUG] visitClassFile(): path=io/sapl/api/functions/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/package-info.class
[DEBUG] parseClassFile(): path=org/osgi/annotation/versioning/Version.class resource=:/home/oludwig/.m2/repository/org/osgi/org.osgi.annotation.versioning/1.1.2/org.osgi.annotation.versioning-1.1.2.jar(org/osgi/annotation/versioning/Version.class):
[DEBUG] visitClassFile(): path=org/osgi/annotation/versioning/Version.class resource=:/home/oludwig/.m2/repository/org/osgi/org.osgi.annotation.versioning/1.1.2/org.osgi.annotation.versioning-1.1.2.jar(org/osgi/annotation/versioning/Version.class):
[DEBUG] parseClassFile(): path=org/osgi/annotation/bundle/Export.class resource=:/home/oludwig/.m2/repository/org/osgi/org.osgi.annotation.bundle/2.0.0/org.osgi.annotation.bundle-2.0.0.jar(org/osgi/annotation/bundle/Export.class):
[DEBUG] visitClassFile(): path=org/osgi/annotation/bundle/Export.class resource=:/home/oludwig/.m2/repository/org/osgi/org.osgi.annotation.bundle/2.0.0/org.osgi.annotation.bundle-2.0.0.jar(org/osgi/annotation/bundle/Export.class):
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/ExpressionArgument.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/ExpressionArgument.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/PolicyEvaluationException.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/PolicyEvaluationException.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/Trace.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Trace.class
[DEBUG] parseClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/Traced.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Traced.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/Val$NumericAwareComparator.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Val$NumericAwareComparator.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/Val.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Val.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/package-info.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/AuthorizationDecision.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/AuthorizationDecision.class
[DEBUG] parseClassFile(): path=jakarta/validation/constraints/NotNull.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/constraints/NotNull.class):
[DEBUG] visitClassFile(): path=jakarta/validation/constraints/NotNull.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/constraints/NotNull.class):
[DEBUG] parseClassFile(): path=com/fasterxml/jackson/annotation/JsonInclude.class resource=:/home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar(com/fasterxml/jackson/annotation/JsonInclude.class):
[DEBUG] visitClassFile(): path=com/fasterxml/jackson/annotation/JsonInclude.class resource=:/home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar(com/fasterxml/jackson/annotation/JsonInclude.class):
[DEBUG] parseClassFile(): path=lombok/NonNull.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/NonNull.class):
[DEBUG] visitClassFile(): path=lombok/NonNull.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/NonNull.class):
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/AuthorizationSubscription.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/AuthorizationSubscription.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/AuthorizationSubscriptionInterceptor.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/AuthorizationSubscriptionInterceptor.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/Decision.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/Decision.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/TracedDecision.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/TracedDecision.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/TracedDecisionInterceptor.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/TracedDecisionInterceptor.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/package-info.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/Attribute.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/Attribute.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/EnvironmentAttribute.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/EnvironmentAttribute.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/PolicyInformationPoint.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/PolicyInformationPoint.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/PolicyInformationPointSupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/PolicyInformationPointSupplier.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/StaticPolicyInformationPointSupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/StaticPolicyInformationPointSupplier.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/package-info.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Array.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Array.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Bool.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Bool.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Int.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Int.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/JsonObject.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/JsonObject.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Long.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Long.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Number.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Number.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Schema.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Schema.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Text.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Text.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/package-info.class
[DEBUG] visitClassFile(): path=io/sapl/api/functions/Function.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/Function.class
[DEBUG] visitClassFile(): path=io/sapl/api/functions/FunctionLibrary.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/FunctionLibrary.class
[DEBUG] visitClassFile(): path=io/sapl/api/functions/FunctionLibrarySupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/FunctionLibrarySupplier.class
[DEBUG] visitClassFile(): path=io/sapl/api/functions/StaticFunctionLibrarySupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/StaticFunctionLibrarySupplier.class
[DEBUG] visitClassFile(): path=io/sapl/api/functions/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/package-info.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/ExpressionArgument.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/ExpressionArgument.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/PolicyEvaluationException.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/PolicyEvaluationException.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/Trace.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Trace.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/Traced.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Traced.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/Val$NumericAwareComparator.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Val$NumericAwareComparator.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/Val.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Val.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/package-info.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/AuthorizationDecision.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/AuthorizationDecision.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/AuthorizationSubscription.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/AuthorizationSubscription.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/AuthorizationSubscriptionInterceptor.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/AuthorizationSubscriptionInterceptor.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/Decision.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/Decision.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/TracedDecision.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/TracedDecision.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/TracedDecisionInterceptor.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/TracedDecisionInterceptor.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/package-info.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/Attribute.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/Attribute.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/EnvironmentAttribute.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/EnvironmentAttribute.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/PolicyInformationPoint.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/PolicyInformationPoint.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/PolicyInformationPointSupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/PolicyInformationPointSupplier.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/StaticPolicyInformationPointSupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/StaticPolicyInformationPointSupplier.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/package-info.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Array.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Array.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Bool.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Bool.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Int.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Int.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/JsonObject.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/JsonObject.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Long.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Long.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Number.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Number.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Schema.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Schema.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Text.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Text.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/package-info.class
[DEBUG] end
[DEBUG] begin aQute.bnd.plugin.jpms.JPMSAnnotations@141874c8
[DEBUG] end
[DEBUG] begin aQute.bnd.classindex.ClassIndexerAnalyzer@147ea894
[DEBUG] end
[DEBUG] visitClassFile(): path=io/sapl/api/functions/Function.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/Function.class
[DEBUG] visitClassFile(): path=io/sapl/api/functions/FunctionLibrary.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/FunctionLibrary.class
[DEBUG] visitClassFile(): path=io/sapl/api/functions/FunctionLibrarySupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/FunctionLibrarySupplier.class
[DEBUG] visitClassFile(): path=io/sapl/api/functions/StaticFunctionLibrarySupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/StaticFunctionLibrarySupplier.class
[DEBUG] visitClassFile(): path=io/sapl/api/functions/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/functions/package-info.class
[DEBUG] visitClassFile(): path=org/osgi/annotation/bundle/Export.class resource=:/home/oludwig/.m2/repository/org/osgi/org.osgi.annotation.bundle/2.0.0/org.osgi.annotation.bundle-2.0.0.jar(org/osgi/annotation/bundle/Export.class):
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/ExpressionArgument.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/ExpressionArgument.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/PolicyEvaluationException.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/PolicyEvaluationException.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/Trace.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Trace.class
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/Traced.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Traced.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/Val$NumericAwareComparator.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Val$NumericAwareComparator.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/Val.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/Val.class
[DEBUG] visitClassFile(): path=io/sapl/api/interpreter/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/interpreter/package-info.class
[DEBUG] visitClassFile(): path=org/osgi/annotation/bundle/Export.class resource=:/home/oludwig/.m2/repository/org/osgi/org.osgi.annotation.bundle/2.0.0/org.osgi.annotation.bundle-2.0.0.jar(org/osgi/annotation/bundle/Export.class):
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/AuthorizationDecision.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/AuthorizationDecision.class
[DEBUG] visitClassFile(): path=jakarta/validation/constraints/NotNull.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/constraints/NotNull.class):
[DEBUG] parseClassFile(): path=jakarta/validation/Constraint.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/Constraint.class):
[DEBUG] visitClassFile(): path=jakarta/validation/Constraint.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/Constraint.class):
[DEBUG] visitClassFile(): path=jakarta/validation/constraints/NotNull.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/constraints/NotNull.class):
[DEBUG] visitClassFile(): path=jakarta/validation/Constraint.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/Constraint.class):
[DEBUG] visitClassFile(): path=com/fasterxml/jackson/annotation/JsonInclude.class resource=:/home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar(com/fasterxml/jackson/annotation/JsonInclude.class):
[DEBUG] parseClassFile(): path=com/fasterxml/jackson/annotation/JacksonAnnotation.class resource=:/home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar(com/fasterxml/jackson/annotation/JacksonAnnotation.class):
[DEBUG] visitClassFile(): path=com/fasterxml/jackson/annotation/JacksonAnnotation.class resource=:/home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar(com/fasterxml/jackson/annotation/JacksonAnnotation.class):
[DEBUG] visitClassFile(): path=com/fasterxml/jackson/annotation/JsonInclude.class resource=:/home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar(com/fasterxml/jackson/annotation/JsonInclude.class):
[DEBUG] visitClassFile(): path=com/fasterxml/jackson/annotation/JacksonAnnotation.class resource=:/home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar(com/fasterxml/jackson/annotation/JacksonAnnotation.class):
[DEBUG] visitClassFile(): path=com/fasterxml/jackson/annotation/JsonInclude.class resource=:/home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar(com/fasterxml/jackson/annotation/JsonInclude.class):
[DEBUG] visitClassFile(): path=com/fasterxml/jackson/annotation/JacksonAnnotation.class resource=:/home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar(com/fasterxml/jackson/annotation/JacksonAnnotation.class):
[DEBUG] visitClassFile(): path=lombok/NonNull.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/NonNull.class):
[DEBUG] visitClassFile(): path=lombok/NonNull.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/NonNull.class):
[DEBUG] visitClassFile(): path=lombok/NonNull.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/NonNull.class):
[DEBUG] visitClassFile(): path=lombok/NonNull.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/NonNull.class):
[DEBUG] visitClassFile(): path=lombok/NonNull.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/NonNull.class):
[DEBUG] visitClassFile(): path=lombok/NonNull.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/NonNull.class):
[DEBUG] visitClassFile(): path=lombok/NonNull.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/NonNull.class):
[DEBUG] visitClassFile(): path=lombok/NonNull.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/NonNull.class):
[DEBUG] visitClassFile(): path=lombok/NonNull.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/NonNull.class):
[DEBUG] visitClassFile(): path=lombok/NonNull.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/NonNull.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/AuthorizationSubscription.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/AuthorizationSubscription.class
[DEBUG] visitClassFile(): path=jakarta/validation/constraints/NotNull.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/constraints/NotNull.class):
[DEBUG] visitClassFile(): path=jakarta/validation/Constraint.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/Constraint.class):
[DEBUG] visitClassFile(): path=jakarta/validation/constraints/NotNull.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/constraints/NotNull.class):
[DEBUG] visitClassFile(): path=jakarta/validation/Constraint.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/Constraint.class):
[DEBUG] visitClassFile(): path=jakarta/validation/constraints/NotNull.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/constraints/NotNull.class):
[DEBUG] visitClassFile(): path=jakarta/validation/Constraint.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/Constraint.class):
[DEBUG] visitClassFile(): path=jakarta/validation/constraints/NotNull.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/constraints/NotNull.class):
[DEBUG] visitClassFile(): path=jakarta/validation/Constraint.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/Constraint.class):
[DEBUG] visitClassFile(): path=jakarta/validation/constraints/NotNull.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/constraints/NotNull.class):
[DEBUG] visitClassFile(): path=jakarta/validation/Constraint.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/Constraint.class):
[DEBUG] visitClassFile(): path=jakarta/validation/constraints/NotNull.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/constraints/NotNull.class):
[DEBUG] visitClassFile(): path=jakarta/validation/Constraint.class resource=:/home/oludwig/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar(jakarta/validation/Constraint.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=lombok/Generated.class resource=:/home/oludwig/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar(lombok/Generated.class):
[DEBUG] visitClassFile(): path=com/fasterxml/jackson/annotation/JsonInclude.class resource=:/home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar(com/fasterxml/jackson/annotation/JsonInclude.class):
[DEBUG] visitClassFile(): path=com/fasterxml/jackson/annotation/JacksonAnnotation.class resource=:/home/oludwig/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.3/jackson-annotations-2.15.3.jar(com/fasterxml/jackson/annotation/JacksonAnnotation.class):
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/AuthorizationSubscriptionInterceptor.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/AuthorizationSubscriptionInterceptor.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/Decision.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/Decision.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/TracedDecision.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/TracedDecision.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/TracedDecisionInterceptor.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/TracedDecisionInterceptor.class
[DEBUG] visitClassFile(): path=io/sapl/api/pdp/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pdp/package-info.class
[DEBUG] visitClassFile(): path=org/osgi/annotation/bundle/Export.class resource=:/home/oludwig/.m2/repository/org/osgi/org.osgi.annotation.bundle/2.0.0/org.osgi.annotation.bundle-2.0.0.jar(org/osgi/annotation/bundle/Export.class):
[DEBUG] visitClassFile(): path=io/sapl/api/pip/Attribute.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/Attribute.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/EnvironmentAttribute.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/EnvironmentAttribute.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/PolicyInformationPoint.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/PolicyInformationPoint.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/PolicyInformationPointSupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/PolicyInformationPointSupplier.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/StaticPolicyInformationPointSupplier.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/StaticPolicyInformationPointSupplier.class
[DEBUG] visitClassFile(): path=io/sapl/api/pip/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/pip/package-info.class
[DEBUG] visitClassFile(): path=org/osgi/annotation/bundle/Export.class resource=:/home/oludwig/.m2/repository/org/osgi/org.osgi.annotation.bundle/2.0.0/org.osgi.annotation.bundle-2.0.0.jar(org/osgi/annotation/bundle/Export.class):
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Array.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Array.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Bool.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Bool.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Int.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Int.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/JsonObject.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/JsonObject.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Long.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Long.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Number.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Number.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Schema.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Schema.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/Text.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/Text.class
[DEBUG] visitClassFile(): path=io/sapl/api/validation/package-info.class resource=/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/io/sapl/api/validation/package-info.class
[DEBUG] visitClassFile(): path=org/osgi/annotation/bundle/Export.class resource=:/home/oludwig/.m2/repository/org/osgi/org.osgi.annotation.bundle/2.0.0/org.osgi.annotation.bundle-2.0.0.jar(org/osgi/annotation/bundle/Export.class):
[DEBUG] parseClassFile(): path=java/lang/annotation/Annotation.class resource=:jrt:/java.base/java/lang/annotation/Annotation.class:
[DEBUG] parseClassFile(): path=java/util/function/Supplier.class resource=:jrt:/java.base/java/util/function/Supplier.class:
[DEBUG] parseClassFile(): path=java/util/Comparator.class resource=:jrt:/java.base/java/util/Comparator.class:
[DEBUG] parseClassFile(): path=java/io/Serializable.class resource=:jrt:/java.base/java/io/Serializable.class:
[DEBUG] parseClassFile(): path=java/util/function/UnaryOperator.class resource=:jrt:/java.base/java/util/function/UnaryOperator.class:
[DEBUG] parseClassFile(): path=java/lang/Comparable.class resource=:jrt:/java.base/java/lang/Comparable.class:
[DEBUG] begin aQute.bnd.plugin.jpms.JPMSModuleInfoPlugin@7ecca48
[DEBUG] end
[DEBUG] begin aQute.bnd.plugin.spi.SPIDescriptorGenerator@3d5b2c1e
[DEBUG] end
[DEBUG] Bundle lastModified: 2024-01-11 10:53:41.420
[DEBUG] Creating '/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/classes/META-INF/MANIFEST.MF'
[INFO] 
[INFO] --- maven-resources-plugin:3.3.1:testResources (default-testResources) @ sapl-extensions-api ---
[DEBUG] Configuring mojo org.apache.maven.plugins:maven-resources-plugin:3.3.1:testResources from plugin realm ClassRealm[plugin>org.apache.maven.plugins:maven-resources-plugin:3.3.1, parent: jdk.internal.loader.ClassLoaders$AppClassLoader@5cb0d902]
[DEBUG] Configuring mojo 'org.apache.maven.plugins:maven-resources-plugin:3.3.1:testResources' with basic configurator -->
[DEBUG]   (f) addDefaultExcludes = true
[DEBUG]   (f) buildFilters = []
[DEBUG]   (f) encoding = UTF-8
[DEBUG]   (f) escapeWindowsPaths = true
[DEBUG]   (f) fileNameFiltering = false
[DEBUG]   (s) includeEmptyDirs = false
[DEBUG]   (s) outputDirectory = /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/target/test-classes
[DEBUG]   (s) overwrite = false
[DEBUG]   (f) project = MavenProject: io.sapl:sapl-extensions-api:3.0.0-SNAPSHOT @ /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/pom.xml
[DEBUG]   (s) resources = [Resource {targetPath: null, filtering: false, FileSet {directory: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/test/resources, PatternSet [includes: {}, excludes: {}]}}]
[DEBUG]   (f) session = org.apache.maven.execution.MavenSession@36a8ebca
[DEBUG]   (f) skip = false
[DEBUG]   (f) supportMultiLineFiltering = false
[DEBUG]   (f) useBuildFilters = true
[DEBUG]   (s) useDefaultDelimiters = true
[DEBUG] -- end configuration --
[DEBUG] properties used:
[DEBUG] argLine: 
[DEBUG] assertj.version: 3.24.2
[DEBUG] classworlds.conf: /usr/share/maven/bin/m2.conf
[DEBUG] docker-registry-url: ghcr.io/heutelbeck
[DEBUG] dockerfile-maven-plugin.version: 1.4.13
[DEBUG] env.CLUTTER_IM_MODULE: ibus
[DEBUG] env.DBUS_SESSION_BUS_ADDRESS: unix:path=/run/user/1000/bus
[DEBUG] env.DESKTOP_SESSION: plasma
[DEBUG] env.DISPLAY: :0
[DEBUG] env.GPG_AGENT_INFO: /run/user/1000/gnupg/S.gpg-agent:0:1
[DEBUG] env.GTK2_RC_FILES: /etc/gtk-2.0/gtkrc:/home/oludwig/.gtkrc-2.0:/home/oludwig/.config/gtkrc-2.0
[DEBUG] env.GTK_IM_MODULE: ibus
[DEBUG] env.GTK_MODULES: gail:atk-bridge
[DEBUG] env.GTK_RC_FILES: /etc/gtk/gtkrc:/home/oludwig/.gtkrc:/home/oludwig/.config/gtkrc
[DEBUG] env.HOME: /home/oludwig
[DEBUG] env.IM_CONFIG_PHASE: 1
[DEBUG] env.INVOCATION_ID: 4d0c85f78f15415a8a6bbd493fe92992
[DEBUG] env.JOURNAL_STREAM: 8:35051
[DEBUG] env.KDE_APPLICATIONS_AS_SCOPE: 1
[DEBUG] env.KDE_FULL_SESSION: true
[DEBUG] env.KDE_SESSION_UID: 1000
[DEBUG] env.KDE_SESSION_VERSION: 5
[DEBUG] env.LANG: de_DE.UTF-8
[DEBUG] env.LOGNAME: oludwig
[DEBUG] env.LS_COLORS: rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.swp=00;90:*.tmp=00;90:*.dpkg-dist=00;90:*.dpkg-old=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:
[DEBUG] env.MANAGERPID: 1830
[DEBUG] env.MAVEN_CMD_LINE_ARGS:  -B -e -X --log-file test2.log process-test-resources
[DEBUG] env.MAVEN_PROJECTBASEDIR: /home/oludwig/dev/uni/sapl-policy-engine
[DEBUG] env.OLDPWD: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api
[DEBUG] env.PAM_KWALLET5_LOGIN: /run/user/1000/kwallet5.socket
[DEBUG] env.PATH: /home/oludwig/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/home/oludwig/.local/share/JetBrains/Toolbox/scripts
[DEBUG] env.PWD: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api
[DEBUG] env.QTWEBENGINE_DICTIONARIES_PATH: /usr/share/hunspell-bdic/
[DEBUG] env.QT_ACCESSIBILITY: 1
[DEBUG] env.QT_AUTO_SCREEN_SCALE_FACTOR: 0
[DEBUG] env.QT_IM_MODULE: ibus
[DEBUG] env.SESSION_MANAGER: local/PC-Ole:@/tmp/.ICE-unix/2105,unix/PC-Ole:/tmp/.ICE-unix/2105
[DEBUG] env.SHELL: /usr/bin/bash
[DEBUG] env.SHLVL: 1
[DEBUG] env.SSH_AGENT_PID: 1953
[DEBUG] env.SSH_AUTH_SOCK: /tmp/ssh-XXXXXXa9uWzq/agent.1885
[DEBUG] env.SYSTEMD_EXEC_PID: 2371
[DEBUG] env.TERM: xterm-256color
[DEBUG] env.TERMINAL_EMULATOR: JetBrains-JediTerm
[DEBUG] env.TERM_SESSION_ID: 9464fcdd-8713-4ae9-a759-5d6cd477a0a5
[DEBUG] env.TOOLBOX_VERSION: 2.1.3.18901
[DEBUG] env.USER: oludwig
[DEBUG] env.XAUTHORITY: /home/oludwig/.Xauthority
[DEBUG] env.XCURSOR_SIZE: 24
[DEBUG] env.XCURSOR_THEME: breeze_cursors
[DEBUG] env.XDG_CONFIG_DIRS: /home/oludwig/.config/kdedefaults:/etc/xdg:/usr/share/desktop-base/kf5-settings
[DEBUG] env.XDG_CURRENT_DESKTOP: KDE
[DEBUG] env.XDG_DATA_DIRS: /home/oludwig/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share
[DEBUG] env.XDG_RUNTIME_DIR: /run/user/1000
[DEBUG] env.XDG_SEAT: seat0
[DEBUG] env.XDG_SEAT_PATH: /org/freedesktop/DisplayManager/Seat0
[DEBUG] env.XDG_SESSION_CLASS: user
[DEBUG] env.XDG_SESSION_DESKTOP: KDE
[DEBUG] env.XDG_SESSION_ID: 3
[DEBUG] env.XDG_SESSION_PATH: /org/freedesktop/DisplayManager/Session1
[DEBUG] env.XDG_SESSION_TYPE: x11
[DEBUG] env.XDG_VTNR: 7
[DEBUG] env.XMODIFIERS: @im=ibus
[DEBUG] env._: /usr/bin/mvn
[DEBUG] failsafe.version: 3.1.2
[DEBUG] file.encoding: UTF-8
[DEBUG] file.separator: /
[DEBUG] guice.version: 5.1.0
[DEBUG] jacoco.version: 0.8.11
[DEBUG] java.class.path: /usr/share/maven/boot/plexus-classworlds-2.x.jar
[DEBUG] java.class.version: 61.0
[DEBUG] java.home: /usr/lib/jvm/java-17-openjdk-amd64
[DEBUG] java.io.tmpdir: /tmp
[DEBUG] java.library.path: /usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
[DEBUG] java.runtime.name: OpenJDK Runtime Environment
[DEBUG] java.runtime.version: 17.0.9+9-Debian-1deb12u1
[DEBUG] java.specification.name: Java Platform API Specification
[DEBUG] java.specification.vendor: Oracle Corporation
[DEBUG] java.specification.version: 17
[DEBUG] java.vendor: Debian
[DEBUG] java.vendor.url: https://tracker.debian.org/openjdk-17
[DEBUG] java.vendor.url.bug: https://bugs.debian.org/openjdk-17
[DEBUG] java.version: 17.0.9
[DEBUG] java.version.date: 2023-10-17
[DEBUG] java.vm.compressedOopsMode: Zero based
[DEBUG] java.vm.info: mixed mode, sharing
[DEBUG] java.vm.name: OpenJDK 64-Bit Server VM
[DEBUG] java.vm.specification.name: Java Virtual Machine Specification
[DEBUG] java.vm.specification.vendor: Oracle Corporation
[DEBUG] java.vm.specification.version: 17
[DEBUG] java.vm.vendor: Debian
[DEBUG] java.vm.version: 17.0.9+9-Debian-1deb12u1
[DEBUG] jdk.debug: release
[DEBUG] junit.version: 5.10.0
[DEBUG] library.jansi.path: /usr/share/maven/lib/jansi-native
[DEBUG] license-maven-plugin.version: 4.2
[DEBUG] line.separator: 

[DEBUG] lombok.version: 1.18.30
[DEBUG] maven.build.timestamp: 2024-01-12T08:46:50Z
[DEBUG] maven.build.version: Apache Maven 3.8.7
[DEBUG] maven.compiler.release: 17
[DEBUG] maven.compiler.source: 17
[DEBUG] maven.compiler.target: 17
[DEBUG] maven.conf: /usr/share/maven/conf
[DEBUG] maven.home: /usr/share/maven
[DEBUG] maven.multiModuleProjectDirectory: /home/oludwig/dev/uni/sapl-policy-engine
[DEBUG] maven.version: 3.8.7
[DEBUG] native.encoding: UTF-8
[DEBUG] os.arch: amd64
[DEBUG] os.name: Linux
[DEBUG] os.version: 6.1.0-16-amd64
[DEBUG] path.separator: :
[DEBUG] project.baseUri: file:/home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/
[DEBUG] project.build.sourceEncoding: UTF-8
[DEBUG] project.reporting.outputEncoding: UTF-8
[DEBUG] reactornetty.version: 1.0.40
[DEBUG] rsocket.version: 1.1.4
[DEBUG] snakeyaml.version: 2.2
[DEBUG] sonar.exclusions: **/xtext-gen/**/*,**/xtend-gen/**/*,**/emf-gen/**/*
[DEBUG] sonar.host.url: https://sonar.ftk.de
[DEBUG] sonar.version: 3.9.1.2184
[DEBUG] spotify.hamcrest.version: 1.3.2
[DEBUG] springboot.version: 3.2.1
[DEBUG] sun.arch.data.model: 64
[DEBUG] sun.boot.library.path: /usr/lib/jvm/java-17-openjdk-amd64/lib
[DEBUG] sun.cpu.endian: little
[DEBUG] sun.io.unicode.encoding: UnicodeLittle
[DEBUG] sun.java.command: org.codehaus.plexus.classworlds.launcher.Launcher -B -e -X --log-file test2.log process-test-resources
[DEBUG] sun.java.launcher: SUN_STANDARD
[DEBUG] sun.jnu.encoding: UTF-8
[DEBUG] sun.management.compiler: HotSpot 64-Bit Tiered Compilers
[DEBUG] sun.stderr.encoding: UTF-8
[DEBUG] sun.stdout.encoding: UTF-8
[DEBUG] tycho.version: 3.0.5
[DEBUG] user.country: DE
[DEBUG] user.dir: /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api
[DEBUG] user.home: /home/oludwig
[DEBUG] user.language: de
[DEBUG] user.name: oludwig
[DEBUG] vaadin.version: 24.2.6
[DEBUG] xtext.version: 2.32.0
[DEBUG] Using 'UTF-8' encoding to copy filtered resources.
[DEBUG] Using 'UTF-8' encoding to copy filtered properties files.
[DEBUG] resource with targetPath null
directory /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/test/resources
excludes []
includes []
[INFO] skip non existing resourceDirectory /home/oludwig/dev/uni/sapl-policy-engine/sapl-extensions-api/src/test/resources
[DEBUG] no user filter components
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.399 s
[INFO] Finished at: 2024-01-12T09:46:50+01:00
[INFO] ------------------------------------------------------------------------
